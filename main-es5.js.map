{"version":3,"sources":["webpack:///src/app/validators/category.validator.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/_model/purchaseOrder.ts","webpack:///src/app/ui_modules/table/sales-table.component.ts","webpack:///src/app/ui_modules/table/sales-table.component.html","webpack:///src/app/menu/navigation-bar/navigation-bar.component.ts","webpack:///src/app/menu/navigation-bar/navigation-bar.component.html","webpack:///src/app/_services/token-storage.service.js","webpack:///src/app/products/create-product/create-product.component.ts","webpack:///src/app/products/create-product/create-product.component.html","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/purchase-order/purchase-order.component.ts","webpack:///src/app/purchase-order/purchase-order.component.html","webpack:///src/app/_services/supplier.service.ts","webpack:///src/app/_model/sales-order.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/_services/category.service.ts","webpack:///src/app/locations/location-list/location-list.component.ts","webpack:///src/app/locations/location-list/location-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/balance-sheet/supplier-balance-sheet/update-supplier-balance-sheet/supplier-update-balance-sheet.component.ts","webpack:///src/app/balance-sheet/supplier-balance-sheet/update-supplier-balance-sheet/supplier-update-balance-sheet.component.html","webpack:///src/app/_services/location.service.ts","webpack:///src/app/products/product-list/product-list.component.ts","webpack:///src/app/products/product-list/product-list.component.html","webpack:///src/app/_services/token-storage.service.ts","webpack:///src/app/reports/sales-report/sales-report.component.ts","webpack:///src/app/reports/sales-report/sales-report.component.html","webpack:///src/app/reports/sales-report-details/sales-report-details.component.ts","webpack:///src/app/reports/sales-report-details/sales-report-details.component.html","webpack:///src/app/menu/action-bar-item/action-bar-item.component.ts","webpack:///src/app/menu/action-bar-item/action-bar-item.component.html","webpack:///src/app/suppliers/create-supplier/create-supplier.component.ts","webpack:///src/app/suppliers/create-supplier/create-supplier.component.html","webpack:///src/app/_services/bank.service.ts","webpack:///src/app/_model/company.ts","webpack:///src/app/ui_modules/table/table.component.ts","webpack:///src/app/ui_modules/table/table.component.html","webpack:///src/app/balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component.ts","webpack:///src/app/balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component.html","webpack:///src/app/_services/purchase-order.service.ts","webpack:///src/app/companies/company-list/company-list.component.ts","webpack:///src/app/companies/company-list/company-list.component.html","webpack:///src/app/_services/sales-order.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/menu/mobile-menu/mobile-menu.component.ts","webpack:///src/app/menu/mobile-menu/mobile-menu.component.html","webpack:///src/app/_services/customer.service.ts","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/categories/create-category/create-category.component.ts","webpack:///src/app/categories/create-category/create-category.component.html","webpack:///src/app/balance-sheet/customer-balance-sheet/update-customer-balance-sheet/customer-update-balance-sheet.component.ts","webpack:///src/app/balance-sheet/customer-balance-sheet/update-customer-balance-sheet/customer-update-balance-sheet.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/categories/category-list/category-list.component.ts","webpack:///src/app/categories/category-list/category-list.component.html","webpack:///src/app/sales-order/sales-order.component.ts","webpack:///src/app/sales-order/sales-order.component.html","webpack:///src/app/_model/category.ts","webpack:///src/app/_model/http-client-helper.ts","webpack:///src/app/reports/profit-summary/profit-summary.component.ts","webpack:///src/app/reports/profit-summary/profit-summary.component.html","webpack:///src/app/pages/notfound/notfound.component.ts","webpack:///src/app/pages/notfound/notfound.component.html","webpack:///src/app/locations/create-location/create-location.component.ts","webpack:///src/app/locations/create-location/create-location.component.html","webpack:///src/app/reports/stock-book/stock-book.component.ts","webpack:///src/app/reports/stock-book/stock-book.component.html","webpack:///src/app/_services/company.service.ts","webpack:///src/app/reports/purchase-report-details/purchase-report-details.component.ts","webpack:///src/app/reports/purchase-report-details/purchase-report-details.component.html","webpack:///src/app/companies/create-company/create-company.component.ts","webpack:///src/app/companies/create-company/create-company.component.html","webpack:///src/app/menu/action-bar/action-bar.component.ts","webpack:///src/app/menu/action-bar/action-bar.component.html","webpack:///src/app/update-bank-info/update-bank-info.component.ts","webpack:///src/app/update-bank-info/update-bank-info.component.html","webpack:///src/app/utils/numToWords.js","webpack:///src/app/customers/customers-list/customers-list.component.ts","webpack:///src/app/customers/customers-list/customers-list.component.html","webpack:///src/app/suppliers/supplier-list/supplier-list.component.ts","webpack:///src/app/suppliers/supplier-list/supplier-list.component.html","webpack:///src/app/reports/purchase-report/purchase-report.component.ts","webpack:///src/app/reports/purchase-report/purchase-report.component.html","webpack:///src/app/_services/product.service.ts","webpack:///src/app/UpdateBankDetails/UpdateBankDetails.component.ts","webpack:///src/app/UpdateBankDetails/UpdateBankDetails.component.html","webpack:///src/app/auth.guard.ts","webpack:///src/app/balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component.ts","webpack:///src/app/balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/customers/create-customer/create-customer.component.ts","webpack:///src/app/customers/create-customer/create-customer.component.html","webpack:///src/app/_model/location.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["autocompleteStringValidator","validOptions","control","option","find","categoryName","value","RegisterComponent","authService","router","form","showMsg","isSuccessful","isSignUpFailed","errorMessage","seasons","selection","list","id","role","registerForm","required","data","controls","username","email","password","phoneNumber","register","subscribe","console","log","clear","setTimeout","err","error","item","findIndex","s","event","index","u","filter","user","setValue","onSubmit","selector","templateUrl","styleUrls","PurchaseOrder","SalesTableComponent","tokenStorageService","httpClient","totalPrice","totalTaxAmount","totalQty","amountInWords","JSON","stringify","window","salesOrder","invoiceData","sessionStorage","getItem","parse","setItem","response","document","title","_calculateTotals","getUser","print","salesOrderDetail","forEach","amount","price","qtyOrdered","taxAmount","product","gst","Math","round","get","res","postResponse","dbImage","image","printPDF","NavigationBarComponent","dialog","auth","super_admin","role_super_admin","admin","role_admin","role_user","localStorage","logout","navigateByUrl","navigate","TOKEN_KEY","USER_KEY","TokenStorageService","token","removeItem","ɵfac","TokenStorageService_Factory","t","ɵprov","factory","providedIn","type","args","CreateProductComponent","location","productService","categoryService","dialogRef","myControl","options","listOfCategories","productForm","productName","pattern","min","hsnNo","currentPrice","qty","profit","locationForm","cityName","productUpdateData","category","close","fetchData","valid","updateProduct","addProduct","_findCategory","undefined","createProduct","successMsg","closeModal","errorMsg","createCategory","selectedCategoryName","getCategoryList","setValidators","_valueChangesListner","filterValue","toLowerCase","supplierList","includes","filteredOptions","valueChanges","pipe","_filter","AUTH_API","baseURL","httpOptions","headers","AuthService","http","credentials","post","PurchaseOrderComponent","_fb","supplierService","modalService","purchaseOrderService","route","displayedColumns","previousBalance","totalAmount","singleClickDisable","minStartDate","Date","purchaseOrder","popupTitle","popupsubtitle","popupDescription","popupMarkup","suppliers","products","_createForm","purchaserOrderForm","purchaseOrderDetailArr","removeAt","purchaseOrderDetailData","selectedProduct","_findProduct","_addProduct","searchProduct","nativeElement","blur","selectedSupplier","supplier","_findSupplier","_supplierBalanceData","getSupplierList","x","supplierName","push","getProductsList","amountPaid","getCurrentBalance","open","modalContent","ariaLabelledBy","result","then","reason","isPrintReq","content","length","showAlert","saveSupplier","currentBalance","purchaseOrderDetail","dueDate","getTime","billDate","getTotalBalance","status","alertMsg","fields","join","size","createPurchaseOrder","refreshAfterSave","_printPdf","gstIn","supplierID","getPurchaseOrderBalaceBySupplier","balance","url","origin","myWindow","group","max","isProductAdded","element","alert","newRow","_initRow","filteredSuppliers","_filterSupplier","filteredProducts","_filterProduct","productList","totalQtyCal","Number","motorVehicleNo","array","save","SupplierService","baseUrl","put","responseType","opts","params","SalesOrder","UpdateProduct","HomeComponent","customerService","salesOrderService","reload","productsCount","getCustomerList","customersCount","suppliersCount","getPurchaseOrderList","purchaseOrdersCount","getSalesOrderList","salesOrdersCount","getAllCustomerSalesOrderBalance","totalCustomerBalance","getAllSupplierPurchaseOrderBalace","totalSupplierBalance","CategoryService","LocationListComponent","locationService","getLocationList","target","dataSource","trim","width","disableClose","afterClosed","updateLocationModal","paginator","deleteLocation","applyFilter","openDialog","environment","production","SupplierUpdateBalanceSheetComponent","payAmount","updateSupplierBalance","updatePurchaseOrder","LocationService","Location","ProductListComponent","companyService","getProductList","productId","deleteProduct","SalesReportComponent","productColumns","range","start","end","dateRange","searchData","salesReports","_setData","searchText","reset","filteredData","startTime","endTime","salesReport","dueDateTime","customer","customerName","indexOf","deleteSalesOrder","salesOrderID","getSalesOrder","winHtml","winUrl","URL","createObjectURL","Blob","clearDate","SalesReportDetailsComponent","deleteOrderDetails","salesOrderDetailID","ActionBarItemComponent","shadow","CreateSupplierComponent","supplierUpdateData","supplierForm","companyName","company","getCompanyList","getlocationList","updateSupplier","createSupplier","citiesList","companies","BankService","bank","Company","TableComponent","SupplierBalanceSheetComponent","getAllSupplierPurchaseOrderBalanceSheet","sort","a","b","updateBalance","PurchaseOrderService","invoice","CompanyListComponent","updateComapny","deleteCompany","SalesOrderService","customerID","AppComponent","isLoggedIn","showAdminBoard","showModeratorBoard","getToken","roles","MobileMenuComponent","CustomerService","tokenStorage","header","set","DashboardComponent","isVisible","urlPath","getCurrentPage","path","split","e","CreateCategoryComponent","categoryUpdateData","categoryForm","categoryDesc","updateCategory","saveCategory","UpdateBalanceSheetComponent","updateCustomerBalance","updateSalesOrder","AppModule","dateAdapter","setLocale","declarations","imports","providers","bootstrap","CategoryListComponent","deleteCategory","SalesOrderComponent","selected_deliver_status","selected_payment_mode","updatedProductSalePriceList","priceChangeHistory","changeText","customers","salesOrderForm","temp","salesOrderDetailArr","tempIndex","splice","salesOrderDetailData","calculateAllAmounts","selectedCustomer","_findCustomer","_customerBalanceData","callback","isStockAvail","getCustomerObj","deliverStatus","paymentMode","currentDue","createSalesOrder","updateProductList","getSalesOrderBalaceByCustomer","customerList","updatedPrice","previousPrice","productItem","existingProduct","filteredCustomers","_filterCustomer","Category","HttpClientHelper","ProfitSummaryComponent","displayedColumns1","displayedColumnsProduct","transaction","dueAmount","upi","expense","openingBalance","dueCollection","difference","noOfNotes","total","notesOf10sTotal","notesOf20sTotal","notesOf50sTotal","notesOf100sTotal","notesOf200sTotal","notesOf500sTotal","notesOf2000sTotal","totalNoOfNotesCount","notesCount10","notesCount2000","notesCount20","notesCount50","notesCount100","notesCount200","notesCount500","reactiveForm","notesOfNotes2000","maxLength","notesOfNotes500","notesOfNotes200","notesOfNotes100","notesOfNotes50","notesOfNotes20","notesOfNotes10","selectedValue","getBarChartReport","getData","dataSource1","dataSourceProduct","calculate","dateData","NotfoundComponent","CreateLocationComponent","locationUpdateData","updateLocation","saveLocation","createLocation","StockBookComponent","totalProfit","totalQtySold","startDate","endDate","getStockBookByDate","stockData","CompanyService","PurchaseReportDetailsComponent","purchaseOrderDetailID","CreateCompanyComponent","companyUpdateData","companyForm","updateCompany","saveCompany","createCompany","ActionBarComponent","_transformer","node","level","expandable","children","name","treeControl","treeFlattener","dataSource_Order","dataSourceReports","dataSourceBalance","dataSourceSummary","hasChild","_","expanded","selected","TREE_DATA","Order_DATA","REPORTS","SUMMARY","_redirectToPage","changeDetection","OnPush","UpdateBankInfoComponent","bankService","uploadedImage","files","imageFormData","FormData","append","observe","successResponse","body","message","bankName","toUpperCase","branchName","accountNo","ifscCode","gstNo","panNo","brandName","createBank","viewImage","onImageUpload","imageUploadAction","numberInWords","num","toString","n","substr","match","str","CustomersListComponent","updateCustomer","deleteCustomer","SupplierListComponent","deleteSupplier","PurchaseReportComponent","purchaseReports","purchaseReport","deleteOrder","purchaseOrderID","ProductService","UpdateBankDetails","map","AuthGuard","state","BalanceSheetComponent","getAllCustomerSalesOrderBalanceSheet","routes","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","useHash","exports","LoginComponent","hide","loginForm","minLength","reqData","login","saveToken","accessToken","saveUser","DemoMaterialModule","CreateCustomerComponent","customerUpdateData","customerForm","saveCustomer","createCustomer","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Category } from './../_model/category';\r\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function autocompleteStringValidator(validOptions: Array<Category>): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const option = validOptions.find(option => option?.categoryName === control.value);\r\n    \r\n    if (option) {\r\n      return null  /* valid option selected */\r\n    }\r\n    return { 'invalidAutocompleteString': { value: control.value } }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    form: any = {};\n    showMsg: boolean = false;\n    isSuccessful = false;\n    isSignUpFailed = false;\n    errorMessage = '';\n    registerForm: FormGroup;\n    favoriteSeason: string;\n    seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n    constructor(private authService: AuthService, private router: Router) {\n    }\n\n    ngOnInit() {\n        this.registerForm = new FormGroup({\n            'username': new FormControl(null, [Validators.required]),\n            'email': new FormControl(null),\n            'password': new FormControl(null, [Validators.required]),\n            'role': new FormControl(null, [Validators.required]),\n            'phoneNumber': new FormControl(null),\n        });\n    }\n\n    clear() {\n        this.registerForm = new FormGroup({\n            'username': new FormControl(null),\n            'email': new FormControl(null),\n            'password': new FormControl(null),\n            'role': new FormControl(null),\n            'phoneNumber': new FormControl(null),\n        });\n    }\n\n    onSubmit() {\n        let data = {\n            \"username\": this.registerForm.controls.username.value,\n            \"email\": this.registerForm.controls.email.value,\n            \"password\": this.registerForm.controls.password.value,\n            \"phoneNumber\": this.registerForm.controls.phoneNumber.value,\n            \"role\": [this.registerForm.controls.role.value],\n        };\n\n        this.authService.register(data).subscribe(\n            data => {\n                console.log(data);\n                this.isSuccessful = true;\n                this.isSignUpFailed = false;\n                this.clear();\n\n                this.showMsg = true;\n                setTimeout(() => {\n                    this.showMsg = false;\n                }, 2000);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n                this.isSignUpFailed = true;\n            }\n        );\n    }\n\n    selection = [];\n\n    list = [\n        { id: 1, role: 'admin' },\n        { id: 2, role: 'user' }\n    ];\n\n    getSelection(item) {\n        return this.selection.findIndex(s => s.id === item.id) !== -1;\n    }\n\n    changeHandler(item: any, event: KeyboardEvent) {\n        const id = item.id;\n\n        const index = this.selection.findIndex(u => u.id === id);\n        if (index === -1) {\n            // ADD TO SELECTION\n            // this.selection.push(item);\n            this.selection = [...this.selection, item];\n        } else {\n            // REMOVE FROM SELECTION\n            this.selection = this.selection.filter(user => user.id !== item.id)\n            // this.selection.splice(index, 1)\n        }\n    }\n\n    save() {\n        this.form;\n        this.form.controls['role'].setValue(this.selection);\n        console.log(this.selection);\n    }\n}\n","<div class=\"middle\" *ngIf=\"showMsg\">\n    <div class=\"col-xs-6\">\n        <p class=\"alert alert-success\">\n            <strong>Sales Order Successfully created!!</strong>\n        </p>\n    </div>\n</div>\n<div class=\"col-md-12\">\n    <div class=\"\">\n        <mat-card style=\"width: 90%;\">\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                <h1 style=\"text-align: center;\">Registration</h1>\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Username</mat-label>\n                                    <input matInput formControlName=\"username\" required>\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Password</mat-label>\n                                    <input matInput formControlName=\"password\" required>\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Email</mat-label>\n                                    <input matInput formControlName=\"email\" required>\n                                </mat-form-field>\n                            </p>\n                        </div>\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Phone number</mat-label>\n                                    <input matInput formControlName=\"phoneNumber\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Role</mat-label>\n                                    <mat-select formControlName=\"role\">\n                                        <mat-option value=\"admin\">Admin</mat-option>\n                                        <mat-option value=\"user\">User</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"button-container\">\n                    <span style=\"color: red;\"> {{errorMessage}}</span>\n                </div>\n                <div class=\"button-container\">\n                    <button class=\"btn btn-primary\" type=\"submit\"\n                        style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\n                    </button>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n</div>","import {PurchaseOrderDetail} from './purchaseOrderDetail';\nimport {Supplier} from './supplier';\n\nexport class PurchaseOrder {\n    status: string;\n    supplier: Supplier;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    purchaseOrderDetail: Array<PurchaseOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n    billDate: string;\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\r\nimport { numberInWords } from '../../utils/numToWords.js';\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './sales-table.component.html',\r\n  styleUrls: ['./sales-table.component.css']\r\n})\r\nexport class SalesTableComponent implements OnInit {\r\n  response: any;\r\n  totalPrice: number = 0;\r\n  totalTaxAmount: number = 0;\r\n  totalQty: number = 0;\r\n  amountInWords: string = '';\r\n  user: any = null;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService, private httpClient : HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.viewImage();\r\n    console.log('this.response', JSON.stringify((window['response'])));\r\n    let salesOrder = window['response'];\r\n    if (!salesOrder) {\r\n      const invoiceData = sessionStorage.getItem('invoiceData');\r\n      if (invoiceData) {\r\n        salesOrder = JSON.parse(invoiceData);\r\n      }\r\n    } else {\r\n      sessionStorage.setItem('invoiceData', JSON.stringify(salesOrder));\r\n    }\r\n\r\n    this.response = salesOrder;\r\n    document.title = 'Tax Invoice';\r\n    this._calculateTotals();\r\n    this.user = this.tokenStorageService.getUser();\r\n  }\r\n\r\n  printPDF() {\r\n    window.print();\r\n  }\r\n\r\n  private _calculateTotals() {\r\n    let totalPrice = 0;\r\n    let totalTaxAmount = 0;\r\n    let totalQty = 0;\r\n\r\n    console.log('response?.salesOrderDetail', this.response?.salesOrderDetail);\r\n    this.response?.salesOrderDetail?.forEach((salesOrder) => {\r\n      const amount = salesOrder?.price * salesOrder?.qtyOrdered;\r\n      const taxAmount = amount * salesOrder?.product?.gst / 100;\r\n      totalPrice += amount;\r\n      totalTaxAmount += taxAmount;\r\n      totalQty +=salesOrder?.qtyOrdered;\r\n    });\r\n\r\n    this.totalQty = Math.round(totalQty);\r\n    this.totalPrice = Math.round(totalPrice);\r\n    this.totalTaxAmount = Math.round(totalTaxAmount);\r\n\r\n    this.amountInWords = numberInWords(this.totalPrice);\r\n  }\r\n\r\n  uploadedImage: File;\r\n  dbImage: any;\r\n  postResponse: any;\r\n  successResponse: string;\r\n  image: any;\r\n\r\n  viewImage() {  \r\n    this.httpClient.get('http://localhost:8080/bank/image/info/logo3.jfif')\r\n      .subscribe(\r\n        res => {\r\n          this.postResponse = res;\r\n          this.dbImage = 'data:image/jpeg;base64,' + this.postResponse.image;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"page-content container\">\r\n    <div class=\"page-header text-blue-d2\">\r\n        <div class=\"container px-0\">\r\n            <div class=\"row pt-4\">\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <div class=\"d-flex\">\r\n                        <!--<div *ngIf=dbImage>\r\n                            <img [src]=\"dbImage\" class=\"logo\"\r\n                            style=\"width: 70px; height: 90%\">\r\n                        </div> -->\r\n                        <img src=\"/assets/images/indian-kisan-care.png\" class=\"logo\"\r\n                            style=\"width: 10%; height: 10%\">\r\n                        <div style=\"text-align: center; width: 70%\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\r\n                                    {{user?.bankAccount?.brandName}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.bankAccount?.gstNo}} | PAN:\r\n                                    {{user?.bankAccount?.panNo}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.bankAccount?.phoneNumber}} |\r\n                                    E:\r\n                                    {{user?.bankAccount?.email}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\" />\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Customer Name:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.customerName}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    GSTIN/UIN:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.gstIn !== '' ? response?.customer?.gstIn : 'NA'}}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Mobile Number:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.phoneNumber !== '' ? response?.customer?.phoneNumber : 'NA'}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Address:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.location?.cityName !== null ? response?.customer?.location?.cityName : 'NA'}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\r\n                                    {{(response?.billDate | date: 'dd/MM/yyyy hh:mm a')}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\r\n                                    {{(response?.dueDate !== null ? (response?.dueDate | date : 'dd/MM/yyyy'): 'NA')}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\r\n                                    <span class=\"text-600 text-90\">\r\n                                        {{response?.status}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <!-- ----------------------------------------- -->\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">S.No</th>\r\n                                <th scope=\"col\">Item & Description</th>\r\n                                <th scope=\"col\">HSN/SAC</th>\r\n                                <th scope=\"col\">Sell Price</th>\r\n                                <th scope=\"col\">Qty</th>\r\n                                <th scope=\"col\">GST%</th>\r\n                                <th scope=\"col\">Tax Amt</th>\r\n                                <!--<th scope=\"col\">Tax Amount</th>-->\r\n                                <th scope=\"col\">Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let cart of response?.salesOrderDetail; index as i;\">\r\n                                <td>{{i + 1}}.</td>\r\n                                <td>{{cart?.product?.productName}}</td>\r\n                                <td>{{cart?.product?.hsnNo}}</td>\r\n                                <td class=\"text-right pr-4\">₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\r\n                                <td class=\"text-right pr-4\">{{cart?.qtyOrdered || 0}}</td>\r\n                                <td>{{cart?.product?.gst}}%</td>\r\n                                <td class=\"text-right pr-4\">₹{{(cart?.qtyOrdered * (cart?.price *\r\n                                    (cart?.product?.gst/100))).toLocaleString('en-IN') || 0}}\r\n                                </td>\r\n                                <!-- <td class=\"text-right pr-4\">₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\r\n                                </td>-->\r\n                                <td class=\"text-right pr-4\">₹{{((cart?.price - (cart?.price * (cart?.product?.gst/100)))\r\n                                    * cart?.qtyOrdered).toLocaleString('en-IN') || 0}}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th colspan=\"7\"></th>\r\n                                <th class=\"text-right pr-4\">₹{{(totalPrice-totalTaxAmount).toLocaleString('en-IN')}}\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"7\" style=\"text-align: center;\">CGST</th>\r\n                                <th class=\"text-right pr-4\">₹{{(totalTaxAmount * 0.5).toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"7\" style=\"text-align: center;\">SGST</th>\r\n                                <th class=\"text-right pr-4\">₹{{(totalTaxAmount * 0.5).toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"4\">Total</th>\r\n                                <th class=\"text-right pr-4\">{{totalQty.toLocaleString('en-IN')}}</th>\r\n                                <th class=\"text-right pr-4\"></th>\r\n                                <th class=\"text-right pr-4\"></th>\r\n                                <th class=\"text-right pr-4\">₹{{totalPrice.toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\r\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\r\n                        {{ amountInWords }} only.\r\n                    </span>\r\n                    <hr>\r\n                    <!-- ---------------- -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    Cash\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    NA\r\n                                </span>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <div *ngIf=\"user.bankAccount != null\">\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Bank:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.bankName}}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.accountNo}}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.branchName}}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.ifscCode}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\r\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\r\n                                </div>\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\r\n                                    ₹{{(response?.currentBalance < 0 ) ? 0 :\r\n                                        response?.currentBalance.toLocaleString('en-IN') || 0 }} </div>\r\n\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ?\r\n                                                (response?.previousBalance - (response?.currentBalance)) :\r\n                                                0).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{(response?.previousBalance).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <br><br><br>\r\n                                        <div style=\"text-align: center;\">\r\n                                            <div class=\"my-2\">\r\n                                                <span class=\"text-600 text-90 font-weight-bold\">Authorised\r\n                                                    Signatory</span>\r\n                                            </div>\r\n                                            <div class=\"my-2\">\r\n                                                <span\r\n                                                    class=\"text-600 text-90 font-weight-bold\">({{user?.bankAccount?.brandName}})</span>\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- --------------------- -->\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <hr>\r\n                    <div style=\"text-align: center;\">\r\n                        <span class=\"text-300 text-30\">This is a computer generated invoice</span>\r\n                    </div>\r\n                    <div style=\"text-align: center;\" class=\"print-btn\">\r\n                        <button (click)=\"printPDF()\">Print</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>","import { Router } from '@angular/router';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RegisterComponent } from 'src/app/register/register.component';\r\nimport { AppComponent } from 'src/app/app.component';\r\n\r\n@Component({\r\n  selector: 'app-navigation-bar',\r\n  templateUrl: './navigation-bar.component.html',\r\n  styleUrls: ['./navigation-bar.component.css']\r\n})\r\nexport class NavigationBarComponent {\r\n  username: string;\r\n  super_admin = AppComponent.role_super_admin;\r\n  admin = AppComponent.role_admin;\r\n  user = AppComponent.role_user;\r\n\r\n  constructor(public dialog: MatDialog, private auth: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.username = localStorage.getItem('username')\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n\r\n  openDialog() {\r\n    this.router.navigate(['dashboard/register']);\r\n  }\r\n  \r\n  updateBankDetails() {\r\n    this.router.navigate(['dashboard/updateBankDetails']);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-light navbar-expand-sm bg-white shadow-sm\">\n    <div class=\"container-fluid\">\n        <span class=\"navbar-brand\"></span>\n        <div class=\"navbar-nav\">\n            <mat-icon class=\"person-img\" [matMenuTriggerFor]=\"menu\">person</mat-icon>\n            <mat-menu #menu=\"matMenu\">\n                <p *ngIf=\"super_admin\" mat-menu-item (click)=\"openDialog()\" style=\"border: white;\">Manage Account</p>\n                <p *ngIf=\"super_admin || admin\" mat-menu-item (click)=\"updateBankDetails()\" style=\"border: white;\">\n                    Update Bank Details</p>\n                <p mat-menu-item style=\"border: white;\" (click)=\"logout()\">Log Out</p>\n            </mat-menu>\n            <span class=\"person-img\" [matMenuTriggerFor]=\"menu\">{{username.substr(0,1).toUpperCase() +\n                username.substr(1)}}</span>\n        </div>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nexport class TokenStorageService {\n    constructor() {\n    }\n    signOut() {\n        window.sessionStorage.clear();\n    }\n    saveToken(token) {\n        window.sessionStorage.removeItem(TOKEN_KEY);\n        window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    getToken() {\n        return sessionStorage.getItem(TOKEN_KEY);\n    }\n    saveUser(user) {\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    getUser() {\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n}\nTokenStorageService.ɵfac = function TokenStorageService_Factory(t) { return new (t || TokenStorageService)(); };\nTokenStorageService.ɵprov = i0.ɵɵdefineInjectable({ token: TokenStorageService, factory: TokenStorageService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TokenStorageService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n//# sourceMappingURL=token-storage.service.js.map","import { Category } from './../../_model/category';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { autocompleteStringValidator } from 'src/app/validators/category.validator';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\n\r\n@Component({\r\n    selector: 'app-create-product',\r\n    templateUrl: './create-product.component.html',\r\n    styleUrls: ['./create-product.component.css']\r\n})\r\nexport class CreateProductComponent implements OnInit {\r\n    myControl = new FormControl();\r\n    options: Category[] = [];\r\n    filteredOptions: Observable<Category[]>;\r\n    listOfCategories = [];\r\n    productForm: FormGroup;\r\n    locationForm: FormGroup;\r\n    productUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    citiesList: any;\r\n    companies: any;\r\n\r\n    constructor(private location: LocationService,\r\n        private productService: ProductService,\r\n        private categoryService: CategoryService,\r\n        public dialogRef: MatDialogRef<CreateProductComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.productForm = new FormGroup({\r\n            categoryName: new FormControl(null, [Validators.required]),\r\n            productName: new FormControl(null, [Validators.required]),\r\n            price: new FormControl(null),\r\n            gst: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$'), Validators.min(0)]),\r\n            hsnNo: new FormControl(null),\r\n            currentPrice: new FormControl(null),\r\n            qty: new FormControl(null),\r\n            profit: new FormControl(null),\r\n        });\r\n\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required]),\r\n        });\r\n\r\n        if (data != null) {\r\n            this.productUpdateData = data?.data;\r\n            this.productForm.controls['categoryName'].setValue(this.productUpdateData.category.categoryName);\r\n            this.productForm.controls['productName'].setValue(this.productUpdateData.productName);\r\n            this.productForm.controls['price'].setValue(this.productUpdateData.price);\r\n            this.productForm.controls['gst'].setValue(this.productUpdateData.gst);\r\n            this.productForm.controls['hsnNo'].setValue(this.productUpdateData.hsnNo);\r\n            this.productForm.controls['currentPrice'].setValue(this.productUpdateData.currentPrice);\r\n            this.productForm.controls['qty'].setValue(this.productUpdateData.qty);\r\n            this.productForm.controls['profit'].setValue(this.productUpdateData.profit);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n            this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.fetchData();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.productForm.valid) {\r\n            if (this.productUpdateData?.id != null) {\r\n                this.updateProduct();\r\n            } else {\r\n                this.addProduct();\r\n            }\r\n        }\r\n    }\r\n\r\n    addProduct() {\r\n        const categoryName = this.productForm.controls.categoryName.value;\r\n        let category = this._findCategory(categoryName);\r\n\r\n        if (category == undefined) {\r\n            category = { 'categoryName': categoryName };\r\n        }\r\n\r\n        let hsnNo = this.productForm.controls.hsnNo.value;\r\n        if (hsnNo === null) {\r\n            hsnNo = 'NA';\r\n        }\r\n\r\n        let data = {\r\n            productName: this.productForm.controls.productName.value,\r\n            //price: this.productForm.controls.price.value,\r\n            gst: this.productForm.controls.gst.value,\r\n            hsnNo: hsnNo,\r\n            currentPrice: this.productForm.controls.currentPrice.value,\r\n            //qty: this.productForm.controls.qty.value,\r\n            category: category\r\n        };\r\n\r\n        this.productService.createProduct(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Product Successfully Updated..!';\r\n                // this.getCategoryList();\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    saveCategory(categoryName: string) {\r\n        let data = {\r\n            categoryName: categoryName\r\n        }\r\n        this.categoryService.createCategory(data).subscribe();\r\n    }\r\n\r\n    updateProduct() {\r\n        const selectedCategoryName = this.productForm.controls.categoryName.value;\r\n        const category = this._findCategory(selectedCategoryName);\r\n        let data = {\r\n            id: this.productUpdateData.id,\r\n            productName: this.productForm.controls.productName.value,\r\n            price: this.productForm.controls.price.value,\r\n            gst: this.productForm.controls.gst.value,\r\n            hsnNo: this.productForm.controls.hsnNo.value,\r\n            currentPrice: this.productForm.controls.currentPrice.value,\r\n            qty: this.productForm.controls.qty.value,\r\n            profit: this.productForm.controls.profit.value,\r\n            category,\r\n        };\r\n        this.productService.updateProduct(data).subscribe(res => {\r\n            if (res != null) {\r\n                let s = 0;\r\n                this.successMsg = 'Product Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n\r\n    }\r\n\r\n    getCategoryList() {\r\n        this.categoryService.getCategoryList().subscribe(data => {\r\n            this.options = data;\r\n            this.productForm.get('categoryName').setValidators([autocompleteStringValidator(data), Validators.required]);\r\n        });\r\n    }\r\n\r\n    fetchData() {\r\n        this.categoryService.getCategoryList().subscribe(data => {\r\n            this.listOfCategories = data;\r\n            this._valueChangesListner();\r\n        });\r\n    }\r\n\r\n    private _filter(value: string): Category[] {\r\n        if (!value) {\r\n            return this.listOfCategories;\r\n        }\r\n        const filterValue = value.toLowerCase();\r\n        const supplierList = this.listOfCategories.filter(option => option.categoryName.toLowerCase().includes(filterValue))\r\n        return supplierList;\r\n    }\r\n\r\n    private _findCategory(categoryName: string) {\r\n        return this.listOfCategories.find(option => option?.categoryName === categoryName);\r\n    }\r\n\r\n    private _valueChangesListner() {\r\n        this.filteredOptions = this.productForm.controls['categoryName'].valueChanges.pipe(\r\n            startWith(''),\r\n            map(value => this._filter(value))\r\n        );\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id==null\">\r\n        <h4 class=\"title\">Add Product</h4>\r\n    </div>\r\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id!=null\">\r\n        <h4 class=\"title\">Update Product</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"productForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"productName\" matInput placeholder=\"Product\" required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"categoryName\" [matAutocomplete]=\"supplierAuto\" aria-label=\"Number\" matInput\r\n                    placeholder=\"Category\" type=\"text\">\r\n                <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption>\r\n                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option?.categoryName\">\r\n                        {{option?.categoryName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"currentPrice\" matInput placeholder=\"SALE PRICE\">\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"hsnNo\" matInput placeholder=\"HSN/SAC\">\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"gst\" matInput placeholder=\"GST%\" required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!productForm.valid\" class=\"btn btn-primary\" type=\"submit\"\r\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\nconst AUTH_API = HttpClientHelper.baseURL + '/auth/';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    login(credentials): Observable<any> {\n        return this.http.post(AUTH_API + 'signin', {\n            username: credentials.username,\n            password: credentials.password\n        }, httpOptions);\n    }\n\n    register(user): Observable<any> {\n        return this.http.post(AUTH_API + 'signup', {\n            username: user.username,\n            email: user.email,\n            password: user.password,\n            role : user.role,\n        }, httpOptions);\n    }\n\n    logout() {\n        localStorage.clear();\n    }\n}\n","import { MatTableDataSource } from '@angular/material/table';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { Product } from '../_model/product';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from '../_services/product.service';\r\nimport { PurchaseOrder } from '../_model/purchaseOrder';\r\nimport { PurchaseOrderService } from '../_services/purchase-order.service';\r\nimport { Supplier } from '../_model/supplier';\r\nimport { SupplierService } from '../_services/supplier.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-purchase-order',\r\n  templateUrl: './purchase-order.component.html',\r\n  styleUrls: ['./purchase-order.component.css']\r\n})\r\nexport class PurchaseOrderComponent implements OnInit {\r\n  purchaseOrderDetailData: any;\r\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'totalAmount'];\r\n  filteredSuppliers: Observable<Supplier[]>;\r\n  filteredProducts: Observable<Product[]>;\r\n\r\n  suppliers: Supplier[];\r\n  products: Product[];\r\n\r\n  previousBalance = 0;\r\n  totalQty = 0;\r\n  totalAmount = 0;\r\n\r\n  purchaserOrderForm: FormGroup;\r\n  singleClickDisable = false;\r\n\r\n  minStartDate = new Date();\r\n  purchaseOrder: PurchaseOrder = new PurchaseOrder();\r\n  @ViewChild('searchProduct') searchProduct: ElementRef;\r\n  popupTitle = \"\";\r\n  popupsubtitle = \"\";\r\n  popupDescription = \"\";\r\n  @ViewChild('modalContent') modalContent: ElementRef;\r\n  popupMarkup = \"\";\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private productService: ProductService,\r\n    private supplierService: SupplierService,\r\n    private modalService: NgbModal,\r\n    private purchaseOrderService: PurchaseOrderService, private route: Router) {\r\n\r\n    this.suppliers = [];\r\n    this.products = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.singleClickDisable = false;\r\n    this.fetchData();\r\n    this._createForm();\r\n    console.log('this.purchaserOrderForm', this.purchaserOrderForm);\r\n  }\r\n\r\n  removeProduct(index: number) {\r\n    this.purchaseOrderDetailArr.removeAt(index);\r\n    this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\r\n  }\r\n\r\n  selectedProduct(selectedProduct: string) {\r\n    this.purchaserOrderForm.controls['productName'].setValue(null);\r\n    const product = this._findProduct(selectedProduct);\r\n    this._addProduct(product);\r\n    this.searchProduct.nativeElement.blur()\r\n  }\r\n\r\n  selectedSupplier(selectedSupplier: string) {\r\n    const supplier = this._findSupplier(selectedSupplier);\r\n    this._supplierBalanceData(supplier?.id);\r\n  }\r\n\r\n  fetchData() {\r\n    this.suppliers = [];\r\n    this.supplierService.getSupplierList().subscribe(data => {\r\n      data.forEach(x => {\r\n        if (x.supplierName != '') {\r\n          this.suppliers.push(x);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.productService.getProductsList().subscribe(data => {\r\n      this.products = data;\r\n      this._valueChangesListner();\r\n    });\r\n  }\r\n\r\n  getCurrentBalance() {\r\n    return this.totalAmount - this.amountPaid.value;\r\n  }\r\n\r\n  getTotalBalance() {\r\n    return this.previousBalance + this.getCurrentBalance();\r\n  }\r\n\r\n  showMsg: boolean = false;\r\n\r\n\r\n  showAlert(popupTitle: string, popupDescription: string, popupsubtitle: string, popupMarkup: string = \"\") {\r\n    this.popupTitle = popupTitle;\r\n    this.popupsubtitle = popupsubtitle;\r\n    this.popupDescription = popupDescription;\r\n    this.popupMarkup = popupMarkup;\r\n\r\n    this.modalService.open(this.modalContent, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  save(isPrintReq: boolean, content: any) {\r\n    this.singleClickDisable = true;\r\n    if (this.purchaseOrderDetailArr.value.length === 0) {\r\n      // alert('please select products, before submitting');\r\n      this.showAlert(\"Error\", 'please select products, before submitting', \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    }\r\n    const supplierName = this.purchaserOrderForm.get('supplierName').value;\r\n    let supplier = this._findSupplier(supplierName);\r\n\r\n    const purchaseOrder: PurchaseOrder = new PurchaseOrder();\r\n\r\n    if (supplier === undefined) {\r\n      supplier = this.saveSupplier(supplierName);\r\n    }\r\n    supplier.phoneNumber = this.purchaserOrderForm.get('motorVehicleNo').value;\r\n    purchaseOrder.supplier = supplier;\r\n    purchaseOrder.currentBalance = this.getCurrentBalance();\r\n    purchaseOrder.purchaseOrderDetail = this.purchaseOrderDetailArr.value;\r\n    purchaseOrder.totalPrice = this.totalAmount;\r\n    //purchaseOrder.vehicleNo = this.purchaserOrderForm.get('motorVehicleNo').value;\r\n    purchaseOrder.amountPaid = this.purchaserOrderForm.get('amountPaid').value;\r\n    purchaseOrder.dueDate = this.purchaserOrderForm.get('dueDate').value?.getTime();\r\n    purchaseOrder.billDate = this.purchaserOrderForm.get('billDate').value?.getTime();\r\n    purchaseOrder.previousBalance = this.getTotalBalance();\r\n\r\n    if (purchaseOrder.amountPaid < 0) {\r\n      // alert('Amount paid should be positive');\r\n      this.showAlert(\"Error\", 'Amount paid should be positive', \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    } else if (this.getTotalBalance() < 0) {\r\n      // alert('Amount paid should be equals to balance');\r\n      this.showAlert(\"Error\", 'Amount paid should be equals to balance', \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    } else if (this.getTotalBalance() <= 0) {\r\n      purchaseOrder.status = 'PAID';\r\n    } else if (purchaseOrder.amountPaid > 0) {\r\n      purchaseOrder.status = 'PARTIAL';\r\n    } else {\r\n      purchaseOrder.status = 'DUE';\r\n    }\r\n\r\n    if ((purchaseOrder.status === 'DUE' || purchaseOrder.status === 'PARTIAL') &&\r\n      (supplier.supplierName === \"\" || supplier.phoneNumber === \"\")) {\r\n      let alertMsg = \"<p>Please provide below. <br>\";\r\n      let fields = [];\r\n      if (supplier.supplierName === \"\") {\r\n        fields.push(`<span class=\"text-danger\">Supplier name</span>`);\r\n      }\r\n      if (supplier.phoneNumber === \"\") {\r\n        fields.push(`<span class=\"text-danger\">Phone number</span>`);\r\n      }\r\n      if (purchaseOrder.dueDate === undefined) {\r\n        fields.push(`<span class=\"text-danger\">Due date</span>`);\r\n      }\r\n      alertMsg = alertMsg + fields.join(\"<br>\") + \"</p>\";\r\n      this.showAlert(\"Error\", \"\", \"\", alertMsg);\r\n      this.singleClickDisable = false;\r\n      return;\r\n    }\r\n\r\n    if (purchaseOrder.amountPaid == null) {\r\n      purchaseOrder.amountPaid = 0.0;\r\n    }\r\n\r\n    this.purchaseOrder = purchaseOrder;\r\n\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size: 'sm' }).result.then((result) => {\r\n      this.purchaseOrderService\r\n        .createPurchaseOrder(purchaseOrder).subscribe(data => {\r\n          console.log(data);\r\n          this.singleClickDisable = false;\r\n          this.refreshAfterSave();\r\n          if (isPrintReq) {\r\n            this._printPdf(data);\r\n            //window.location.reload();\r\n          } else {\r\n            this.showMsg = true;\r\n            setTimeout(() => {\r\n              this.showMsg = false;\r\n            }, 2000);\r\n          }\r\n        },\r\n          error => {\r\n            console.log(error);\r\n            this.singleClickDisable = false;\r\n          });\r\n    }, (reason) => {\r\n      this.singleClickDisable = false;\r\n    });\r\n  }\r\n\r\n  saveSupplier(supplierName: string): any {\r\n    let data = {\r\n      supplierName: supplierName,\r\n      gstIn: 'NA',\r\n      phoneNumber: 'NA'\r\n    };\r\n    return data;;\r\n  }\r\n\r\n  refreshAfterSave() {\r\n    //this.route.navigate(['purchaseOrder'])\r\n    //this.route.navigateByUrl('/dashboard');\r\n    //window.location.reload();\r\n    this.previousBalance = 0;\r\n    this.totalAmount = 0;\r\n    this.purchaseOrderDetailData = [];\r\n    this._createForm();\r\n    this.fetchData();\r\n    this.totalQty = 0;\r\n  }\r\n\r\n  private _supplierBalanceData(supplierID: any) {\r\n    this.purchaseOrderService.getPurchaseOrderBalaceBySupplier(supplierID).subscribe((data: any) => {\r\n      this.previousBalance = data.balance;\r\n      this.purchaserOrderForm.get('motorVehicleNo').setValue(data.supplier.phoneNumber);\r\n    }, (error: any) => console.log(error));\r\n  }\r\n\r\n  private _printPdf(response) {\r\n    //const url = `${location.origin}/praveen-traders/#table`;\r\n    const url = `${location.origin}/#table`;\r\n    const myWindow = window.open(url, \"_blank\", \"width=800,height=600,left=250,right=150\");\r\n    myWindow['response'] = response;\r\n  }\r\n\r\n  private _filterSupplier(value: string): Supplier[] {\r\n    if (!value) {\r\n      this.previousBalance = 0.00;\r\n      return this.suppliers;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    const supplierList = this.suppliers.filter(option => option.supplierName.toLowerCase().includes(filterValue))\r\n    if (supplierList.length == 0) {\r\n      this.previousBalance = 0.00;\r\n    }\r\n    return supplierList;\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    if (!value) {\r\n      return this.products;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(option => option.productName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _findProduct(value: string): Product {\r\n    return this.products.find(option => option.productName === value);\r\n  }\r\n\r\n  private _findSupplier(value: string): Supplier {\r\n    return this.suppliers.find(option => option.supplierName === value);\r\n  }\r\n\r\n  private _initRow(product) {\r\n    return this._fb.group({\r\n      price: [product.price, [Validators.required, Validators.min(1), Validators.max(1000000)]],\r\n      qtyOrdered: [1, [Validators.required, Validators.min(1), Validators.max(10000)]],\r\n      product: [product]\r\n    });\r\n  }\r\n\r\n  private _addProduct(product: Product) {\r\n    let isProductAdded = true;\r\n    this.purchaseOrderDetailArr.value.forEach(element => {\r\n      if (product.productName === element.product.productName) {\r\n        alert('Product is already Added!!');\r\n        isProductAdded = false;\r\n      }\r\n    });\r\n\r\n    if (isProductAdded) {\r\n      const newRow = this._initRow(product);\r\n      this.purchaseOrderDetailArr.push(newRow);\r\n      this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\r\n    }\r\n  }\r\n\r\n  private _valueChangesListner() {\r\n    this.filteredSuppliers = this.purchaserOrderForm.controls['supplierName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterSupplier(value))\r\n    );\r\n\r\n    this.filteredProducts = this.purchaserOrderForm.controls['productName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProduct(value))\r\n    );\r\n\r\n    this.purchaseOrderDetailArr.valueChanges.subscribe((productList) => {\r\n      let totalAmount = 0;\r\n      let totalQtyCal = 0;\r\n      productList.forEach(product => {\r\n        const amount = Number(product.qtyOrdered) * Number(product.price);\r\n        //const taxAmount = amount * (product.product?.gst || 0) / 100;\r\n        //totalAmount += amount + taxAmount;\r\n        totalQtyCal += product.qtyOrdered;\r\n        totalAmount += amount;\r\n      });\r\n      this.totalQty = totalQtyCal;\r\n      this.totalAmount = Math.round(totalAmount);\r\n    });\r\n  }\r\n\r\n  private _createForm() {\r\n    this.purchaserOrderForm = this._fb.group({\r\n      supplierName: [''],\r\n      productName: [''],\r\n      motorVehicleNo: [''],\r\n      billDate: [new Date()],\r\n      dueDate: [],\r\n      purchaseOrderDetail: this._fb.array([]),\r\n      amountPaid: [],\r\n    });\r\n  }\r\n\r\n  get purchaseOrderDetailArr() {\r\n    return this.purchaserOrderForm.get('purchaseOrderDetail') as FormArray;\r\n  }\r\n\r\n  get amountPaid() {\r\n    return this.purchaserOrderForm.get('amountPaid') as FormControl;\r\n  }\r\n}\r\n","<div class=\"middle\" *ngIf=\"showMsg\">\r\n    <div class=\"col-xs-6\">\r\n        <p class=\"alert alert-success\">\r\n            <strong>Sales Order Successfully created!!</strong>\r\n        </p>\r\n    </div>\r\n</div>\r\n<form [formGroup]=\"purchaserOrderForm\">\r\n    <div class=\"d-flex\">\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Product</mat-label>\r\n                <input type=\"text\" #searchProduct aria-label=\"Product\" matInput formControlName=\"productName\" [matAutocomplete]=\"productAuto\">\r\n                <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedProduct($event.option.value)\">\r\n                    <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\r\n                        {{product.productName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field appearance=\"fill\" style=\"width:100%\">\r\n                <mat-label>Product</mat-label>\r\n                <mat-select (selectionChange)=\"selectedProduct($event.value)\">\r\n                    <mat-option *ngFor=\"let product of products\" [value]=\"product.productName\">\r\n                        {{product.productName}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field> -->\r\n        </div>\r\n\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Supplier</mat-label>\r\n                <input type=\"text\" aria-label=\"Supplier\" matInput formControlName=\"supplierName\" [matAutocomplete]=\"supplierAuto\">\r\n                <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedSupplier($event.option.value)\">\r\n                    <mat-option *ngFor=\"let supplier of filteredSuppliers | async\" [value]=\"supplier.supplierName\">\r\n                        {{supplier.supplierName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-group col-2\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Phone number</mat-label>\r\n                <input type=\"text\" aria-label=\"Motor Vehicle no\" matInput formControlName=\"motorVehicleNo\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Bill date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"billDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Due date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker2\" [min]=\"minStartDate\" formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n    <div class=\"mat-elevation-z8 purchase-order-container\">\r\n        <table formArrayName=\"purchaseOrderDetail\" [dataSource]=\"purchaseOrderDetailData\" mat-table>\r\n            <ng-container matColumnDef=\"sno\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">S. No</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\r\n                <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell>\r\n                    <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\r\n                        <mat-icon class=\"delete-button\">delete</mat-icon>\r\n                        <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                    </button>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"item\">\r\n                <th *matHeaderCellDef mat-header-cell>Item & Description</th>\r\n                <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Purchase Price</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\">\r\n                        <input matInput type=\"number\" formControlName=\"price\" required class=\"text-right\">\r\n                        <span matPrefix>₹&nbsp;</span>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('required')\">\r\n                            Price is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('min')\">\r\n                            Price more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('max')\">\r\n                            Price can't be greater than 10 lakhs\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"quantity\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\" class=\"text-right\">\r\n                        <input matInput type=\"number\" formControlName=\"qtyOrdered\" required>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('required')\">\r\n                            Quantity is required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('min')\">\r\n                            Quantity more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('max')\">\r\n                            Quantity can't be greater than 10 thousand\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-5\">\r\n                    <h4><b>{{ totalQty }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"amount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value | number : '1.0-2'}}</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"taxType\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\r\n          CGST/SGST <br> IGST Rate\r\n        </th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.get('product')?.value.gst}}%</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"taxAmount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100 | number : '1.0-2'}}\r\n        </td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>-->\r\n\r\n            <ng-container matColumnDef=\"totalAmount\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\r\n                <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n                    <!--₹{{element.get('price')?.value * element.get('qtyOrdered')?.value + element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100 | number : '1.0-2'}} -->\r\n                    ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value | number : '1.0-2'}}\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">\r\n                    <h4><b>{{ totalAmount | currency:'INR' }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n            <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n        </table>\r\n\r\n        <div class=\"total-container\">\r\n            <div>\r\n                <label for=\"name\">Current Balance : </label>\r\n                <span class=\"amount-read-only\">{{ ((getCurrentBalance() < 0) ? 0 : getCurrentBalance()) | currency:'INR' }}</span>\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">Previous Balance :</label>\r\n                <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">Total Pay Balance :</label>\r\n                <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">Amount Paid : </label>\r\n                <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\r\n            </div>\r\n            <br>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\" style=\"width: 12%;margin-left: 5px;\" [disabled]=\"singleClickDisable && !purchaserOrderForm.valid\" (click)=\"save(false, content)\">PLACE\r\n                ORDER</button>\r\n            <button type=\"submit\" class=\"btn btn-success\" style=\"width: 18%;margin-left: 5px;\" [disabled]=\"singleClickDisable\" (click)=\"save(true, content)\">PLACE ORDER & PRINT</button>\r\n            <button class=\"btn btn-warning\" style=\"width: 10%;margin-left: 5px;\" (click)=\"refreshAfterSave()\">CLEAR</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n\r\n<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">Order Summary</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p style=\"font-weight: 500;\">Please confirm below details before placing order</p>\r\n\r\n        <div style=\"width: 210px;margin: 25px 0px;\">\r\n            <div class=\"custom-row\">\r\n                <p>Order Status</p>\r\n                <p><span class=\"text-primary\" style=\"color: green !important\">{{purchaseOrder?.status}}</span></p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Amount Paid</p>\r\n                <p>₹{{purchaseOrder?.amountPaid}}</p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Balance amount</p>\r\n                <p>₹{{getTotalBalance()}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <p>\r\n            <span class=\"text-danger\">Note: Order placed can't be deleted later!</span>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalContent let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">{{popupTitle}}</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>{{popupsubtitle}}</strong></p>\r\n        <p>{{popupDescription}}</p>\r\n        <div [innerHTML]=\"popupMarkup\"></div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SupplierService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/supplier';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getSupplier(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createSupplier(supplier: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, supplier);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateSupplier(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteSupplier(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getSupplierList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n\r\n    createSupplierPurchase(supplier: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}/purchase`, supplier);\r\n    }\r\n    \r\n    getSupplierByName(supplierName: string): any {\r\n        const opts = { params: {'supplierName': supplierName}};\r\n        return this.http.get(`${this.baseUrl}/supplierName`, opts);\r\n    }\r\n}\r\n","import {SalesOrderDetail} from './sales-order-detail';\nimport {Customer} from './customer';\n\nexport class SalesOrder {\n    status: string;\n    customer: Customer;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    currentDue: number;\n    salesOrderDetail: Array<SalesOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n    billDate: string;\n    deliverStatus: string;\n    paymentMode: string;\n    updatedProductSalePriceList: Array<UpdateProduct>;\n}\n\nexport class UpdateProduct {\n    price: number;\n    id: number;\n    productName: string;\n}\n","import {SalesOrderService} from './../_services/sales-order.service';\r\nimport {PurchaseOrderService} from './../_services/purchase-order.service';\r\nimport {SupplierService} from './../_services/supplier.service';\r\nimport {CustomerService} from './../_services/customer.service';\r\nimport {ProductService} from '../_services/product.service';\r\nimport {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    productsCount: number;\r\n    customersCount: number;\r\n    suppliersCount: number;\r\n    purchaseOrdersCount: number;\r\n    salesOrdersCount: number;\r\n    totalCustomerBalance: number;\r\n    totalSupplierBalance: number;\r\n\r\n    constructor(private productService: ProductService, private customerService: CustomerService, private supplierService: SupplierService, private purchaseOrderService: PurchaseOrderService, private salesOrderService: SalesOrderService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.reload();\r\n    }\r\n\r\n    reload() {\r\n        this.productService.getProductsList().subscribe(data => {\r\n                console.log(data);\r\n                this.productsCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.customerService.getCustomerList().subscribe(data => {\r\n                console.log(data);\r\n                this.customersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.supplierService.getSupplierList().subscribe(data => {\r\n                console.log(data);\r\n                this.suppliersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.purchaseOrderService.getPurchaseOrderList().subscribe(data => {\r\n                console.log(data);\r\n                this.purchaseOrdersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.salesOrderService.getSalesOrderList().subscribe(data => {\r\n                console.log(data);\r\n                this.salesOrdersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.salesOrderService.getAllCustomerSalesOrderBalance().subscribe(data => {\r\n                console.log(data);\r\n                this.totalCustomerBalance = data;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.purchaseOrderService.getAllSupplierPurchaseOrderBalace().subscribe(data => {\r\n                console.log(data);\r\n                this.totalSupplierBalance = data;\r\n            },\r\n            error => console.log(error));\r\n    }\r\n}\r\n","<!-- <div class=\"form-group\">\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Purchase</p>\r\n    <p>{{purchaseOrdersCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Sell</p>\r\n    <p>{{salesOrdersCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Products</p>\r\n    <p>{{productsCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Customers</p>\r\n    <p>{{customersCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Supplier</p>\r\n    <p>{{suppliersCount}}</p>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Customer Balance</p>\r\n    <p>{{totalCustomerBalance}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Supplier Balance</p>\r\n    <p>{{totalSupplierBalance}}</p>\r\n  </button>\r\n</div> -->\r\n<div class=\"app-container\">\r\n\r\n\r\n    <div class=\"main-container flex-fill\">\r\n\r\n\r\n        <div class=\"container-fluid mt-2\">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter primary\">\r\n                                <i class=\"fa fa-code-forkl\"></i>\r\n                                <span class=\"count-numbers\">{{purchaseOrdersCount}}</span>\r\n                                <span class=\"count-name\">Total Purchase</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter danger\">\r\n                                <i class=\"fa fa-ticketa\"></i>\r\n                                <span class=\"count-numbers\">{{salesOrdersCount}}</span>\r\n                                <span class=\"count-name\">Total Sell</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter success\">\r\n                                <i class=\"fa fa-users\"></i>\r\n                                <span class=\"count-numbers\">{{totalCustomerBalance}}</span>\r\n                                <span class=\"count-name\">Total Customer Due</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter info\">\r\n                                <i class=\"fa fa-users1\"></i>\r\n                                <span class=\"count-numbers\">{{totalSupplierBalance}}</span>\r\n                                <span class=\"count-name\">Total Supplier Due</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\nimport { Category } from '../_model/category';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/category';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCategory(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    getCategoryByName(categoryName: string): any {\r\n        const opts = { params: {'categoryName': categoryName}};\r\n        return this.http.get(`${this.baseUrl}/categoryName`, opts);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createCategory(category: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, category);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateCategory(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteCategory(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getCategoryList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\nimport { CreateLocationComponent } from '../create-location/create-location.component';\r\n\r\n@Component({\r\n    selector: 'app-location-list',\r\n    templateUrl: './location-list.component.html',\r\n    styleUrls: ['./location-list.component.css']\r\n})\r\nexport class LocationListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['cityName', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private locationService: LocationService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getLocationList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getLocationList();\r\n        });\r\n    }\r\n\r\n    updateLocationModal(updateLocationModal): void {\r\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: { data: updateLocationModal }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getLocationList();\r\n        });\r\n    }\r\n\r\n    getLocationList() {\r\n        this.locationService.getLocationList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    deleteLocation(event) {\r\n        this.locationService.deleteLocation(event.id).subscribe(\r\n            response => {\r\n                this.getLocationList();\r\n            },\r\n            error => {\r\n                console.log(error)\r\n                alert(JSON.parse(error.error).errorMessage);\r\n            });\r\n    }\r\n}\r\n","<div>\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div class=\"pull-right\">\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Location\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"cityName\">\r\n            <th *matHeaderCellDef mat-header-cell>Location</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.cityName}} </td>\r\n            <td *matCellDef=\"let element\" hidden mat-cell> {{element.id}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateLocationModal(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                               \r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                        <button (click)=\"deleteLocation(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n    \r\n                    </button>\r\n\r\n                        <br>\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { PurchaseOrderService } from 'src/app/_services/purchase-order.service';\r\nimport { SalesOrderService } from 'src/app/_services/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-update-balance-sheet',\r\n  templateUrl: './supplier-update-balance-sheet.component.html',\r\n  styleUrls: ['./supplier-update-balance-sheet.component.css']\r\n})\r\nexport class SupplierUpdateBalanceSheetComponent implements OnInit {\r\n  productForm: FormGroup;\r\n  productUpdateData: any;\r\n\r\n  constructor(private purchaseOrderService: PurchaseOrderService,\r\n    public dialogRef: MatDialogRef<SupplierUpdateBalanceSheetComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    this.productForm = new FormGroup({\r\n      id: new FormControl(),\r\n      supplierName: new FormControl(),\r\n      currentBalance: new FormControl(),\r\n      payAmount: new FormControl(),\r\n    });\r\n\r\n    if (data != null) {\r\n      this.productUpdateData = data?.data;\r\n      //this.productForm.controls['supplierName'].disable()\r\n      //this.productForm.controls['currentBalance'].disable()\r\n      this.productForm.controls['id'].setValue(this.productUpdateData.supplier.id);\r\n      this.productForm.controls['supplierName'].setValue(this.productUpdateData.supplier.supplierName);\r\n      this.productForm.controls['currentBalance'].setValue(this.productUpdateData.currentBalance);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.productForm.valid) {\r\n        this.updateSupplierBalance();\r\n    }\r\n  }\r\n\r\n  updateSupplierBalance() {\r\n    let status: string = '';\r\n    const payAmount: number = Number(this.productForm.controls.payAmount.value);\r\n\r\n    if (payAmount < 0) {\r\n      alert('Pay amount should be positive');\r\n      return;\r\n    } else if (payAmount == 0) {\r\n      alert('Pay amount should not be ZERO');\r\n      return;\r\n    } else if (payAmount === this.productForm.controls.currentBalance.value) {\r\n      status = 'PAID';\r\n    } else if (payAmount < this.productForm.controls.currentBalance.value) {\r\n      status = 'DUE';\r\n    } else {\r\n      alert('Please pay amount less than due amount');\r\n      return;\r\n    }\r\n\r\n    let data = {\r\n      id: this.productForm.controls.id.value,\r\n      payAmount: payAmount,\r\n      status: status,\r\n    };\r\n\r\n    this.purchaseOrderService.updatePurchaseOrder(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      //this.errorMsg = error.error.errorMessage;\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n      this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"product-conatiner\">\r\n\r\n    <form [formGroup]=\"productForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Supplier name</mat-label>\r\n                <input formControlName=\"supplierName\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Current balance</mat-label>\r\n                <input type=\"text\" formControlName=\"currentBalance\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Pay amount</mat-label>\r\n                <input formControlName=\"payAmount\" matInput required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\"  (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!productForm.valid\" class=\"btn btn-primary\"\r\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/location';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getLocation(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    createLocation(Location: any): Observable<any> {\r\n        return this.http.post(`${this.baseUrl}`, Location);\r\n    }\r\n\r\n    updateLocation(value: any): Observable<any> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteLocation(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getLocationList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CompanyService } from 'src/app/_services/company.service';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\nimport { CreateProductComponent } from '../create-product/create-product.component';\r\n\r\n@Component({\r\n    selector: 'app-product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n    displayedColumns: string[] = ['SNo', 'productName', 'category', 'qty', 'salePrice', 'price', 'GST', 'productDesc'];\r\n    dataSource;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    constructor(public dialog: MatDialog, private productService: ProductService, private companyService: CompanyService) {\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getProductList();\r\n    }\r\n\r\n    getProductList() {\r\n        this.productService.getProductsList().subscribe(res => {\r\n            this.dataSource = res;\r\n            this.dataSource = new MatTableDataSource(res);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    createProduct(): void {\r\n        const dialogRef = this.dialog.open(CreateProductComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getProductList();\r\n        });\r\n    }\r\n\r\n    updateProduct(updateProduct): void {\r\n        const dialogRef = this.dialog.open(CreateProductComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: { data: updateProduct }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getProductList();\r\n        });\r\n    }\r\n\r\n    deleteProduct(productId) {\r\n        this.productService.deleteProduct(productId).subscribe(\r\n            response => {\r\n                this.getProductList();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n}\r\n\r\n\r\n\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"createProduct()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Product\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n\r\n        <ng-container matColumnDef=\"SNo\">\r\n            <th *matHeaderCellDef mat-header-cell>S.No</th>\r\n            <td *matCellDef=\"let element; let i = index;\" mat-cell> {{i + 1}}. </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"productName\">\r\n            <th *matHeaderCellDef mat-header-cell> Product</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.productName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"category\">\r\n            <th *matHeaderCellDef mat-header-cell> Category</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.category?.categoryName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"qty\">\r\n            <th *matHeaderCellDef mat-header-cell>Stock</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.qty}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th *matHeaderCellDef mat-header-cell> Purchase Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.price | number : '1.0-2'}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"salePrice\">\r\n            <th *matHeaderCellDef mat-header-cell> Selling Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"row-highlight\"><b>{{element.currentPrice  | number : '1.0-2'}}</b></td>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"profit\">\r\n        <th *matHeaderCellDef mat-header-cell> Profit</th>\r\n        <td *matCellDef=\"let element\" mat-cell> {{element.profit | number : '1.0-2'}} </td>\r\n    </ng-container> -->\r\n\r\n        <!--<ng-container matColumnDef=\"HSN/SAC\">\r\n        <th *matHeaderCellDef mat-header-cell> HAN/SAC</th>\r\n        <td *matCellDef=\"let element\" mat-cell> {{element.hsnNo}}</td>\r\n    </ng-container>-->\r\n\r\n        <ng-container matColumnDef=\"GST\">\r\n            <th *matHeaderCellDef mat-header-cell> GST</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.gst}}%</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"productDesc\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n            </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <div>\r\n                            <button (click)=\"updateProduct(element) \" class=\"btn btn-info \" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px  \">\r\n                            <div style=\"display:flex\">\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        </div>\r\n\r\n                        <br>\r\n                        <div>\r\n                            <button (click)=\"deleteProduct(element.id) \" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:-10px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                                <div style=\"display:flex \">\r\n                                    <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                    <div style=\"margin-left: 5px; \">Delete </div>\r\n                                </div>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns; sticky: true \" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns; \" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50] \" [pageSize]=\"50 \" showFirstLastButtons></mat-paginator>\r\n</div>","import {Injectable} from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    signOut() {\r\n        window.sessionStorage.clear();\r\n    }\r\n\r\n    public saveToken(token: string) {\r\n        window.sessionStorage.removeItem(TOKEN_KEY);\r\n        window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    }\r\n\r\n    public getToken(): string {\r\n        return sessionStorage.getItem(TOKEN_KEY);\r\n    }\r\n\r\n    public saveUser(user) {\r\n        window.sessionStorage.removeItem(USER_KEY);\r\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n    }\r\n\r\n    public getUser() {\r\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n    }\r\n}\r\n","import { SalesOrderService } from './../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { SalesReportDetailsComponent } from '../sales-report-details/sales-report-details.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sales-report',\r\n  templateUrl: './sales-report.component.html',\r\n  styleUrls: ['./sales-report.component.css']\r\n})\r\nexport class SalesReportComponent implements OnInit {\r\n  displayedColumns: string[] = ['billDate', 'dueDate', 'customerName', 'totalPrice', 'amountPaid', 'currentDueAmount', 'totalDueAmount', 'Action', 'Print'];\r\n  productColumns: string[] = ['id', 'productName', 'salesPrice', 'qtyOrdered'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  salesReports;\r\n\r\n  constructor(public dialog: MatDialog, private salesOrderService: SalesOrderService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getSalesOrderList(): void {\r\n    this.salesOrderService.getSalesOrderList().subscribe(res => {\r\n      this.salesReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearCustomerSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.salesReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.salesReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime() + 86399999;\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(salesReport => {\r\n        const dueDateTime = new Date(salesReport?.billDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(salesReport => salesReport?.customer?.customerName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.salesOrderService.deleteSalesOrder(event.salesOrderID).subscribe(\r\n      response => {\r\n        this.getSalesOrderList();\r\n      },\r\n      error => console.log(error));\r\n  }\r\n\r\n  getSalesOrder(event) {\r\n    this.salesOrderService.getSalesOrder(event.salesOrderID).subscribe(\r\n      response => {\r\n        this._printPdf(response);\r\n      },\r\n      error => console.log(error));\r\n  }\r\n\r\n  private _printPdf(response) {\r\n    const winHtml = `<a href=\"/dashboard/products\" target=\"_blank\"></a>`;\r\n    const winUrl = URL.createObjectURL(\r\n      new Blob([winHtml], { type: \"text/html\" })\r\n    );\r\n\r\n    const url = `http://localhost:4200/#/salesTable`;\r\n\r\n    console.log(\"url \", url);\r\n    const myWindow = window.open(url, \"win\", \"width=800,height=600,left=250,right=150, nodeIntegration=no\");\r\n    console.log(\"response\", response);\r\n    console.log('this.response2', JSON.stringify((window['response'])));\r\n    //myWindow.document.body.innerHTML\r\n    \r\n    //old\r\n    //const url = `${location.origin}/praveen-traders/#salesTable`;\r\n    //const url = `${location.origin}/#salesTable`;\r\n    //const myWindow = window.open(url, \"_blank\", \"width=800,height=600,left=250,right=150\");\r\n    myWindow['response'] = response;\r\n  }\r\n\r\n  updateProduct(updateProduct): void {\r\n    const dialogRef = this.dialog.open(SalesReportDetailsComponent, {\r\n      width: '950px',\r\n      disableClose: false,\r\n      data: { data: updateProduct }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getSalesOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n    <div class=\"form-group col-3\">\r\n        <mat-form-field class=\"example-form-field\">\r\n            <mat-label>Search Customer</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\" placeholder=\"Search Customer\">\r\n            <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearCustomerSearch()\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field>\r\n        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n            <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n            <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n        </mat-date-range-input>\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n            <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n        <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n        <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n        <ng-container matColumnDef=\"customerName\">\r\n            <th *matHeaderCellDef mat-header-cell>Customer</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.customer?.customerName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"billDate\">\r\n            <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n                <button (click)=\"updateProduct(element)\">\r\n                    {{element.billDate | date: 'dd/MM/yyyy hh:mm a'}}\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"dueDate\">\r\n            <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"currentDueAmount\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Current Due</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{(element.currentBalance\r\n                < 0) ? 0 : element.currentBalance.toLocaleString( 'en-IN') || 0}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"totalDueAmount\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Total Due</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\">\r\n                {{element.previousBalance.toLocaleString('en-IN') || 0}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"amountPaid\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\">\r\n                {{element.amountPaid.toLocaleString('en-IN') || 0}}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"totalPrice\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\">\r\n                {{element.totalPrice.toLocaleString('en-IN') || 0}}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Action\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n            <td *matCellDef=\"let element;\" mat-cell>\r\n                <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n                    <mat-icon class=\"delete-button\">delete</mat-icon>\r\n                </button>\r\n            </td>\r\n            <td mat-footer-cell *matFooterCellDef></td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Print\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Print</th>\r\n            <td *matCellDef=\"let element;\" mat-cell>\r\n                <button (click)=\"getSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n                    <mat-icon class=\"print-button\">print</mat-icon>\r\n                    <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n            </td>\r\n            <td mat-footer-cell *matFooterCellDef></td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\"\r\n            triggers=\"mouseenter:mouseleave\">\r\n            <ng-template #test>\r\n                <table [dataSource]=\"row.salesOrderDetail\" mat-table class=\"mat-elevation-z2\">\r\n                    <ng-container matColumnDef=\"id\">\r\n                        <th *matHeaderCellDef mat-header-cell>S.No</th>\r\n                        <td *matCellDef=\"let element; let index = index\" mat-cell>\r\n                            {{index+1}}\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"productName\">\r\n                        <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n                        <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"salesPrice\">\r\n                        <th *matHeaderCellDef mat-header-cell class=\"text-right\">Sales Price</th>\r\n                        <td *matCellDef=\"let element\" mat-cell class=\"text-right\">\r\n                            {{element.price.toLocaleString('en-IN') || 0}}\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"qtyOrdered\">\r\n                        <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n                        <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n                    </ng-container>\r\n\r\n                    <tr *matHeaderRowDef=\"productColumns;  sticky: true\" mat-header-row></tr>\r\n                    <tr *matRowDef=\"let row; columns: productColumns;\" mat-row></tr>\r\n                </table>\r\n            </ng-template>\r\n        </tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import { SalesOrderService } from '../../_services/sales-order.service';\r\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-sales-report',\r\n  templateUrl: './sales-report-details.component.html',\r\n  styleUrls: ['./sales-report-details.component.css']\r\n})\r\nexport class SalesReportDetailsComponent implements OnInit {\r\n  displayedColumns: string[] = ['productName', 'price', 'qtyOrdered', 'action'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  constructor(public dialog: MatDialog, private purchaseOrderService: SalesOrderService,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    if (data != null) {\r\n      this._setData(data?.data.salesOrderDetail);\r\n    }\r\n  }\r\n  ngOnInit(): void { }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.purchaseOrderService.deleteOrderDetails(event.salesOrderDetailID).subscribe(\r\n      response => {\r\n        this._setData(JSON.parse(response))\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Could not able to delete sales order since used in sales order');\r\n      });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n        <ng-container matColumnDef=\"productName\">\r\n            <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Purchase Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.price | number : '1.0-2'}}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"qtyOrdered\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n            <td *matCellDef=\"let element;\" mat-cell>\r\n                <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n          <mat-icon class=\"delete-button\">delete</mat-icon>\r\n          <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n        </button>\r\n            </td>\r\n            <td mat-footer-cell *matFooterCellDef></td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\">\r\n        </tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-action-bar-item',\r\n    templateUrl: './action-bar-item.component.html',\r\n    styleUrls: ['./action-bar-item.component.css']\r\n})\r\nexport class ActionBarItemComponent {\r\n    @Input() shadow: boolean = false;\r\n}\r\n","<button [class.shadow-sm]=\"shadow\" class=\"action-bar-item\">\r\n    <div class=\"hamburger-container\">\r\n        <div class=\"bar1\"></div>\r\n        <div class=\"bar2\"></div>\r\n        <div class=\"bar3\"></div>\r\n    </div>\r\n    <span _ngcontent-c1=\"\" class=\"action-bar-item-text\">Menu</span>\r\n</button>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { CompanyService } from 'src/app/_services/company.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\nimport { SupplierService } from 'src/app/_services/supplier.service';\r\n\r\n@Component({\r\n    selector: 'app-create-supplier',\r\n    templateUrl: './create-supplier.component.html',\r\n    styleUrls: ['./create-supplier.component.css']\r\n})\r\nexport class CreateSupplierComponent implements OnInit {\r\n\r\n    supplierForm: FormGroup;\r\n    locationForm: FormGroup;\r\n    supplierUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    citiesList: any;\r\n    companies: any;\r\n\r\n    constructor(private supplierService: SupplierService, private location: LocationService,\r\n        private companyService: CompanyService,\r\n        public dialogRef: MatDialogRef<CreateSupplierComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.supplierUpdateData = data;\r\n\r\n        this.supplierForm = new FormGroup({\r\n            cityName: new FormControl(null),\r\n            supplierName: new FormControl(null, [Validators.required]),\r\n            gstIn: new FormControl(null),\r\n            companyName: new FormControl(null),\r\n            phoneNumber: new FormControl(null),\r\n        });\r\n\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required]),\r\n        });\r\n\r\n        if (data != null) {\r\n            this.supplierUpdateData = data?.data;\r\n            this.supplierForm.controls['supplierName'].setValue(this.supplierUpdateData.supplierName);\r\n            this.supplierForm.controls['gstIn'].setValue(this.supplierUpdateData.gstIn);\r\n            this.supplierForm.controls['phoneNumber'].setValue(this.supplierUpdateData.phoneNumber);\r\n            this.supplierForm.controls['cityName'].setValue(this.supplierUpdateData.location);\r\n            this.supplierForm.controls['companyName'].setValue(this.supplierUpdateData.company);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n            this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCompanyList();\r\n        this.getlocationList();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.supplierForm.valid) {\r\n            if (this.supplierUpdateData?.id != null) {\r\n                this.updateSupplier();\r\n            } else {\r\n                this.saveSupplier();\r\n            }\r\n        }\r\n    }\r\n\r\n    saveSupplier() {\r\n        let data = {\r\n            supplierName: this.supplierForm.controls.supplierName.value,\r\n            gstIn: this.supplierForm.controls.gstIn.value,\r\n            location: this.supplierForm.controls.cityName.value,\r\n            company: this.supplierForm.controls.companyName.value,\r\n            phoneNumber: this.supplierForm.controls.phoneNumber.value,\r\n        };\r\n\r\n        this.supplierService.createSupplier(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Supplier Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n\r\n    }\r\n\r\n    updateSupplier() {\r\n        let data = {\r\n            id: this.supplierUpdateData?.id,\r\n            supplierName: this.supplierForm.controls.supplierName.value,\r\n            gstIn: this.supplierForm.controls.gstIn.value,\r\n            location: this.supplierForm.controls.cityName.value,\r\n            phoneNumber: this.supplierForm.controls.phoneNumber.value,\r\n            company: this.supplierForm.controls.companyName.value,\r\n        };\r\n\r\n        this.supplierService.updateSupplier(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = \"Supplier Successfully Updated..!\";\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        })\r\n    }\r\n\r\n    getlocationList() {\r\n        this.location.getLocationList().subscribe(res => {\r\n            this.citiesList = res;\r\n        });\r\n    }\r\n\r\n    getCompanyList() {\r\n        this.companyService.getCompanyList().subscribe(res => {\r\n            this.companies = res;\r\n        });\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\">\r\n        <h4 class=\"title\">Add Supplier</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"supplierForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Supplier Name\" formControlName=\"supplierName\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"GSTIN\" formControlName=\"gstIn\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-select placeholder=\"City\" formControlName=\"cityName\">\r\n                    <mat-option [value]=\"location\" *ngFor=\"let location of citiesList\">{{location.cityName}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-select placeholder=\"company\" formControlName=\"companyName\">\r\n                    <mat-option [value]=\"company\" *ngFor=\"let company of companies\">{{company.companyName}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Phone Number\" formControlName=\"phoneNumber\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;border-radius: 10px;\"\r\n                [disabled]=\"!supplierForm.valid\">Save</button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\nconst baseUrl = HttpClientHelper.baseURL + '/bank';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BankService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    createBank(bank: Object): Observable<Object> {\n        return this.http.post(`${baseUrl}`, bank);\n    }\n\n    uploadImage(bank: Object): Observable<Object> {\n        return this.http.post(`${baseUrl}/image`, bank);\n    }\n}\n","export class Company {\n    companyID: number;\n    companyName: string;\n    phoneNumber: string;\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\r\nimport { numberInWords } from '../../utils/numToWords.js';\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  response: any;\r\n  totalPrice: number = 0;\r\n  totalQty: number = 0;\r\n  amountInWords: string = '';\r\n  user: any = null;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log('this.response', JSON.stringify((window['response'])));\r\n    let purchaseOrder = window['response'];\r\n    if (!purchaseOrder) {\r\n      const invoiceData = sessionStorage.getItem('invoiceData');\r\n      if (invoiceData) {\r\n        purchaseOrder = JSON.parse(invoiceData);\r\n      }\r\n    } else {\r\n      sessionStorage.setItem('invoiceData', JSON.stringify(purchaseOrder));\r\n    }\r\n    \r\n    this.response = purchaseOrder;\r\n    document.title = 'Tax Invoice';\r\n    this._calculateTotals();\r\n    this.user = this.tokenStorageService.getUser();\r\n  }\r\n\r\n  printPDF() {\r\n    window.print();\r\n  }\r\n\r\n  private _calculateTotals() {\r\n    let totalPrice = 0;\r\n    let totalQty = 0;\r\n    console.log('response?.purchaseOrderDetail', this.response?.purchaseOrderDetail);\r\n    this.response?.purchaseOrderDetail?.forEach((purchaseOrder) => {\r\n      const amount = purchaseOrder?.price * purchaseOrder?.qtyOrdered;\r\n      const qty = purchaseOrder?.qtyOrdered;\r\n      //const taxAmount = amount * purchaseOrder?.product?.gst/100;\r\n      totalQty += qty;\r\n      totalPrice += amount;// + taxAmount;\r\n    });\r\n\r\n    this.totalPrice = Math.round(totalPrice);\r\n    this.totalQty = totalQty;\r\n    this.amountInWords = numberInWords(this.totalPrice);\r\n  }\r\n}\r\n","<div class=\"page-content container\">\r\n    <div class=\"page-header text-blue-d2\">\r\n        <div class=\"container px-0\">\r\n            <div class=\"row pt-4\">\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <div class=\"d-flex\">\r\n                        <img src=\"/assets/images/indian-kisan-care.png\" alt=\"image\" class=\"logo\"\r\n                            style=\"width: 10%; height: 10%\">\r\n                        <div style=\"text-align: center; width: 70%\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\r\n                                    {{user?.bankAccount?.brandName}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.bankAccount?.gstNo}} | PAN:\r\n                                    {{user?.bankAccount?.panNo}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.bankAccount?.phoneNumber}} |\r\n                                    E: {{user?.bankAccount?.email}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\" />\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Supplier Name:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.supplierName}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    GSTIN/UIN:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.gstIn}}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Mobile Number:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.phoneNumber}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Address:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.location?.cityName}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\r\n                                    {{(response?.billDate | date: 'dd/MM/yyyy hh:mm a')}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\r\n                                    {{response?.dueDate | date: 'dd/MM/yyyy'}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\r\n                                    <span class=\"text-600 text-90\">\r\n                                        {{response?.status}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <!-- ----------------------------------------- -->\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">S.No</th>\r\n                                <th scope=\"col\">Item & Description</th>\r\n                                <th scope=\"col\">HSN/SAC</th>\r\n                                <th scope=\"col\">Purchase Rate</th>\r\n                                <th scope=\"col\">Quantity</th>\r\n                                <th scope=\"col\">Amount</th>\r\n                                <!--<th scope=\"col\">\r\n                                    <div style=\"text-align: center;\">CGST/SGST <br> IGST Rate</div>\r\n                                </th>\r\n                                <th scope=\"col\">Tax Amount</th>\r\n                                <th scope=\"col\">Total Amount</th>-->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let cart of response?.purchaseOrderDetail; index as i;\">\r\n                                <td>{{i + 1}}.</td>\r\n                                <td>{{cart?.product?.productName}}</td>\r\n                                <td>{{cart?.product?.hsnNo}}</td>\r\n                                <td class=\"text-right pr-4\">₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\r\n                                <td class=\"text-right pr-4\">{{cart?.qtyOrdered || 0}}</td>\r\n                                <td class=\"text-right pr-4\">₹{{(cart?.price * cart?.qtyOrdered).toLocaleString('en-IN')\r\n                                    || 0}}</td>\r\n                                <!--<td>{{cart?.product?.gst}}%</td>\r\n                                <td>₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\r\n                                </td>\r\n                                <td>\r\n                                    ₹{{(cart.price * cart.qtyOrdered + cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\r\n                                </td>-->\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"4\">Total</th>\r\n                                <th class=\"text-right pr-4\">{{totalQty.toLocaleString('en-IN')}}</th>\r\n                                <th class=\"text-right pr-4\">₹{{totalPrice.toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\r\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\r\n                        {{ amountInWords }} only.\r\n                    </span>\r\n                    <hr>\r\n                    <!-- ---------------- -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    Cash\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    NA\r\n                                </span>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <div *ngIf=\"user.bankAccount != null\">\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Bank:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.bankName}}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.accountNo}}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.branchName}}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.ifscCode}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\r\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\r\n                                </div>\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\r\n                                    ₹{{(response?.currentBalance < 0 ) ? 0 :\r\n                                        response?.currentBalance.toLocaleString('en-IN') || 0 }} </div>\r\n\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ?\r\n                                                (response?.previousBalance - (response?.currentBalance)) :\r\n                                                0).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{(response?.previousBalance).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <br><br><br>\r\n                                        <div style=\"text-align: center;\">\r\n                                            <div class=\"my-2\">\r\n                                                <span class=\"text-600 text-90 font-weight-bold\">Authorised\r\n                                                    Signatory</span>\r\n                                            </div>\r\n                                            <div class=\"my-2\">\r\n                                                <span\r\n                                                    class=\"text-600 text-90 font-weight-bold\">({{user?.bankAccount?.brandName}})</span>\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- --------------------- -->\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <hr>\r\n                    <div style=\"text-align: center;\">\r\n                        <span class=\"text-300 text-30\">This is a computer generated invoice</span>\r\n                    </div>\r\n                    <div style=\"text-align: center;\" class=\"print-btn\">\r\n                        <button (click)=\"printPDF()\">Print</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>","import { PurchaseOrderService } from '../../../_services/purchase-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { SupplierUpdateBalanceSheetComponent } from '../update-supplier-balance-sheet/supplier-update-balance-sheet.component';\r\n\r\n@Component({\r\n  selector: 'app-balance-sheet',\r\n  templateUrl: './supplier-balance-sheet.component.html',\r\n  styleUrls: ['./supplier-balance-sheet.component.css']\r\n})\r\nexport class SupplierBalanceSheetComponent implements OnInit {\r\n  displayedColumns: string[] = ['supplierName', 'totalPrice', 'amountPaid', 'dueAmount', 'billDate', 'dueDate', 'action'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  salesReports;\r\n\r\n  constructor(private dialog: MatDialog, private purchaseOrderService: PurchaseOrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getSalesOrderList() {\r\n    this.purchaseOrderService.getAllSupplierPurchaseOrderBalanceSheet().subscribe(res => {\r\n      res.sort(function(a, b) {\r\n        return b.billDate - a.billDate;\r\n      });\r\n      this.salesReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearSupplierSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.salesReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.salesReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime();\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(salesReport => {\r\n        const dueDateTime = new Date(salesReport?.dueDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(salesReport => salesReport?.supplier?.supplierName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  pay(index: number) {\r\n    alert('s')\r\n    //this.salesOrderDetailArr.removeAt(index);\r\n    //this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n  }\r\n\r\n  updateBalance(updateBalance): void {\r\n    const dialogRef = this.dialog.open(SupplierUpdateBalanceSheetComponent, {\r\n      width: '450px',\r\n      disableClose: true,\r\n      data: { data: updateBalance }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getSalesOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-3\">\r\n    <mat-form-field class=\"example-form-field\">\r\n      <mat-label>Search Supplier</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\">\r\n      <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearSupplierSearch()\">\r\n        <mat-icon>clear</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-form-field> \r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n      <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"supplierName\">\r\n      <th *matHeaderCellDef mat-header-cell>Supplier</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.supplier?.supplierName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"totalPrice\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.totalPrice.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountPaid\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.amountPaid.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueAmount\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Due amount</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{element.currentBalance.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"billDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        {{element.billDate | date: 'dd/MM/yyyy'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        <button (click)=\"updateBalance(element)\" mat-icon-button aria-label=\"Pay Balance\">\r\n          <mat-icon>payment</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PurchaseOrderService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/purchaseOrder';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    createPurchaseOrder(invoice: any): Observable<any> {\r\n        return this.http.post(`${this.baseUrl}`, invoice);\r\n    }\r\n\r\n    getPurchaseOrderList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n\r\n    getPurchaseOrderBalaceBySupplier(supplierID: any): any {\r\n        return this.http.get(`${this.baseUrl}/supplier/${supplierID}`);\r\n    }\r\n\r\n    getAllSupplierPurchaseOrderBalace(): any {\r\n        return this.http.get(`${this.baseUrl}/supplier`);\r\n    }\r\n\r\n    getAllSupplierPurchaseOrderBalanceSheet(): any {\r\n        return this.http.get(`${this.baseUrl}/supplier/balance`);\r\n    }\r\n\r\n    updatePurchaseOrder(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteOrder(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    deleteOrderDetails(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/details/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getPurchaseOrderDetailsList(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/details/${id}`);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CompanyService } from 'src/app/_services/company.service';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { CreateCompanyComponent } from '../create-company/create-company.component';\r\n\r\n@Component({\r\n    selector: 'app-company-list',\r\n    templateUrl: './company-list.component.html',\r\n    styleUrls: ['./company-list.component.css']\r\n})\r\nexport class CompanyListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['companyName', 'phoneNumber', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCompanyList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCompanyList();\r\n        });\r\n    }\r\n\r\n    updateComapny(updateComapny): void {\r\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: { data: updateComapny }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCompanyList();\r\n        });\r\n    }\r\n\r\n    getCompanyList() {\r\n        this.companyService.getCompanyList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    deleteCompany(event) {\r\n        this.companyService.deleteCompany(event.id).subscribe(\r\n            response => {\r\n                this.getCompanyList();\r\n            },\r\n            error => {\r\n                console.log(error)\r\n                alert(JSON.parse(error.error).errorMessage);\r\n            });\r\n    }\r\n}\r\n","<div>\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div class=\"pull-right\">\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Company\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"companyName\">\r\n            <th *matHeaderCellDef mat-header-cell>Company</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.companyName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"phoneNumber\">\r\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateComapny(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                           \r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n                        <button (click)=\"deleteCompany(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                                <div style=\"display:flex \">\r\n                                    <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                    <div style=\"margin-left: 5px; \">Delete </div>\r\n                                </div>\r\n        \r\n                        </button>\r\n                        <br>\r\n\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n\r\n            </td>\r\n        </ng-container>\r\n\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClientHelper } from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SalesOrderService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/salesOrder';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    createSalesOrder(invoice: any): Observable<any> {\r\n        return this.http.post(`${this.baseUrl}`, invoice);\r\n    }\r\n\r\n    getSalesOrderList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n\r\n    getSalesOrderBalaceByCustomer(customerID: any): any {\r\n        return this.http.get(`${this.baseUrl}/customer/balance/${customerID}`);\r\n    }\r\n\r\n    getAllCustomerSalesOrderBalance(): any {\r\n        return this.http.get(`${this.baseUrl}/customer/`);\r\n    }\r\n\r\n    getAllCustomerSalesOrderBalanceSheet(): any {\r\n        return this.http.get(`${this.baseUrl}/customer/balance`);\r\n    }\r\n\r\n    updateSalesOrder(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    getBarChartReport(): any {\r\n        return this.http.get(`${this.baseUrl}/barChart`);\r\n    }\r\n\r\n    getSalesOrderByProductWise(): any {\r\n        return this.http.get(`${this.baseUrl}/product`);\r\n    }\r\n\r\n    getStockBook(productName: string): any {\r\n        const opts = { params: {'productName': productName}};\r\n        return this.http.get(`${this.baseUrl}/stock-book`,opts);\r\n    }\r\n\r\n    getStockBookByDate(productName, start: string, end: string): any {\r\n        const opts = { params: {'productName': productName, 'startDate': start, 'endDate': end}};\r\n        return this.http.get(`${this.baseUrl}/stock-book-by-date`,opts);\r\n    }\r\n\r\n    deleteSalesOrder(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    deleteOrderDetails(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/details/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getSalesOrder(salesOrderID: any): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${salesOrderID}`);\r\n    }\r\n}\r\n","import { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private roles: string[];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username: string;\r\n  static role_super_admin: boolean;\r\n  static role_admin: boolean;\r\n  static role_user: boolean;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n      AppComponent.role_super_admin = this.roles.includes('ROLE_SUPER_ADMIN');\r\n      AppComponent.role_admin = this.roles.includes('ROLE_ADMIN');\r\n      AppComponent.role_user = this.roles.includes('ROLE_USER');\r\n    }\r\n  }\r\n}\r\n","<div id=\"app\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-mobile-menu',\r\n    templateUrl: './mobile-menu.component.html',\r\n    styleUrls: ['./mobile-menu.component.scss']\r\n})\r\nexport class MobileMenuComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg bg-primary navbar-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">RK-FERTILIZER</a>\r\n    <button aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"\r\n            data-target=\"#navbarSupportedContent\" data-toggle=\"collapse\" type=\"button\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard\" routerLinkActive=\"active\">\r\n                    DASHBOARDS </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/products\">PRODUCTS</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/salesOrder\">SALES</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/add\">ADD PRODUCT</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/addCategory\"> ADD CATEGORY</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/supplier\"> SUPPLIER</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/location\"> LOCATION</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/company\"> COMPANY</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/customer\"> CUSTOMER</a>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n</nav>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClientHelper } from '../_model/http-client-helper';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/customer';\r\n\r\n    constructor(private http: HttpClient, private tokenStorage: TokenStorageService,) {\r\n    }\r\n\r\n    header = new HttpHeaders().set(\"Authorization\", `Bearer ${this.tokenStorage.getToken()}`);\r\n\r\n    getCustomer(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`, { headers: this.header });\r\n    }\r\n\r\n    createCustomer(customer: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, customer, { headers: this.header });\r\n    }\r\n\r\n    updateCustomer(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value, { headers: this.header });\r\n    }\r\n\r\n    deleteCustomer(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\r\n    }\r\n\r\n    getCustomerList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`, { headers: this.header });\r\n    }\r\n\r\n    createCustomerSales(customer: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}/sales`, customer, { headers: this.header });\r\n    }\r\n\r\n    getCustomerByName(customerName: string): any {\r\n        const opts = { params: { 'customerName': customerName }, headers: this.header };\r\n        return this.http.get(`${this.baseUrl}/customerName`, opts);\r\n    }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    isVisible = false;\r\n    urlPath = [];\r\n\r\n    constructor(\r\n        private router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCurrentPage();\r\n    }\r\n\r\n    getCurrentPage() {\r\n        const path = this.router.url.split('/');\r\n        if (path.length === 2 && path[1] === 'dashboard') {\r\n            this.isVisible = true;\r\n        }\r\n        path.forEach((e) => {\r\n            if (e !== '') {\r\n                this.urlPath.push(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"app-container\">\r\n\r\n  <app-action-bar class=\"d-none d-sm-block\"></app-action-bar>\r\n\r\n  <div class=\"main-container flex-fill\">\r\n    <app-navigation-bar class=\"d-none d-sm-block\"></app-navigation-bar>\r\n    <!-- only Mobile and Tab View -->\r\n    <app-mobile-menu class=\"d-block d-sm-none\"></app-mobile-menu>\r\n    <div class=\"container-fluid mt-2\">\r\n      <div class=\"row\">\r\n        <nav aria-label=\"breadcrumb\">\r\n          <!-- <ol *ngIf=\"urlPath.length < 2; else visibleCrum\" class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item active\">\r\n                            <span>{{urlPath[0] | titlecase}}</span>\r\n                        </li>\r\n                    </ol> -->\r\n          <ng-template #visibleCrum>\r\n            <ol class=\"breadcrumb\">\r\n              <li *ngFor=\"let item of urlPath\" class=\"breadcrumb-item\">\r\n                {{urlPath.pop()}} {{item}}\r\n                <!-- <a [routerLink]=\"[item]\" *ngIf=\"urlPath.pop() != item; else activeMenu\" >{{ item | titlecase}}</a>\r\n                                <ng-template #activeMenu><span>{{ item | titlecase }}</span></ng-template> -->\r\n              </li>\r\n            </ol>\r\n          </ng-template>\r\n\r\n        </nav>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n\r\n          <!-- <div class=\"row\" *ngIf=\"isVisible\">\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter primary\">\r\n                        <i class=\"fa fa-code-fork\"></i>\r\n                        <span class=\"count-numbers\">12</span>\r\n                        <span class=\"count-name\">Flowz</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter danger\">\r\n                        <i class=\"fa fa-ticket\"></i>\r\n                        <span class=\"count-numbers\">599</span>\r\n                        <span class=\"count-name\">Instances</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter success\">\r\n                        <i class=\"fa fa-database\"></i>\r\n                        <span class=\"count-numbers\">6875</span>\r\n                        <span class=\"count-name\">Data</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter info\">\r\n                        <i class=\"fa fa-users\"></i>\r\n                        <span class=\"count-numbers\">35</span>\r\n                        <span class=\"count-name\">Users</span>\r\n                      </div>\r\n                    </div>\r\n                  </div> -->\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { Category } from 'src/app/_model/category';\r\n\r\n@Component({\r\n  selector: 'app-create-category',\r\n  templateUrl: './create-category.component.html',\r\n  styleUrls: ['./create-category.component.css']\r\n})\r\nexport class CreateCategoryComponent implements OnInit {\r\n\r\n  categoryForm: FormGroup;\r\n  companies: Observable<Category[]>;\r\n  category: Category = new Category();\r\n  categoryUpdateData: any;\r\n  successMsg: any;\r\n  errorMsg: any;\r\n  constructor(private categoryService: CategoryService,\r\n    public dialogRef: MatDialogRef<CreateCategoryComponent>,\r\n\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    this.categoryUpdateData = data;\r\n\r\n    this.categoryForm = new FormGroup({\r\n      categoryName: new FormControl(null, [Validators.required]),\r\n      categoryDesc: new FormControl(null),\r\n    })\r\n\r\n    if (data != null) {\r\n      this.categoryForm.controls[\"categoryName\"].setValue(this.categoryUpdateData.data.categoryName);\r\n      this.categoryForm.controls[\"categoryDesc\"].setValue(this.categoryUpdateData.data.categoryDesc);\r\n    }\r\n  }\r\n\r\n  closeModal(): void {\r\n      this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.categoryForm.valid) {\r\n      if (this.categoryUpdateData?.data.id != null) {\r\n        this.updateCategory();\r\n      } else {\r\n        this.saveCategory();\r\n      }\r\n    }\r\n  }\r\n\r\n  saveCategory() {\r\n    let data = {\r\n      id: this.categoryUpdateData?.data.id,\r\n      categoryName: this.categoryForm.controls.categoryName.value,\r\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\r\n    }\r\n    this.categoryService.createCategory(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.successMsg = \"Category Successfully Created..!\";\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      this.errorMsg = error.error.errorMessage;\r\n    })\r\n  }\r\n\r\n  updateCategory() {\r\n    let data = {\r\n      id: this.categoryUpdateData?.data.id,\r\n      categoryName: this.categoryForm.controls.categoryName.value,\r\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\r\n    }\r\n    this.categoryService.updateCategory(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.successMsg = \"Category Successfully Updated..!\";\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      this.errorMsg = error.error.errorMessage;\r\n    })\r\n  }\r\n\r\n  getCategoryList() {\r\n    this.categoryService.getCategoryList().subscribe(data => {\r\n    }, error => console.log(error));\r\n  }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id==null\">\r\n        <h4 class=\"title\">Add Category</h4>\r\n    </div>\r\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id!=null\">\r\n        <h4 class=\"title\">Update Category</h4>\r\n    </div>\r\n    <hr>\r\n    \r\n    <form [formGroup]=\"categoryForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Category Name\" formControlName=\"categoryName\" required>\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Category description\" formControlName=\"categoryDesc\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" class=\"btn btn-warning\" style=\"width: 25%;margin-left: 5px;\" (click)=\"closeModal()\"\r\n                aria-label=\"Close\">Cancel</button>\r\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;\"\r\n                [disabled]=\"!categoryForm.valid\">Save</button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { SalesOrderService } from 'src/app/_services/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-update-balance-sheet',\r\n  templateUrl: './customer-update-balance-sheet.component.html',\r\n  styleUrls: ['./customer-update-balance-sheet.component.css']\r\n})\r\nexport class UpdateBalanceSheetComponent implements OnInit {\r\n  productForm: FormGroup;\r\n  productUpdateData: any;\r\n  minStartDate = new Date();\r\n  errorMessage = '';\r\n\r\n  constructor(private salesOrderService: SalesOrderService,\r\n    public dialogRef: MatDialogRef<UpdateBalanceSheetComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    this.productForm = new FormGroup({\r\n      id: new FormControl(),\r\n      customerName: new FormControl(),\r\n      currentBalance: new FormControl(),\r\n      payAmount: new FormControl(),\r\n      dueDate: new FormControl(),\r\n    });\r\n\r\n    if (data != null) {\r\n      this.productUpdateData = data?.data;\r\n      this.productForm.controls['id'].setValue(this.productUpdateData.customer.id);\r\n      this.productForm.controls['customerName'].setValue(this.productUpdateData.customer.customerName);\r\n      this.productForm.controls['currentBalance'].setValue(this.productUpdateData.currentBalance);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.productForm.valid) {\r\n      if (this.productForm.controls.id.value != null) {\r\n        this.updateCustomerBalance();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateCustomerBalance() {\r\n    let status: string = '';\r\n    const payAmount: number = Number(this.productForm.controls.payAmount.value);\r\n\r\n    if (payAmount < 0) {\r\n      alert('Pay amount should be positive');\r\n      return;\r\n    } else if (payAmount == 0) {\r\n      alert('Pay amount should not be ZERO');\r\n      return;\r\n    } else if (payAmount === this.productForm.controls.currentBalance.value) {\r\n      status = 'PAID';\r\n    } else if (payAmount < this.productForm.controls.currentBalance.value) {\r\n      status = 'DUE';\r\n    } else {\r\n      alert('Please pay amount less than due amount');\r\n      return;\r\n    }\r\n\r\n    if (payAmount !== this.productForm.controls.currentBalance.value) {\r\n      if (!this.productForm.controls.dueDate.value) {\r\n        this.errorMessage = 'Please select Due date';\r\n        return;\r\n      }\r\n    }\r\n\r\n    let data = {\r\n      id: this.productForm.controls.id.value,\r\n      payAmount: payAmount,\r\n      status: status,\r\n      currentBalance: this.productForm.controls.currentBalance.value,\r\n      dueDate: this.productForm.controls.dueDate.value,\r\n    };\r\n\r\n    this.salesOrderService.updateSalesOrder(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      //this.errorMsg = error.error.errorMessage;\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"product-conatiner\">\r\n\r\n    <form [formGroup]=\"productForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Customer name</mat-label>\r\n                <input formControlName=\"customerName\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Current balance</mat-label>\r\n                <input type=\"text\" formControlName=\"currentBalance\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Pay amount</mat-label>\r\n                <input formControlName=\"payAmount\" type=\"number\" matInput required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <mat-form-field>\r\n            <mat-label>Due date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker2\" [min]=\"minStartDate\" formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <div class=\"button-container\">\r\n            <span style=\"color: red;\">{{errorMessage}}</span>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!productForm.valid\" class=\"btn btn-primary\"\r\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { BalanceSheetComponent } from './balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MobileMenuComponent } from './menu/mobile-menu/mobile-menu.component';\nimport { TableModule } from 'primeng/table';\nimport { ActionBarComponent } from './menu/action-bar/action-bar.component';\nimport { ActionBarItemComponent } from './menu/action-bar-item/action-bar-item.component';\nimport { DemoMaterialModule } from './material.module';\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\nimport { CreateCompanyComponent } from './companies/create-company/create-company.component';\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\nimport { LocationListComponent } from './locations/location-list/location-list.component';\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { CreateProductComponent } from './products/create-product/create-product.component';\nimport { TableComponent } from './ui_modules/table/table.component';\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\nimport { UpdateBalanceSheetComponent } from './balance-sheet/customer-balance-sheet/update-customer-balance-sheet/customer-update-balance-sheet.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { SupplierBalanceSheetComponent } from './balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component';\nimport { SupplierUpdateBalanceSheetComponent } from './balance-sheet/supplier-balance-sheet/update-supplier-balance-sheet/supplier-update-balance-sheet.component';\nimport { DateAdapter } from '@angular/material/core';\nimport { ProfitSummaryComponent } from './reports/profit-summary/profit-summary.component';\nimport { StockBookComponent } from './reports/stock-book/stock-book.component';\nimport { PurchaseReportDetailsComponent } from './reports/purchase-report-details/purchase-report-details.component';\nimport { SalesReportDetailsComponent } from './reports/sales-report-details/sales-report-details.component';\nimport { UpdateBankInfoComponent } from './update-bank-info/update-bank-info.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { UpdateBankDetails } from './UpdateBankDetails/UpdateBankDetails.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavigationBarComponent } from './menu/navigation-bar/navigation-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateProductComponent,\n    ProductListComponent,\n    CreateCategoryComponent,\n    PurchaseOrderComponent,\n    CreateCustomerComponent,\n    CreateSupplierComponent,\n    CreateLocationComponent,\n    SalesOrderComponent,\n    BalanceSheetComponent,\n    SupplierUpdateBalanceSheetComponent,\n    SupplierBalanceSheetComponent,\n    ActionBarComponent,\n    ActionBarItemComponent,\n    NavigationBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    NotfoundComponent,\n    MobileMenuComponent,\n    CustomersListComponent,\n    CreateCompanyComponent,\n    CompanyListComponent,\n    CategoryListComponent,\n    CreateSupplierComponent,\n    SupplierListComponent,\n    LocationListComponent,\n    TableComponent,\n    SalesTableComponent,\n    SalesReportComponent,\n    PurchaseReportComponent,\n    UpdateBalanceSheetComponent,\n    ProfitSummaryComponent,\n    StockBookComponent,\n    PurchaseReportDetailsComponent,\n    SalesReportDetailsComponent,\n    UpdateBankInfoComponent,\n    UpdateBankInfoComponent,\n    UpdateBankDetails\n  ],\n  imports: [\n    TableModule,\n    DemoMaterialModule,\n    MatTableModule,\n    MatSortModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    NgbModule,\n    NgxPaginationModule,\n    RouterModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private dateAdapter: DateAdapter<Date>) {\n    dateAdapter.setLocale(\"en-in\"); // DD/MM/YYYY\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { CreateCategoryComponent } from '../create-category/create-category.component';\r\n\r\n@Component({\r\n  selector: 'app-category-list',\r\n  templateUrl: './category-list.component.html',\r\n  styleUrls: ['./category-list.component.css']\r\n})\r\n\r\nexport class CategoryListComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['categoryName', 'categoryDesc', 'id'];\r\n  dataSource;\r\n\r\n  constructor(private categoryService: CategoryService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategoryList();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\r\n      width: '550px',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getCategoryList();\r\n    });\r\n  }\r\n\r\n  updateCategory(updateCategory): void {\r\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\r\n      width: '550px',\r\n      disableClose: true,\r\n      data: { data: updateCategory }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getCategoryList();\r\n    });\r\n  }\r\n\r\n  getCategoryList() {\r\n    this.categoryService.getCategoryList().subscribe(data => {\r\n      this.dataSource = data;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  deleteCategory(event) {\r\n    this.categoryService.deleteCategory(event.id).subscribe(\r\n      response => {\r\n        this.getCategoryList();\r\n      },\r\n      error => {\r\n        console.log(JSON.parse(error.error).errorMessage);\r\n        alert(JSON.parse(error.error).errorMessage);\r\n      });\r\n  }\r\n}\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\">\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\">Add Category </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"categoryName\">\r\n            <th mat-header-cell *matHeaderCellDef>Category</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.categoryName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"categoryDesc\">\r\n            <th mat-header-cell *matHeaderCellDef> Description </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.categoryDesc}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef> Action </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n\r\n                <button class=\"kebab-menu-btn\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n          <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n          <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n        </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateCategory(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                     </button>\r\n                        <br>\r\n                        <button (click)=\"deleteCategory(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n                        </button\r\n                        ><br>\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>","import { MatTableDataSource } from '@angular/material/table';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { Product } from '../_model/product';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from '../_services/product.service';\r\nimport { SalesOrder, UpdateProduct } from '../_model/sales-order';\r\nimport { SalesOrderService } from '../_services/sales-order.service';\r\nimport { Customer } from '../_model/customer';\r\nimport { CustomerService } from '../_services/customer.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-sales-order',\r\n  templateUrl: './sales-order.component.html',\r\n  styleUrls: ['./sales-order.component.css']\r\n})\r\nexport class SalesOrderComponent implements OnInit {\r\n  salesOrderDetailData: any;\r\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'totalAmount'];\r\n  filteredCustomers: Observable<Customer[]>;\r\n  filteredProducts: Observable<Product[]>;\r\n\r\n  customers: Customer[];\r\n  products: Product[];\r\n\r\n  previousBalance = 0;\r\n  totalQty = 0;\r\n  totalAmount = 0;\r\n\r\n  salesOrderForm: FormGroup;\r\n  singleClickDisable = false;\r\n  motorVehicleNo: any;\r\n  selected_deliver_status = 'DELIVERED';\r\n  selected_payment_mode = 'CASH';\r\n  @ViewChild('searchProduct') searchProduct: ElementRef;\r\n  minStartDate = new Date();\r\n  popupTitle = \"\";\r\n  popupsubtitle = \"\";\r\n  popupDescription = \"\";\r\n  @ViewChild('modalContent') modalContent: ElementRef;\r\n  popupMarkup = \"\";\r\n  salesOrder: SalesOrder = new SalesOrder();\r\n\r\n  changeText: boolean;\r\n  updatedProductSalePriceList: UpdateProduct[] = [];\r\n  priceChangeHistory: any = {};\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private productService: ProductService,\r\n    private modalService: NgbModal,\r\n    private customerService: CustomerService,\r\n    private salesOrderService: SalesOrderService) {\r\n\r\n    this.changeText = false;\r\n    this.customers = [];\r\n    this.products = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.singleClickDisable = false;\r\n    this.fetchData();\r\n    this._createForm();\r\n    console.log('this.salesOrderForm', this.salesOrderForm);\r\n  }\r\n\r\n  removeProduct(index: number) {\r\n    const temp = this.salesOrderDetailArr.value[index];\r\n    const tempIndex = this.updatedProductSalePriceList.findIndex(item => item.id === temp.product.id);\r\n    if (tempIndex !== -1) {\r\n      this.updatedProductSalePriceList.splice(tempIndex, 1);\r\n    }\r\n\r\n    this.priceChangeHistory[temp.product.id] = undefined;\r\n\r\n    this.salesOrderDetailArr.removeAt(index);\r\n    this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n    this.calculateAllAmounts(this.salesOrderDetailArr.value);\r\n  }\r\n\r\n  selectedProduct(selectedProduct: string) {\r\n    this.salesOrderForm.controls['productName'].setValue(null);\r\n    this.searchProduct.nativeElement.blur();\r\n\r\n    const product = this._findProduct(selectedProduct);\r\n    if (product.qty <= 0) {\r\n      // alert('Stock is not avaiable');\r\n      this.showAlert(\"Error\", \"Stock is not avaiable\", \"\");\r\n      // this.salesOrderForm = this._fb.group({\r\n      //productName: ['']\r\n      //});\r\n      return;\r\n    }\r\n    this._addProduct(product);\r\n    this.calculateAllAmounts(this.salesOrderDetailArr.value)\r\n  }\r\n\r\n  selectedCustomer(selectedCustomer: string) {\r\n    const customer = this._findCustomer(selectedCustomer);\r\n    this._customerBalanceData(customer?.id);\r\n  }\r\n\r\n  fetchData() {\r\n    this.customers = [];\r\n    this.customerService.getCustomerList().subscribe(data => {\r\n      data.forEach(x => {\r\n        if (x.customerName != '') {\r\n          this.customers.push(x);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.productService.getProductsList().subscribe(data => {\r\n      this.products = data;\r\n      this._valueChangesListner();\r\n    });\r\n  }\r\n\r\n  getCurrentBalance() {\r\n    return this.totalAmount - this.amountPaid.value;\r\n  }\r\n\r\n  getTotalBalance() {\r\n    return this.previousBalance + this.getCurrentBalance();\r\n  }\r\n\r\n  showAlert(popupTitle: string, popupDescription: string, popupsubtitle: string, popupMarkup: string = \"\", callback: any = () => { }) {\r\n    this.popupTitle = popupTitle;\r\n    this.popupsubtitle = popupsubtitle;\r\n    this.popupDescription = popupDescription;\r\n    this.popupMarkup = popupMarkup;\r\n\r\n    this.modalService.open(this.modalContent, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      callback(\"ok\");\r\n    }, (reason) => {\r\n      callback(\"cancel\");\r\n    });\r\n  }\r\n\r\n  showMsg: boolean = false;\r\n\r\n  save(isPrintReq: boolean, content: any) {\r\n    this.singleClickDisable = true;\r\n    if (this.salesOrderDetailArr.value.length === 0) {\r\n      // alert('please select products, before submitting');\r\n      this.showAlert(\"Error\", \"please select products, before submitting\", \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    }\r\n\r\n    let isStockAvail = true;\r\n    this.salesOrderDetailArr.value.forEach(value => {\r\n      if (value.product.qty < value.qtyOrdered) {\r\n        // alert('No Stock for product: ' + value.product.productName);\r\n        this.showAlert(\"Error\", 'No Stock for product: ' + value.product.productName, \"\");\r\n\r\n        isStockAvail = false;\r\n      }\r\n\r\n      if (value.qtyOrdered === 0) {\r\n        // alert('Please add Quantity to : ' + value.product.productName);\r\n        this.showAlert(\"Error\", \"Please add Quantity to : \" + value.product.productName, \"\");\r\n        isStockAvail = false;\r\n      }\r\n    });\r\n\r\n    if (isStockAvail) {\r\n      const customerName = this.salesOrderForm.get('customerName').value;\r\n      let customer = this._findCustomer(customerName);\r\n\r\n      if (customer === undefined) {\r\n        customer = this.getCustomerObj(customerName);\r\n      }\r\n      customer.phoneNumber = this.salesOrderForm.get('motorVehicleNo').value;\r\n      const salesOrder: SalesOrder = new SalesOrder();\r\n      salesOrder.customer = customer;\r\n      salesOrder.currentBalance = this.getCurrentBalance();\r\n      salesOrder.salesOrderDetail = this.salesOrderDetailArr.value;\r\n      salesOrder.totalPrice = this.totalAmount;\r\n      //salesOrder.vehicleNo = this.salesOrderForm.get('motorVehicleNo').value;\r\n      salesOrder.amountPaid = this.salesOrderForm.get('amountPaid').value;\r\n      salesOrder.dueDate = this.salesOrderForm.get('dueDate').value?.getTime();\r\n      salesOrder.billDate = this.salesOrderForm.get('billDate').value?.getTime();\r\n      salesOrder.previousBalance = this.getTotalBalance();\r\n      salesOrder.deliverStatus = this.selected_deliver_status;\r\n      salesOrder.paymentMode = this.selected_payment_mode;\r\n      salesOrder.currentDue = this.previousBalance;\r\n\r\n      if (salesOrder.amountPaid < 0) {\r\n        // alert('Amount paid should be positive');\r\n        this.showAlert(\"Error\", \"Amount paid should be positive\", \"\");\r\n        this.singleClickDisable = false;\r\n        return;\r\n      } else if (this.getTotalBalance() < 0) {\r\n        // alert('Amount paid should be equals to balance');\r\n        this.showAlert(\"Error\", \"Amount paid should be equals to balance\", \"\");\r\n        this.singleClickDisable = false;\r\n        return;\r\n      } else if (this.getTotalBalance() <= 0) {\r\n        salesOrder.status = 'PAID';\r\n      } else if (salesOrder.amountPaid > 0) {\r\n        salesOrder.status = 'PARTIAL';\r\n      } else {\r\n        salesOrder.status = 'DUE';\r\n      }\r\n\r\n      if ((salesOrder.status === 'DUE' || salesOrder.status === 'PARTIAL') &&\r\n        (customer.customerName === \"\" || customer.phoneNumber === null || customer.phoneNumber === \"\" || salesOrder.dueDate === undefined)) {\r\n        // alert(\"Please don't sell products to unknowns.\\nplease add Customer name, Phone number and Due date to proceed.\")\r\n\r\n        let alertMsg = \"<p>Please provide below details.<br>\";\r\n        let fields = [];\r\n        if (customer.customerName === \"\") {\r\n          fields.push(`<span class=\"text-danger\">Customer name</span>`);\r\n        }\r\n        if (customer.phoneNumber === \"\") {\r\n          fields.push(`<span class=\"text-danger\">Phone number</span>`);\r\n        }\r\n        if (salesOrder.dueDate === undefined) {\r\n          fields.push(`<span class=\"text-danger\">Due date</span>`);\r\n        }\r\n        alertMsg = alertMsg + fields.join(\"<br>\") + \"</p>\";\r\n        this.showAlert(\"Error\", \"\", \"\", alertMsg);\r\n\r\n        this.singleClickDisable = false;\r\n        return;\r\n      }\r\n\r\n      if (salesOrder.amountPaid == null) {\r\n        salesOrder.amountPaid = 0.0;\r\n      }\r\n\r\n      this.salesOrder = salesOrder;\r\n      this.salesOrder.updatedProductSalePriceList = this.updatedProductSalePriceList;\r\n\r\n      this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size: 'sm' }).result.then((result) => {\r\n        this.salesOrderService\r\n          .createSalesOrder(salesOrder).subscribe(data => {\r\n            this.productService.updateProductList(this.updatedProductSalePriceList).subscribe();\r\n            console.log(data);\r\n            //this._printPdf(data);\r\n            this.refreshAfterSave();\r\n            this.singleClickDisable = false;\r\n            if (isPrintReq) {\r\n              this._printPdf(data);\r\n              //window.location.reload();\r\n            } else {\r\n              this.showMsg = true;\r\n              setTimeout(() => {\r\n                this.showMsg = false;\r\n              }, 2000);\r\n            }\r\n          },\r\n            error => {\r\n              console.log(error);\r\n              this.singleClickDisable = false;\r\n            });\r\n      }, (reason) => {\r\n        this.singleClickDisable = false;\r\n      });\r\n    }\r\n    this.singleClickDisable = false;\r\n  }\r\n\r\n  getCustomerObj(customerName: string): any {\r\n    let data = {\r\n      customerName: customerName,\r\n      gstIn: 'NA',\r\n      phoneNumber: 'NA'\r\n    };\r\n    return data;\r\n  }\r\n\r\n  refreshAfterSave() {\r\n    //window.location.reload();\r\n    this.previousBalance = 0;\r\n    this.totalAmount = 0;\r\n    this.salesOrderDetailData = [];\r\n    this.updatedProductSalePriceList = [];\r\n    this.priceChangeHistory = {};\r\n    this._createForm();\r\n    this.fetchData();\r\n    this.totalQty = 0;\r\n  }\r\n\r\n  private _customerBalanceData(customerID: any) {\r\n    this.salesOrderService.getSalesOrderBalaceByCustomer(customerID).subscribe((data: any) => {\r\n      this.previousBalance = data.balance;\r\n      this.salesOrderForm.get('motorVehicleNo').setValue(data.customer.phoneNumber);\r\n    }, (error: any) => console.log(error));\r\n  }\r\n\r\n  private _printPdf(response) {\r\n    //const url = `${location.origin}/praveen-traders/#salesTable`;\r\n    const url = `${location.origin}/#salesTable`;\r\n    console.log('this.response1', JSON.stringify((window['response'])));\r\n    console.log(\"url \", url);\r\n    const myWindow = window.open(url, \"_blank\", \"width=800,height=600,left=250,right=150\");\r\n    console.log(\"response\", response);\r\n    myWindow['response'] = response;\r\n    console.log('this.response2', JSON.stringify((window['response'])));\r\n  }\r\n\r\n  private _filterCustomer(value: string): Customer[] {\r\n    if (!value) {\r\n      this.previousBalance = 0.00;\r\n      return this.customers;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    const customerList = this.customers.filter(option => option.customerName.toLowerCase().includes(filterValue))\r\n    if (customerList.length == 0) {\r\n      this.previousBalance = 0.00;\r\n    }\r\n    return customerList;\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    if (!value) {\r\n      return this.products;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(option => option.productName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _findProduct(value: string): Product {\r\n    return this.products.find(option => option.productName === value);\r\n  }\r\n\r\n  private _findCustomer(value: string): Customer {\r\n    return this.customers.find(option => option.customerName === value);\r\n  }\r\n\r\n  private _initRow(product) {\r\n    return this._fb.group({\r\n      price: [product.currentPrice, [Validators.required, Validators.min(1), Validators.max(100000)]],\r\n      qtyOrdered: [1, [Validators.required, Validators.min(1), Validators.max(10000)]],\r\n      product: [product]\r\n    });\r\n  }\r\n\r\n\r\n  private _addProduct(product: Product) {\r\n    let isProductAdded = true;\r\n    this.salesOrderDetailArr.value.forEach(element => {\r\n      if (product.productName === element.product.productName) {\r\n        // alert('Product is already Added!!');\r\n        this.showAlert(\"Error\", \"Product is already Added!!\", \"\");\r\n\r\n        isProductAdded = false;\r\n      }\r\n    });\r\n\r\n    if (isProductAdded) {\r\n      const newRow = this._initRow(product);\r\n      this.salesOrderDetailArr.push(newRow);\r\n      this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n    }\r\n  }\r\n\r\n  onChangePrice(event: any, product: any): void {\r\n    console.log(event);\r\n    console.log(product.value.product.productName);\r\n    const productId = product.value.product.id;\r\n    const updatedPrice = event.target.value;\r\n    //const previousPrice = this.updatedProductSalePriceList.find((item: any) => item.productId == product.value.product.id)?.price;\r\n    const previousPrice = this.priceChangeHistory[productId];\r\n\r\n    if ((previousPrice != updatedPrice) && (updatedPrice != product.value.product.currentPrice)) {\r\n      this.showAlert(\"Confirm\", \"Are you sure you want to update the price?\", \"\", \"\", (data) => {\r\n        console.log(data);\r\n        const productList = this.salesOrderDetailArr.value;\r\n        this.calculateAllAmounts(productList)\r\n\r\n        if (data === \"ok\") {\r\n          const productItem = {\r\n            price: updatedPrice,\r\n            productName: product.value.product.productName,\r\n            id: product.value.product.id,\r\n          }\r\n\r\n          const existingProduct = this.updatedProductSalePriceList.find((item: any) => item.id == productItem.id);\r\n          if (existingProduct) {\r\n            existingProduct.price = updatedPrice;\r\n          } else {\r\n            this.updatedProductSalePriceList.push(productItem);\r\n          }\r\n        } else {\r\n          //cancel\r\n        }\r\n\r\n        console.log(\"new prices\", this.updatedProductSalePriceList);\r\n        \r\n      });\r\n    } else if (updatedPrice == product.value.product.currentPrice) {\r\n      const tempIndex = this.updatedProductSalePriceList.findIndex(item => item.id === product.value.product.id);\r\n      if (tempIndex !== -1) {\r\n        this.updatedProductSalePriceList.splice(tempIndex, 1);\r\n      }\r\n    }\r\n\r\n    this.priceChangeHistory[productId] = updatedPrice;\r\n  }\r\n\r\n  onChangeQuantity(event: any, product: any): void {\r\n    console.log(this.salesOrderDetailArr);\r\n    console.log(event);\r\n    console.log(product.value.product.productName);\r\n    const productList = this.salesOrderDetailArr.value;\r\n    this.calculateAllAmounts(productList)\r\n  }\r\n\r\n  calculateAllAmounts(productList: any[]): void {\r\n    let totalAmount = 0;\r\n    let totalQtyCal = 0;\r\n    productList.forEach(product => {\r\n      const amount = Number(product.qtyOrdered) * Number(product.price);\r\n      //const taxAmount = amount * (product.product?.gst || 0) / 100;\r\n      totalQtyCal += product.qtyOrdered;\r\n      totalAmount += amount;\r\n    });\r\n    this.totalQty = totalQtyCal;\r\n    this.totalAmount = Math.round(totalAmount);\r\n  }\r\n\r\n  private _valueChangesListner() {\r\n    this.filteredCustomers = this.salesOrderForm.controls['customerName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterCustomer(value))\r\n    );\r\n\r\n    this.filteredProducts = this.salesOrderForm.controls['productName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProduct(value))\r\n    );\r\n\r\n\r\n\r\n    this.salesOrderDetailArr.valueChanges.subscribe((productList) => {\r\n      return;\r\n      let totalAmount = 0;\r\n      let totalQtyCal = 0;\r\n      productList.forEach(product => {\r\n        const amount = Number(product.qtyOrdered) * Number(product.price);\r\n        //const taxAmount = amount * (product.product?.gst || 0) / 100;\r\n        totalQtyCal += product.qtyOrdered;\r\n        totalAmount += amount;\r\n      });\r\n      this.totalQty = totalQtyCal;\r\n      this.totalAmount = Math.round(totalAmount);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private _createForm() {\r\n    this.salesOrderForm = this._fb.group({\r\n      customerName: [''],\r\n      productName: [''],\r\n      motorVehicleNo: [''],\r\n      dueDate: [],\r\n      billDate: [new Date()],\r\n      salesOrderDetail: this._fb.array([]),\r\n      amountPaid: [],\r\n    });\r\n  }\r\n\r\n  get salesOrderDetailArr() {\r\n    return this.salesOrderForm.get('salesOrderDetail') as FormArray;\r\n  }\r\n\r\n  get amountPaid() {\r\n    return this.salesOrderForm.get('amountPaid') as FormControl;\r\n  }\r\n}\r\n","<div class=\"middle\" *ngIf=\"showMsg\">\r\n    <div class=\"col-xs-6\">\r\n        <p class=\"alert alert-success\">\r\n            <strong>Sales Order Successfully created!!</strong>\r\n        </p>\r\n    </div>\r\n</div>\r\n\r\n<form [formGroup]=\"salesOrderForm\">\r\n    <div class=\"d-flex\">\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Product</mat-label>\r\n                <input #searchProduct type=\"text\" aria-label=\"Product\" matInput formControlName=\"productName\" [matAutocomplete]=\"productAuto\">\r\n                <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedProduct($event.option.value)\">\r\n                    <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\r\n                        {{product.productName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Customer</mat-label>\r\n                <input type=\"text\" aria-label=\"Customer\" matInput formControlName=\"customerName\" [matAutocomplete]=\"customerAuto\">\r\n                <mat-autocomplete #customerAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedCustomer($event.option.value)\">\r\n                    <mat-option *ngFor=\"let customer of filteredCustomers | async\" [value]=\"customer.customerName\">\r\n                        {{customer.customerName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-group col-2\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Phone number</mat-label>\r\n                <input type=\"text\" aria-label=\"Motor Vehicle no\" matInput formControlName=\"motorVehicleNo\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Bill date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"billDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Due date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker2\" [min]=\"minStartDate\" formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n    <div class=\"mat-elevation-z8 sales-order-container\">\r\n        <table formArrayName=\"salesOrderDetail\" [dataSource]=\"salesOrderDetailData\" mat-table>\r\n            <ng-container matColumnDef=\"sno\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">S. No</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\r\n                <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell>\r\n                    <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\r\n                        <mat-icon class=\"delete-button\">delete</mat-icon>\r\n                        <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                    </button>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"item\">\r\n                <th *matHeaderCellDef mat-header-cell>Item & Description</th>\r\n                <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Selling Price</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\">\r\n                        <input matInput type=\"number\" formControlName=\"price\" required class=\"text-right\" (blur)=\"onChangePrice($event, element)\">\r\n                        <span matPrefix>₹&nbsp;</span>\r\n                        <!--<mat-error *ngIf=\"element.get('price')?.hasError('required')\">\r\n              Price is Required!\r\n            </mat-error>-->\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('required')\">\r\n                            Selling Price: {{element.get('product')?.value?.currentPrice | number : '1.0-2'}}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('min')\">\r\n                            Price more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('max')\">\r\n                            Price can't be greater than 10 lakhs\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"quantity\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\" class=\"text-right\">\r\n                        <input matInput type=\"number\" formControlName=\"qtyOrdered\" required (change)=\"onChangeQuantity($event, element)\">\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('required')\">\r\n                            Stock: {{element.get('product')?.value?.qty}}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('min')\">\r\n                            Quantity more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('max')\">\r\n                            Quantity can't be greater than 10 thousand\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-5\">\r\n                    <h4><b>{{ totalQty }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"amount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Base Price</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value - (element.get('price')?.value * (element.get('product')?.value.gst/100) )}}</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container> -->\r\n\r\n            <!-- <ng-container matColumnDef=\"taxType\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\r\n          CGST/SGST <br> IGST Rate\r\n        </th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.get('product')?.value.gst}}%</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container> -->\r\n\r\n            <!-- <ng-container matColumnDef=\"taxAmount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100 | number : '1.0-2'}}\r\n        </td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>-->\r\n\r\n            <ng-container matColumnDef=\"totalAmount\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\r\n                <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n                    ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value | number : '1.0-2'}}\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">\r\n                    <h4><b>{{ totalAmount | currency:'INR' }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n            <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n        </table>\r\n        \r\n        \r\n            <!--<div style=\"display: flex; justify-content: space-between\">-->\r\n            <!-- TODO-->\r\n            <!--\r\n            <div class=\"total-container\">\r\n                <div>\r\n                    <mat-form-field>\r\n                        <mat-label>select delivery</mat-label>\r\n                        <mat-select [(value)]=\"selected_deliver_status\">\r\n                            <mat-option value=\"DELIVERED\">DELIVERED</mat-option>\r\n                            <mat-option value=\"NOT_DELIVERED\">NOT DELIVERED</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div>\r\n                    <mat-form-field>\r\n                        <mat-label>select payment</mat-label>\r\n                        <mat-select [(value)]=\"selected_payment_mode\">\r\n                            <mat-option value=\"CASH\">CASH</mat-option>\r\n                            <mat-option value=\"UPI\">UPI/ONLINE</mat-option>\r\n                            <mat-option value=\"CASH_UPI\">CASH & UPI</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            -->\r\n            <div class=\"total-container\">\r\n                <div>\r\n                    <label for=\"name\">Current Balance : </label>\r\n                    <span class=\"amount-read-only\">{{ ((getCurrentBalance() < 0) ? 0 : getCurrentBalance()) | currency:'INR' }}</span>\r\n                </div>\r\n                <div>\r\n                    <label for=\"name\">Previous Balance : </label>\r\n                    <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\r\n                </div>\r\n                <div>\r\n                    <label for=\"name\">Total Pay Balance :</label>\r\n                    <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\r\n                </div>\r\n                <div>\r\n                    <label for=\"name\">Amount Paid : </label>\r\n                    <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\r\n                </div>\r\n                <br>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left: 5px;\" [disabled]=\"singleClickDisable && !salesOrderForm.valid\" (click)=\"save(false, content)\">PLACE\r\n                    ORDER</button>\r\n                <button type=\"submit\" class=\"btn btn-success\" style=\"margin-left: 5px;\" [disabled]=\"singleClickDisable\" (click)=\"save(true, content)\">PLACE ORDER & PRINT</button>\r\n                <button class=\"btn btn-warning\" style=\"margin-left: 5px;\" (click)=\"refreshAfterSave()\">CLEAR</button>\r\n            </div>\r\n        <!-- </div> -->\r\n    </div>\r\n</form>\r\n\r\n<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">Order Summary</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p style=\"font-weight: 500;\">Please confirm below details before save?</p>\r\n\r\n        <div style=\"width: 210px;margin: 25px 0px;\">\r\n            <div class=\"custom-row\">\r\n                <p>Order Status</p>\r\n                <p><span class=\"text-primary\" style=\"color: green !important\">{{salesOrder?.status}}</span></p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Amount Paid</p>\r\n                <p>₹{{salesOrder?.amountPaid}}</p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Balance amount</p>\r\n                <p>₹{{getTotalBalance()}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <p>\r\n            <span class=\"text-danger\">Note: Order placed can't be deleted later!</span>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalContent let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">{{popupTitle}}</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>{{popupsubtitle}}</strong></p>\r\n        <p>{{popupDescription}}</p>\r\n        <div [innerHTML]=\"popupMarkup\"></div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>","export class Category {\n    categoryID: number;\n    categoryName: string;\n    categoryDesc: string;\n}\n","export class HttpClientHelper {\n    //static baseURL: string = 'http://ec2-18-222-37-157.us-east-2.compute.amazonaws.com:8080';\n\n    //Visual studio with backend\n    static baseURL = 'http://localhost:8080';\n\n    //External tomcat server\n    //static baseURL: string = 'http://localhost:8080/smart-accounting-book-backend';\n\n    //AWS server\n    //static baseURL: string = 'http://ec2-3-133-100-17.us-east-2.compute.amazonaws.com:8080/indian-kisan-care-backend';\n\n    //Online mock api\n    //static baseURL = 'https://signin.free.beeceptor.com';\n}\n","import { SalesOrderService } from '../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-profit-summary',\r\n  templateUrl: './profit-summary.component.html',\r\n  styleUrls: ['./profit-summary.component.css']\r\n})\r\nexport class ProfitSummaryComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['position', 'name', 'weight',];\r\n  displayedColumns1: string[] = ['createdDate', 'totalPrice', 'totalProfit', 'dueAmount', 'dueCollection'];\r\n  displayedColumnsProduct: string[] = ['productName', 'qtySold', 'totalPrice'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  reactiveForm: FormGroup;\r\n  dataSource1: any;\r\n  dataSourceProduct: any;\r\n  numberOfnotes: any;\r\n  dateData: Date;\r\n  transaction = 0;\r\n  dueAmount = 0;\r\n  upi = 0;\r\n  expense = 0;\r\n  openingBalance = 0;\r\n  dueCollection = 0;\r\n  difference = 0;\r\n  noOfNotes = 0;\r\n  total = 0;\r\n  notesOf10sTotal = 0;\r\n  notesOf20sTotal = 0;\r\n  notesOf50sTotal = 0;\r\n  notesOf100sTotal = 0;\r\n  notesOf200sTotal = 0;\r\n  notesOf500sTotal = 0;\r\n  notesOf2000sTotal = 0;\r\n  totalNoOfNotesCount = 0;\r\n  notesCount10 = 0;\r\n  notesCount2000 = 0;\r\n  notesCount20 = 0;\r\n  notesCount50 = 0;\r\n  notesCount100 = 0;\r\n  notesCount200 = 0;\r\n  notesCount500 = 0;\r\n  constructor(private salesOrderService: SalesOrderService, private _fb: FormBuilder,) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.reactiveForm = new FormGroup({\r\n      notesOfNotes2000: new FormControl('', [Validators.maxLength(3)]),\r\n      notesOfNotes500: new FormControl('', []),\r\n      notesOfNotes200: new FormControl('', []),\r\n      notesOfNotes100: new FormControl('', []),\r\n      notesOfNotes50: new FormControl('', []),\r\n      notesOfNotes20: new FormControl('', []),\r\n      notesOfNotes10: new FormControl('', []),\r\n    })\r\n\r\n    this.reactiveForm.get(\"notesOfNotes2000\").valueChanges.subscribe(selectedValue => {\r\n      this.notesCount2000 = selectedValue;\r\n      // this.noOfNotes=this.noOfNotes+this.notesCount2000;\r\n      this.total = 2000 * selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.total;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes500\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf500sTotal = 500 * selectedValue\r\n      this.notesCount500 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf500sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes200\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf200sTotal = 200 * selectedValue;\r\n      this.notesCount200 = selectedValue;\r\n      //  this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf200sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes100\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf100sTotal = 100 * selectedValue;\r\n      this.notesCount100 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf100sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes50\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf50sTotal = 50 * selectedValue;\r\n      this.notesCount50 = selectedValue;\r\n      //  this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf50sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes20\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf20sTotal = 20 * selectedValue;\r\n      this.notesCount20 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf20sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes10\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf10sTotal = 10 * selectedValue;\r\n      this.notesCount10 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf10sTotal;\r\n    })\r\n  }\r\n\r\n  calculate() {\r\n    this.noOfNotes = this.notesCount2000 + this.notesCount500 + this.notesCount200 + this.notesCount100 + this.notesCount50 + this.notesCount20 + this.notesCount10;\r\n    this.totalNoOfNotesCount = this.total + this.notesOf500sTotal + this.notesOf200sTotal + this.notesOf100sTotal + this.notesOf50sTotal + this.notesOf20sTotal + this.notesOf10sTotal;\r\n    this.difference =  (this.dueAmount - this.dueCollection + this.totalNoOfNotesCount + this.upi + this.expense - this.openingBalance) - this.transaction;\r\n  }\r\n  getSalesOrderList() {\r\n    this.salesOrderService.getBarChartReport().subscribe(res => {\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.getData(data[0]);\r\n    this.dataSource1 = new MatTableDataSource(data);\r\n    this.dataSource1.paginator = this.paginator;\r\n  }\r\n  private _setDataProductWise(data) {\r\n    this.dataSourceProduct = new MatTableDataSource(data);\r\n    this.dataSourceProduct.paginator = this.paginator;\r\n  }\r\n\r\n  getData(event) {\r\n    this.calculate();\r\n\r\n    this.dateData = event.billDate;\r\n    this.transaction = event.transaction;\r\n    this.dueAmount = event.dueAmount;\r\n    //this.profit = event.totalProfit;\r\n    this.dueCollection = event.dueCollection;\r\n    this.difference = this.transaction + this.dueAmount + this.dueCollection - this.totalNoOfNotesCount;\r\n    console.log(event);\r\n  }\r\n}","<div class=\"row\">\r\n  <div class=\"form-group col-6\">\r\n    <table [dataSource]=\"dataSource1\" mat-table>\r\n      <ng-container matColumnDef=\"createdDate\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-4\">Bill date</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right-4\" (click)=getData(element) style=\"cursor: pointer;\">\r\n          {{element.billDate}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"totalPrice\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-4\">Transaction</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.transaction.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dueAmount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Due Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.dueAmount.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"totalProfit\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-6\">Profit</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.profit.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dueCollection\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-6\">Due Collection</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.dueCollection.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <tr *matHeaderRowDef=\"displayedColumns1;  sticky: true\" mat-header-row></tr>\r\n      <tr *matRowDef=\"let row; columns: displayedColumns1;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n  <div class=\"col-3\">\r\n    <div style=\"display: flex;justify-content: center;\">\r\n      <mat-card\r\n        style=\"border:2px solid #5999d2;width:260px;border-top: 25px solid #5999d2;background-color: whitesmoke;padding: 0px;\">\r\n\r\n        <div class=\"container\" style=\"margin-top:20px\">\r\n          <div class=\"row\">\r\n            <div class=\"col-4 \" style=\"padding-left: 0px;padding-right: 0px;\">\r\n              <h3 style=\"margin-top: 5px\" class=\"example-right-align\">2000 X</h3>\r\n              <h3 style=\"\" class=\"example-right-align\">500 X</h3>\r\n              <h3 style=\"margin-top: 0px ;\" class=\"example-right-align\">200 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">100 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">50 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">20 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">10 X</h3>\r\n            </div>\r\n            <div class=\"col-4\" style=\"padding-right: 0px;padding-left: 0px;width: 180px;\">\r\n              <form [formGroup]=\"reactiveForm\">\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes2000\" maxlength=\"3\">\r\n                  </mat-form-field>\r\n                  <span style=\"margin-left: 21px;font-size:20px\">=</span>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes500\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes200\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes100\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes50\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes20\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes10\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n              </form>\r\n            </div>\r\n            <div class=\"col-4 \" style=\"padding-right: 40px;width: 20px;\">\r\n              <h4 class=\"example-right-align\">{{total}} </h4>\r\n              <h4 style=\"margin-top: 24px;\" class=\"example-right-align\">{{notesOf500sTotal}} </h4>\r\n              <h4 style=\"margin-top: 24px;\" class=\"example-right-align\">{{notesOf200sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf100sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf50sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf20sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf10sTotal}} </h4>\r\n            </div>\r\n          </div>\r\n          <hr style=\"border-top: 1px solid rgb(89 153 210);margin-top:'0px';margin-bottom:5px;padding:0px\">\r\n          <div style=\"display: flex;justify-content:space-between\">\r\n            <div>\r\n              <h3 class=\"example-right-align\">Notes</h3>\r\n            </div>\r\n            <div>\r\n              <h3 class=\"example-right-align\">{{noOfNotes}}</h3>\r\n            </div>\r\n            <div>\r\n              <h3 class=\"example-right-align\">Total <span class=\"example-right-align\">=</span> {{totalNoOfNotesCount}}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <hr style=\"border-top: 1px solid rgb(89 153 210);margin-top:'0px';margin-bottom:10px\">\r\n        </div>\r\n\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-3\">\r\n    <div style=\"display: flex;justify-content: center;\">\r\n      <mat-card style=\"background-color: whitesmoke; border:2px solid #5999d2;;border-top: 25px solid #5999d2;\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div>\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"date\" max=\"3\" placeholder=\"Bill date\" [(ngModel)]=\"dateData\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Transaction \" [(ngModel)]=\"transaction\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Due Collection \" [(ngModel)]=\"dueCollection\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Due Given \" [(ngModel)]=\"dueAmount\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput placeholder=\"Enter Hard Cash \" [(ngModel)]=\"totalNoOfNotesCount\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Enter UPI/Online \" [(ngModel)]=\"upi\"\r\n                      (ngModelChange)=\"calculate()\" class=\"example-right-align\">\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Enter Expense/Misc\" [(ngModel)]=\"expense\"\r\n                      (ngModelChange)=\"calculate()\" class=\"example-right-align\">\r\n                  </mat-form-field>\r\n                </p>\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Enter Opening Balance \" [(ngModel)]=\"openingBalance\"\r\n                      (ngModelChange)=\"calculate()\" class=\"example-right-align\">\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput placeholder=\"Difference \" [(ngModel)]=\"difference\" class=\"example-right-align\"\r\n                      readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-notfound',\r\n    templateUrl: './notfound.component.html',\r\n    styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"error-wrapper\">\r\n        <div class=\"man-icon\"></div>\r\n        <h3 class=\"title\">404</h3>\r\n        <p class=\"info\">Oh! Page not found</p>\r\n        <button class=\"home-btn\" routerLink=\"/dashboard\" type=\"button\">HOME</button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Observable} from 'rxjs';\r\nimport {Location} from 'src/app/_model/location';\r\nimport {LocationService} from 'src/app/_services/location.service';\r\n\r\n@Component({\r\n    selector: 'app-create-location',\r\n    templateUrl: './create-location.component.html',\r\n    styleUrls: ['./create-location.component.css']\r\n})\r\nexport class CreateLocationComponent implements OnInit {\r\n    locationForm: FormGroup;\r\n    locations: Observable<Location[]>;\r\n    location: Location = new Location();\r\n    locationUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    //@ViewChild(MatPaginator) paginator: MatPaginator;\r\n    //displayedColumns: string[] = ['cityName', 'id'];\r\n    dataSource;\r\n\r\n    constructor(private locationService: LocationService,\r\n                public dialogRef: MatDialogRef<CreateLocationComponent>,\r\n                @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.locationUpdateData = data;\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required])\r\n        });\r\n        if (data != null) {\r\n            this.locationForm.controls['cityName'].setValue(this.locationUpdateData.data.cityName);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (this.locationUpdateData?.data.id != null) {\r\n            this.updateLocation();\r\n        } else {\r\n            this.saveLocation();\r\n        }\r\n    }\r\n\r\n    saveLocation() {\r\n        let data = {\r\n            id: this.locationUpdateData?.data.id,\r\n            cityName: this.locationForm.controls.cityName.value\r\n        };\r\n        this.locationService.createLocation(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Location Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    updateLocation() {\r\n        let data = {\r\n            id: this.locationUpdateData?.data.id,\r\n            cityName: this.locationForm.controls.cityName.value\r\n        };\r\n        this.locationService.updateLocation(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Location Successfully Updated..!';\r\n                this.getLocationList();\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    getLocationList() {\r\n        this.locationService.getLocationList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n        }, error => console.log(error));\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div *ngIf=\"locationUpdateData?.data.id==null\" class=\"title-header\">\r\n        <h4 class=\"title\">Add location</h4>\r\n    </div>\r\n    <div *ngIf=\"locationUpdateData?.data.id!=null\" class=\"title-header\">\r\n        <h4 class=\"title\">Update location</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"locationForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"cityName\" matInput placeholder=\"location Name\" required>\r\n                <mat-error *ngIf=\"locationForm.get('cityName').hasError('required')\">\r\n                    City Name required!\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Save\r\n            </button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { SalesOrderService } from '../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Product } from 'src/app/_model/product';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-stock-book',\r\n  templateUrl: './stock-book.component.html',\r\n  styleUrls: ['./stock-book.component.css']\r\n})\r\nexport class StockBookComponent implements OnInit {\r\n  displayedColumns: string[] = ['sno', 'date', 'productName', 'openingStock', 'soldStock', 'closingStock'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n  dataSourceProduct: any;\r\n  listOfCategories = [];\r\n  products: Product[];\r\n  filteredProducts: Observable<Product[]>;\r\n  productForm: FormGroup;\r\n\r\n  searchText: string;\r\n  startDate: string;\r\n  endDate: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  constructor(private salesOrderService: SalesOrderService, private productService: ProductService) {\r\n    this.productForm = new FormGroup({\r\n      productName: new FormControl(null),\r\n      totalProfit: new FormControl(),\r\n      totalPrice: new FormControl(),\r\n      totalQtySold: new FormControl()\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.getSalesOrderList(1, '0', '0');\r\n    //alert('Please select dropdown')\r\n\r\n    this.productService.getProductsList().subscribe(data => {\r\n      this.products = data;\r\n      this._valueChangesListner();\r\n    });\r\n\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  private _valueChangesListner() {\r\n    this.filteredProducts = this.productForm.controls['productName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProduct(value))\r\n    );\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    if (!value) {\r\n      this.searchText = null;\r\n      this.getSalesOrderList(null, this.startDate, this.endDate);\r\n      return this.products;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(option => option.productName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  selectedProduct(selectedProduct: string) {\r\n    //this.productForm.controls['productName'].setValue(null);\r\n    this.getSalesOrderList(selectedProduct, this.startDate, this.endDate);\r\n    this.searchText = selectedProduct;\r\n    //this.getSalesOrderList('0','0');\r\n  }\r\n\r\n  private _findProduct(value: string): Product {\r\n    return this.products.find(option => option.productName === value);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n    this.startDate = null;\r\n    this.endDate = null;\r\n    this.getSalesOrderList(this.searchText, null, null);\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n\r\n    if (start && end) {\r\n      this.startDate = start.getTime();\r\n      this.endDate = end.getTime() + 86399999;\r\n      if(this.searchText == undefined){\r\n        this.searchText = null;\r\n      }\r\n      this.getSalesOrderList(this.searchText, this.startDate, this.endDate);\r\n    };\r\n  }\r\n\r\n  getSalesOrderList(productName, startDate: string, endDate: string) {\r\n   // if(startDate != \"0\" && endDate != \"0\"){\r\n     if(startDate == undefined || endDate == undefined){\r\n        startDate = null;\r\n        endDate = null;\r\n     }\r\n     //this.searchText = productName; \r\n     this.salesOrderService.getStockBookByDate(productName, startDate, endDate).subscribe(res => {\r\n      this.dataSource = res.stockData;\r\n            this.dataSource = new MatTableDataSource(res.stockData);\r\n            this.dataSource.paginator = this.paginator;\r\n      //this.clearDate();\r\n      this.productForm.controls['totalProfit'].setValue(res.totalProfit);\r\n      this.productForm.controls['totalPrice'].setValue(res.totalPrice);\r\n      this.productForm.controls['totalQtySold'].setValue(res.totalQtySold);\r\n     }, error => console.log(error));\r\n   // }\r\n }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-4\">\r\n    <b><span>Search by Product and Billing date</span></b>\r\n    <br><br>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Product</mat-label>\r\n      <input type=\"text\" aria-label=\"Product\" matInput formControlName=\"productName\" [matAutocomplete]=\"productAuto\">\r\n      <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption\r\n        (optionSelected)=\"selectedProduct($event.option.value)\">\r\n        <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\r\n          {{product.productName}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n        <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n      </mat-datepicker-toggle>\r\n      <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n      <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n      <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n    </mat-form-field>\r\n\r\n    <br><br><br><br>\r\n    <b><span>Stock Summary</span></b>\r\n    <br><br>\r\n    <div class=\"product-conatiner\">\r\n      <form [formGroup]=\"productForm\">\r\n        <!--<div class=\"addproduct-container\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Total Transaction</mat-label>\r\n              <input type=\"text\" formControlName=\"totalPrice\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n          </div>-->\r\n\r\n        <div class=\"addproduct-container\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Total Qty Sold</mat-label>\r\n            <input type=\"text\" formControlName=\"totalQtySold\" matInput readonly>\r\n          </mat-form-field>\r\n          <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Total Profit</mat-label>\r\n            <input type=\"text\" formControlName=\"totalProfit\" matInput readonly>\r\n          </mat-form-field>\r\n          <br>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n      <ng-container matColumnDef=\"sno\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-left pr-2\">S.No</th>\r\n        <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\r\n        <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Billing Date</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\"> {{element.date | date: 'dd/MM/yyyy'}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"productName\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Product Name</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-left pr-4\">\r\n          {{element.stockBook.productName}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"openingStock\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Opening Stock</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.stockBook.openingStock}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"soldStock\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Qty Sold</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.stockBook.soldStock}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"closingStock\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Closing Stock</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.stockBook.closingStock}} </td>\r\n      </ng-container>\r\n\r\n      <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</div>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/company';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCompany(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createCompany(company: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, company);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateCompany(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteCompany(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getCompanyList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n}\r\n","import { PurchaseOrderService } from '../../_services/purchase-order.service';\r\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-purchase-report',\r\n  templateUrl: './purchase-report-details.component.html',\r\n  styleUrls: ['./purchase-report-details.component.css']\r\n})\r\nexport class PurchaseReportDetailsComponent implements OnInit {\r\n  displayedColumns: string[] = ['productName', 'price', 'qtyOrdered'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  constructor(public dialog: MatDialog, private purchaseOrderService: PurchaseOrderService,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    if (data != null) {\r\n      this._setData(data?.data.purchaseOrderDetail);\r\n    }\r\n  }\r\n  ngOnInit(): void { }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.purchaseOrderService.deleteOrderDetails(event.purchaseOrderDetailID).subscribe(\r\n      response => {\r\n        this._setData(JSON.parse(response))\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Could not able to delete purchase order since used in sales order');\r\n      });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"productName\">\r\n      <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Purchase Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.price | number : '1.0-2'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"qtyOrdered\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element;\" mat-cell>\r\n        <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n          <mat-icon class=\"delete-button\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>-->\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\">\r\n    </tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Observable} from 'rxjs';\r\nimport {Company} from 'src/app/_model/company';\r\nimport {CompanyService} from 'src/app/_services/company.service';\r\n\r\n@Component({\r\n    selector: 'app-create-company',\r\n    templateUrl: './create-company.component.html',\r\n    styleUrls: ['./create-company.component.css']\r\n})\r\nexport class CreateCompanyComponent implements OnInit {\r\n    companyForm: FormGroup;\r\n    companies: Observable<Company[]>;\r\n    company: Company = new Company();\r\n    companyUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n\r\n    constructor(private companyService: CompanyService,\r\n                public dialogRef: MatDialogRef<CreateCompanyComponent>,\r\n                @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.companyUpdateData = data;\r\n\r\n        this.companyForm = new FormGroup({\r\n            companyName: new FormControl(null, [Validators.required]),\r\n            phoneNumber: new FormControl(null),\r\n        });\r\n        if (data != null) {\r\n            this.companyForm.controls['companyName'].setValue(this.companyUpdateData.data.companyName);\r\n            this.companyForm.controls['phoneNumber'].setValue(this.companyUpdateData.data.phoneNumber);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.companyUpdateData?.data.id != null) {\r\n            this.updateCompany();\r\n        } else {\r\n            this.saveCompany();\r\n        }\r\n    }\r\n\r\n    saveCompany() {\r\n        let data = {\r\n            id: this.companyUpdateData?.data.id,\r\n            companyName: this.companyForm.controls.companyName.value,\r\n            phoneNumber: this.companyForm.controls.phoneNumber.value\r\n        };\r\n        this.companyService.createCompany(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Company Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    updateCompany() {\r\n        let data = {\r\n            id: this.companyUpdateData?.data.id,\r\n            companyName: this.companyForm.controls.companyName.value,\r\n            phoneNumber: this.companyForm.controls.phoneNumber.value\r\n        };\r\n        this.companyService.updateCompany(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Company Successfully Updated..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    getCompanyList() {\r\n        this.companyService.getCompanyList().subscribe(data => {\r\n        }, error => console.log(error));\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div *ngIf=\"companyUpdateData?.data.id==null\" class=\"title-header\">\r\n        <h4 class=\"title\">Add Company</h4>\r\n    </div>\r\n    <div *ngIf=\"companyUpdateData?.data.id!=null\" class=\"title-header\">\r\n        <h4 class=\"title\">Update Company</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"companyForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"companyName\" matInput placeholder=\"Company Name\" required>\r\n                <mat-error *ngIf=\"companyForm.get('companyName').hasError('required')\">\r\n                    First Name required!\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!companyForm.valid\" class=\"btn btn-primary\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Save\r\n            </button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { AppComponent } from 'src/app/app.component';\r\n@Component({\r\n  selector: 'app-action-bar',\r\n  templateUrl: './action-bar.component.html',\r\n  styleUrls: ['./action-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionBarComponent implements OnInit{\r\n  private _transformer = (node: MasterNode, level: number) => {\r\n    return {\r\n      expandable: !!node.children && node.children.length > 0,\r\n      name: node.name,\r\n      level: level,\r\n    };\r\n  }\r\n\r\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\r\n    node => node.level, node => node.expandable);\r\n\r\n  treeFlattener = new MatTreeFlattener(\r\n    this._transformer, node => node.level, node => node.expandable, node => node.children);\r\n\r\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSource_Order = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSourceReports = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSourceBalance = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSourceSummary = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  role: boolean;\r\n\r\n  constructor(private router: Router) {\r\n    this.dataSource.data = TREE_DATA;\r\n    this.dataSource_Order.data = Order_DATA;\r\n    this.dataSourceReports.data = REPORTS;\r\n    this.dataSourceSummary.data = SUMMARY;\r\n\r\n    console.log('dataSourceReports', this.dataSourceReports);\r\n  }\r\n  ngOnInit(): void {\r\n    this.role = AppComponent.role_admin || AppComponent.role_super_admin;\r\n  }\r\n\r\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\r\n\r\n  expanded = true;\r\n  selected = '';\r\n\r\n  goTohome() {\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n  getComponent(item) {\r\n    this.selected = TREE_DATA[0].name + item;\r\n    if (item == \"Product\") {\r\n      this.router.navigate(['dashboard/products']);\r\n    }\r\n    if (item == \"Category\") {\r\n      this.router.navigate(['dashboard/categories-list']);\r\n    }\r\n    if (item == \"Supplier\") {\r\n      this.router.navigate(['dashboard/suppliers-list']);\r\n    }\r\n    if (item == \"Customer\") {\r\n      this.router.navigate(['dashboard/customers-list']);\r\n    }\r\n    if (item == \"Company\") {\r\n      this.router.navigate(['dashboard/companies-list']);\r\n    }\r\n    if (item == \"Location\") {\r\n      this.router.navigate(['dashboard/locations-list']);\r\n    }\r\n  }\r\n\r\n  getOrder(item) {\r\n    this.selected = Order_DATA[0].name + item;\r\n    if (item == \"Order\") {\r\n      this.router.navigate(['dashboard/salesOrder']);\r\n    }\r\n    if (item === \"Transactions\") {\r\n      this._redirectToPage('dashboard/sales-report');\r\n    }\r\n    if (item === \"Dues\") {\r\n      this._redirectToPage('dashboard/balance-sheet');\r\n    }\r\n  }\r\n\r\n  getReports(item) {\r\n    this.selected = REPORTS[0].name + item;\r\n    if (item == \"Order\") {\r\n      this.router.navigate(['dashboard/purchaseOrder']);\r\n    }\r\n    if (item === \"Transactions\") {\r\n      this._redirectToPage('dashboard/purchase-report');\r\n    }\r\n    if (item === \"Dues\") {\r\n      this._redirectToPage('dashboard/supplier-balance-sheet');\r\n    }\r\n  }\r\n\r\n  getSummary(item) {\r\n    this.selected = SUMMARY[0].name + item;\r\n    if (item === \"Daily Summary\") {\r\n      this._redirectToPage('dashboard/profit-summary');\r\n    }\r\n    if (item === \"Stock Book\") {\r\n      this._redirectToPage('dashboard/stock-book');\r\n    }\r\n  }\r\n\r\n  private _redirectToPage(route) {\r\n    this.router.navigate([route]);\r\n  }\r\n}\r\n\r\ninterface MasterNode {\r\n  name: string;\r\n  children?: MasterNode[];\r\n}\r\n\r\nconst Order_DATA: MasterNode[] = [\r\n  {\r\n    name: 'SALES',\r\n    children: [\r\n      {\r\n        name: 'Order',\r\n      },\r\n      {\r\n        name: 'Transactions',\r\n      },\r\n      {\r\n        name: 'Dues',\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nconst REPORTS: MasterNode[] = [\r\n  {\r\n    name: 'PURCHASE',\r\n    children: [\r\n      {\r\n        name: 'Order',\r\n      },\r\n      {\r\n        name: 'Transactions',\r\n      },\r\n      {\r\n        name: 'Dues',\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nconst SUMMARY: MasterNode[] = [\r\n  {\r\n    name: 'SUMMARY',\r\n    children: [\r\n      {\r\n        name: 'Daily Summary',\r\n      },\r\n      {\r\n        name: 'Stock Book',\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nconst TREE_DATA: MasterNode[] = [\r\n  {\r\n    name: 'ADD DATA',\r\n    children: [\r\n      {\r\n        name: 'Product',\r\n      }, {\r\n        name: 'Category',\r\n      }, {\r\n        name: 'Location',\r\n      }, {\r\n        name: 'Company',\r\n      }, {\r\n        name: 'Supplier',\r\n      }, {\r\n        name: 'Customer',\r\n      }\r\n    ]\r\n  },\r\n];\r\ninterface ExampleFlatNode {\r\n  expandable: boolean;\r\n  name: string;\r\n  level: number;\r\n}\r\n","<div class=\"action-bar\" [class.action-bar-expanded]=\"expanded\">\r\n\r\n    <!-- Menu Button -->\r\n    <!-- <button class=\"action-bar-item shadow-sm\" (click)=\"expanded = !expanded\">\r\n\t\t<span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\r\n    <span class=\"action-bar-item-text\">Menu</span>\r\n\t</button> -->\r\n\r\n    <app-action-bar-item [shadow]=\"true\" (click)=\"expanded = !expanded\">\r\n        <span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\r\n        <span class=\"action-bar-item-text\">Menu</span>\r\n    </app-action-bar-item>\r\n\r\n    <!-- A vertical navbar -->\r\n    <nav class=\"navbar navbar-light\">\r\n\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav nav\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"/dashboard/home\" routerLinkActive=\"active\" style=\"cursor: pointer;\">\r\n                    <!-- <i class=\"fa fa-home \"></i>  -->\r\n                    <!-- <mat-icon class=\"edit\">home</mat-icon> -->\r\n                    <img src=\"../../assets/home-icon.png\" class=\"home-icon\" alt=\"\" width=\"15px\" height=\"15px\">\r\n                    <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">DASHBOARDS</span> </a>\r\n            </li>\r\n\r\n            <mat-tree [dataSource]=\"dataSource_Order\" [treeControl]=\"treeControl\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSource_Order._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getOrder(node.name)\">\r\n            {{node.name}}</button>\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <mat-tree *ngIf=\"true\" [dataSource]=\"dataSourceReports\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSourceReports._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getReports(node.name)\">\r\n            {{node.name}}</button>\r\n\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSource._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getComponent(node.name)\">\r\n            {{node.name}}</button>\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <mat-tree *ngIf=\"role\" [dataSource]=\"dataSourceSummary\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSourceSummary._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getSummary(node.name)\">\r\n            {{node.name}}</button>\r\n\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <li class=\"nav-item\" *ngIf=\"false\">\r\n                <a class=\"nav-link\" routerLink=\"/dashboard/user\"><i class=\"fa fa-users \"></i> <span *ngIf=\"expanded\"\r\n            class=\"d-none d-sm-inline\">USERS</span></a>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n    </nav>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { BankService } from '../_services/bank.service';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-update-bank-info',\n  templateUrl: './update-bank-info.component.html',\n  styleUrls: ['./update-bank-info.component.css']\n})\nexport class UpdateBankInfoComponent implements OnInit {\n  showMsg: boolean = false;\n  form: any = {};\n  errorMessage = '';\n  roles: string[] = [];\n  registerForm: FormGroup;\n  isSuccessful = false;\n  isSignUpFailed = false;\n\n  favoriteSeason: string;\n  constructor(private bankService: BankService, private router: Router, private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      'bankName': new FormControl(null),\n      'branchName': new FormControl(null),\n      'accountNo': new FormControl(null),\n      'ifscCode': new FormControl(null),\n      'gstNo': new FormControl(null),\n      'panNo': new FormControl(null),\n      'brandName': new FormControl(null),\n      'phoneNumber': new FormControl(null),\n    });\n  }\n\n  uploadedImage: File;\n  dbImage: any;\n  postResponse: any;\n  successResponse: string;\n  image: any;\n\n  public onImageUpload(event) {\n    this.uploadedImage = event.target.files[0];\n  }\n\n  imageUploadAction() {\n    const imageFormData = new FormData();\n    imageFormData.append('image', this.uploadedImage, this.uploadedImage.name);\n\n\n    this.http.post('http://localhost:8080/bank/image', imageFormData, { observe: 'response' })\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.postResponse = response;\n          this.successResponse = this.postResponse.body.message;\n        } else {\n          this.successResponse = 'Image not uploaded due to some error!';\n        }\n      }\n      );\n    }\n\n    viewImage() {\n      this.http.get('http://localhost:8080/bank/image/info/logo3.jfif')\n        .subscribe(\n          res => {\n            this.postResponse = res;\n            this.dbImage = 'data:image/jpeg;base64,' + this.postResponse.image;\n          }\n        );\n    }\n\n  onSubmit() {\n    let data = {\n      \"bankName\": this.registerForm.controls.bankName.value ? this.registerForm.controls.bankName.value.toUpperCase() : '',\n      \"branchName\": this.registerForm.controls.branchName.value,\n      \"accountNo\": this.registerForm.controls.accountNo.value,\n      \"ifscCode\": this.registerForm.controls.ifscCode.value ? this.registerForm.controls.ifscCode.value.toUpperCase() : '',\n      \"phoneNumber\": this.registerForm.controls.phoneNumber.value,\n      \"gstNo\": this.registerForm.controls.gstNo.value ? this.registerForm.controls.gstNo.value.toUpperCase() : '',\n      \"panNo\": this.registerForm.controls.panNo.value ? this.registerForm.controls.panNo.value.toUpperCase() : '',\n      \"brandName\": this.registerForm.controls.brandName.value ? this.registerForm.controls.brandName.value.toUpperCase() : '',\n    };\n\n    this.bankService.createBank(data).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n\n        this.showMsg = true;\n        setTimeout(() => {\n          this.showMsg = false;\n        }, 2000);\n      },\n      err => {\n        this.errorMessage = err.error.error;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n\n\n\n\n\n\n\n\n\n}\n","<div class=\"col-md-12\">\n    <div class=\"\">\n        <!-- <img class=\"profile-img-card\" id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" /> -->\n        <mat-card style=\"width: 90%;\">\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                <h1 style=\"text-align: center;\">Update Bank Details</h1>\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Bank name</mat-label>\n                                    <input matInput formControlName=\"bankName\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Account number</mat-label>\n                                    <input matInput formControlName=\"accountNo\">\n                                </mat-form-field>\n                            </p>\n\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>IFSC code</mat-label>\n                                    <input matInput formControlName=\"ifscCode\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Branch name</mat-label>\n                                    <input matInput formControlName=\"branchName\">\n                                </mat-form-field>\n                            </p>\n                        </div>\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>PAN number</mat-label>\n                                    <input matInput formControlName=\"panNo\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>GST number</mat-label>\n                                    <input matInput formControlName=\"gstNo\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Brand name</mat-label>\n                                    <input matInput formControlName=\"brandName\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Phone number</mat-label>\n                                    <input matInput formControlName=\"phoneNumber\">\n                                </mat-form-field>\n                            </p>\n\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"image\" placeholder=\"Search Image\" [(ngModel)]=\"image\" name=\"image\" />\n                                <input type=\"button\" (click)=\"viewImage()\" value=\"View Image\" class=\"btn1\">\n                    \n                            </div>\n                            \n                            <div class=\"form-group\">\n                                <input type=\"file\" (change)=\"onImageUpload($event)\">\n                                <input type=\"button\" (click)=\"imageUploadAction()\" value=\"Upload Image\" class=\"btn1\">\n                            </div>\n\n                            <div>\n                                <output *ngIf=successResponse class=\"success\"><b>{{successResponse}}</b></output>\n                            </div>\n                            <br>\n\n                            <div *ngIf=dbImage>\n                                <img [src]=\"dbImage\">\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"button-container\">\n                    <span style=\"color: red;\">{{errorMessage}}</span>\n\n                </div>\n                <div class=\"button-container\">\n\n                    <button class=\"btn btn-primary\" type=\"submit\"\n                        style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\n                    </button>\n                </div>\n            </form>\n\n        </mat-card>\n    </div>\n</div>\n\n<div class=\"middle\" *ngIf=\"showMsg\">\n    <div class=\"col-xs-6\">\n        <p class=\"alert alert-success\">\n            <strong>Bank details Successfully updated!!</strong>\n        </p>\n    </div>\n</div>","const a = ['', 'One ', 'Two ', 'Three ', 'Four ', 'Five ', 'Six ', 'Seven ', 'Eight ', 'Nine ', 'Ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];\r\nconst b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\nexport function numberInWords(num) {\r\n    if ((num = num.toString()).length > 9) return 'overflow';\r\n    const n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n    if (!n)\r\n        return '';\r\n    var str = '';\r\n    str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'Crore ' : '';\r\n    str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'Lakh ' : '';\r\n    str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'Thousand ' : '';\r\n    str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'Hundred ' : '';\r\n    str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'Only ' : '';\r\n    return str;\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {CompanyService} from 'src/app/_services/company.service';\r\nimport {CustomerService} from 'src/app/_services/customer.service';\r\nimport {CreateCustomerComponent} from '../create-customer/create-customer.component';\r\n\r\n@Component({\r\n    selector: 'app-customers-list',\r\n    templateUrl: './customers-list.component.html',\r\n    styleUrls: ['./customers-list.component.css']\r\n})\r\nexport class CustomersListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['customerName', 'phoneNumber', 'location', 'GSTIN', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCustomerList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCustomerList();\r\n        });\r\n    }\r\n\r\n    updateCustomer(updateCustomer): void {\r\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: {data: updateCustomer}\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCustomerList();\r\n        });\r\n    }\r\n\r\n    getCustomerList() {\r\n        this.customerService.getCustomerList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    deleteCustomer(event) {\r\n        this.customerService.deleteCustomer(event.id).subscribe(\r\n            response => {\r\n                this.getCustomerList();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n}\r\n\r\n\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Customer\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"customerName\">\r\n            <th *matHeaderCellDef mat-header-cell>Customer</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.customerName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"GSTIN\">\r\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"phoneNumber\">\r\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"location\">\r\n            <th *matHeaderCellDef mat-header-cell> Location</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateCustomer(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                        <button (click)=\"deleteCustomer(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n    \r\n                    </button>\r\n                        <br>\r\n\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n            </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {SupplierService} from 'src/app/_services/supplier.service';\r\nimport {CreateSupplierComponent} from '../create-supplier/create-supplier.component';\r\n\r\n@Component({\r\n    selector: 'app-supplier-list',\r\n    templateUrl: './supplier-list.component.html',\r\n    styleUrls: ['./supplier-list.component.css'],\r\n\r\n})\r\nexport class SupplierListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['supplierName', 'phoneNumber', 'company', 'location', 'GSTIN', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private supplierService: SupplierService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getSupplierList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getSupplierList();\r\n        });\r\n    }\r\n\r\n    getSupplierList() {\r\n        this.supplierService.getSupplierList()\r\n            .subscribe(data => {\r\n                this.dataSource = data;\r\n                this.dataSource = new MatTableDataSource(data);\r\n                this.dataSource.paginator = this.paginator;\r\n            }, error => console.log(error));\r\n    }\r\n\r\n    deleteSupllier(event) {\r\n        this.supplierService.deleteSupplier(event.id).subscribe(\r\n            response => {\r\n                this.getSupplierList();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    updateSuppliers(updateSupplier): void {\r\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: {data: updateSupplier}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getSupplierList();\r\n        });\r\n    }\r\n}\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Supplier\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"supplierName\">\r\n            <th *matHeaderCellDef mat-header-cell>Supplier</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.supplierName}} </td>\r\n            <td *matCellDef=\"let element\" hidden mat-cell> {{element.id}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"GSTIN\">\r\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"company\">\r\n            <th *matHeaderCellDef mat-header-cell> Company</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.company?.companyName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"location\">\r\n            <th *matHeaderCellDef mat-header-cell> Location</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"phoneNumber\">\r\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateSuppliers(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                        <button (click)=\"deleteSupllier(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n\r\n            </td>\r\n        </ng-container>\r\n\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>","import { PurchaseOrderService } from './../../_services/purchase-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PurchaseReportDetailsComponent } from '../purchase-report-details/purchase-report-details.component';\r\n\r\n@Component({\r\n  selector: 'app-purchase-report',\r\n  templateUrl: './purchase-report.component.html',\r\n  styleUrls: ['./purchase-report.component.css']\r\n})\r\nexport class PurchaseReportComponent implements OnInit {\r\n  displayedColumns: string[] = ['billDate', 'dueDate', 'supplierName', 'totalPrice', 'amountPaid', 'dueAmount'];\r\n  productColumns: string[] = ['id', 'productName', 'purchasePrice', 'qtyOrdered'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  purchaseReports;\r\n\r\n  constructor(public dialog: MatDialog, private purchaseOrderService: PurchaseOrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getPurchaseOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getPurchaseOrderList() {\r\n    this.purchaseOrderService.getPurchaseOrderList().subscribe(res => {\r\n      this.purchaseReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearSupplierSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.purchaseReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.purchaseReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime() + 86399999;\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(purchaseReport => {\r\n        const dueDateTime = new Date(purchaseReport?.billDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(purchaseReport => purchaseReport?.supplier?.supplierName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.purchaseOrderService.deleteOrder(event.purchaseOrderID).subscribe(\r\n      response => {\r\n        this.getPurchaseOrderList();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Could not able to delete purchase order since used in sales order');\r\n      });\r\n  }\r\n\r\n  updateProduct(updateProduct): void {\r\n    const dialogRef = this.dialog.open(PurchaseReportDetailsComponent, {\r\n      width: '950px',\r\n      disableClose: false,\r\n      data: { data: updateProduct }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getPurchaseOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-3\">\r\n    <mat-form-field class=\"example-form-field\">\r\n      <mat-label>Search Supplier</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\" placeholder=\"Search Supplier\">\r\n      <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearSupplierSearch()\">\r\n        <mat-icon>clear</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-form-field>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n      <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"supplierName\">\r\n      <th *matHeaderCellDef mat-header-cell>Supplier</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.supplier?.supplierName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"billDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        <button (click)=\"updateProduct(element)\">\r\n          {{element.billDate | date: 'dd/MM/yyyy hh:mm a'}}\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n    <!--<ng-container matColumnDef=\"productDesc\">\r\n      <th *matHeaderCellDef mat-header-cell> Action</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n\r\n          <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n              <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n              <div>\r\n                  <button (click)=\"updateProduct(element)\" class=\"btn btn-info\"\r\n                          style=\"width: 80px;margin-left: 15px;\">\r\n                      Update\r\n                  </button>\r\n                  <br>\r\n                  <button (click)=\"deleteProduct(element.id)\"\r\n                          class=\"btn btn-danger\"\r\n                          style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\r\n                  </button>\r\n              </div>\r\n          </mat-menu>\r\n          \r\n\r\n      </td>\r\n  </ng-container>-->\r\n\r\n\r\n    <ng-container matColumnDef=\"dueDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueAmount\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Due amount</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{element.previousBalance.toLocaleString('en-IN')\r\n        || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountPaid\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.amountPaid.toLocaleString('en-IN') || 0}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"totalPrice\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.totalPrice.toLocaleString('en-IN') || 0}}\r\n      </td>\r\n    </ng-container>\r\n\r\n   <!-- <ng-container matColumnDef=\"status\">\r\n      <th *matHeaderCellDef mat-header-cell>Status</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.status}} </td>\r\n    </ng-container>-->\r\n\r\n    <!-- <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element;\" mat-cell>\r\n        <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n          <mat-icon class=\"delete-button\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>-->\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\"\r\n      triggers=\"mouseenter:mouseleave\">\r\n      <ng-template #test>\r\n        <table [dataSource]=\"row.purchaseOrderDetail\" mat-table class=\"mat-elevation-z2\">\r\n          <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell>S.No</th>\r\n            <td *matCellDef=\"let element; let index = index\" mat-cell>\r\n              {{index+1}}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"productName\">\r\n            <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"purchasePrice\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Purchase Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.price | number : '1.0-2'}}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"qtyOrdered\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n          </ng-container>\r\n\r\n          <tr *matHeaderRowDef=\"productColumns;  sticky: true\" mat-header-row></tr>\r\n          <tr *matRowDef=\"let row; columns: productColumns;\" mat-row></tr>\r\n        </table>\r\n      </ng-template>\r\n    </tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/product';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getProduct(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createProduct(product: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, product);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createProductWithCategory(product: Object, id: number): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}/${id}`, product);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateProduct(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    updateProductList(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}/updatePrice`, value);\r\n    }\r\n\r\n    deleteProduct(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getProductsList(): Observable<any> {\r\n        return this.http.get(this.baseUrl);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\n@Component({\r\n    selector: 'app-bank',\r\n    templateUrl: './UpdateBankDetails.component.html',\r\n    styleUrls: ['./UpdateBankDetails.component.css']\r\n})\r\nexport class UpdateBankDetails implements OnInit {\r\n    form: any = {};\r\n    isSuccessful = false;\r\n    isSignUpFailed = false;\r\n    errorMessage = '';\r\n    favoriteSeason: string;\r\n    seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\r\n    constructor(private authService: AuthService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.selection);\r\n\r\n        let data = {\r\n            \"username\": this.form.username,\r\n            \"email\": this.form.email,\r\n            \"password\": this.form.password,\r\n            \"role\": this.selection.map(x => x.role),\r\n            \"bankAccount\": {\r\n                \"bankName\": this.form.bankName,\r\n                \"branchName\": this.form.branchName,\r\n                \"accountNo\": this.form.accountNo,\r\n                \"ifscCode\": this.form.ifscCode,\r\n            },\r\n            \"user\": {\r\n                \"gstNo\": this.form.gstNo,\r\n                \"panNo\": this.form.panNo,\r\n                \"phoneNumber\": this.form.phoneNumber,\r\n                \"brandName\": this.form.brandName,\r\n            }\r\n        };\r\n\r\n        this.authService.register(data).subscribe(\r\n            data => {\r\n                console.log(data);\r\n                this.isSuccessful = true;\r\n                this.isSignUpFailed = false;\r\n                setTimeout(() => {\r\n                    this.router.navigate(['login']);\r\n                }, 2500);\r\n            },\r\n            err => {\r\n                this.errorMessage = err.error.message;\r\n                this.isSignUpFailed = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    selection = [];\r\n\r\n    list = [\r\n        { id: 1, role: 'admin' },\r\n        { id: 2, role: 'user' }\r\n    ];\r\n\r\n    getSelection(item) {\r\n        return this.selection.findIndex(s => s.id === item.id) !== -1;\r\n    }\r\n\r\n    changeHandler(item: any, event: KeyboardEvent) {\r\n        const id = item.id;\r\n\r\n        const index = this.selection.findIndex(u => u.id === id);\r\n        if (index === -1) {\r\n            // ADD TO SELECTION\r\n            // this.selection.push(item);\r\n            this.selection = [...this.selection, item];\r\n        } else {\r\n            // REMOVE FROM SELECTION\r\n            this.selection = this.selection.filter(user => user.id !== item.id)\r\n            // this.selection.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.form;\r\n        this.form.controls['role'].setValue(this.selection);\r\n        console.log(this.selection);\r\n    }\r\n}","<h1>Hello chandra</h1>\r\n<mat-card>\r\n    <h1>chand</h1>\r\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (localStorage.getItem('accessToken')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { PurchaseOrderService } from '../../../_services/purchase-order.service';\r\nimport { SalesOrderService } from '../../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { UpdateBalanceSheetComponent } from '../update-customer-balance-sheet/customer-update-balance-sheet.component';\r\n\r\n@Component({\r\n  selector: 'app-balance-sheet',\r\n  templateUrl: './balance-sheet.component.html',\r\n  styleUrls: ['./balance-sheet.component.css']\r\n})\r\nexport class BalanceSheetComponent implements OnInit {\r\n  displayedColumns: string[] = ['customerName', 'phoneNumber', 'totalPrice', 'amountPaid', 'dueAmount', 'billDate', 'dueDate', 'action'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  salesReports;\r\n\r\n  constructor(private dialog: MatDialog, private salesOrderService: SalesOrderService, private purchaseOrderService: PurchaseOrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getSalesOrderList() {\r\n    this.salesOrderService.getAllCustomerSalesOrderBalanceSheet().subscribe(res => {\r\n      this.salesReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearCustomerSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.salesReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.salesReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime();\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(salesReport => {\r\n        const dueDateTime = new Date(salesReport?.dueDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(salesReport => salesReport?.customer?.customerName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  pay(index: number) {\r\n    alert('s')\r\n    //this.salesOrderDetailArr.removeAt(index);\r\n    //this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n  }\r\n\r\n  updateBalance(updateBalance): void {\r\n    const dialogRef = this.dialog.open(UpdateBalanceSheetComponent, {\r\n      width: '450px',\r\n      disableClose: true,\r\n      data: { data: updateBalance }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getSalesOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-3\">\r\n    <mat-form-field class=\"example-form-field\">\r\n      <mat-label>Search Customer</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\">\r\n      <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearCustomerSearch()\">\r\n        <mat-icon>clear</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-form-field>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n      <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"customerName\">\r\n      <th *matHeaderCellDef mat-header-cell>Customer</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.customer?.customerName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"phoneNumber\">\r\n      <th *matHeaderCellDef mat-header-cell>Phone number</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.customer?.phoneNumber}} </td>\r\n    </ng-container>\r\n\r\n    <!--<ng-container matColumnDef=\"status\">\r\n      <th *matHeaderCellDef mat-header-cell>Status</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.currentBalance == 0 ? 'PAID': 'DUE'}} </td>\r\n    </ng-container>-->\r\n\r\n    <ng-container matColumnDef=\"totalPrice\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.totalPrice.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountPaid\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.amountPaid.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueAmount\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Due amount</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{element.currentBalance.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"billDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        {{element.billDate | date: 'dd/MM/yyyy'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        <button (click)=\"updateBalance(element)\" mat-icon-button aria-label=\"Pay Balance\">\r\n          <mat-icon>payment</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n  </table>\r\n<mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import { TableComponent } from './ui_modules/table/table.component';\r\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\r\nimport { BalanceSheetComponent } from './balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component';\r\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Router } from '@angular/router';\r\n\r\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\r\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\r\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\r\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\r\nimport { LocationListComponent } from './locations/location-list/location-list.component';\r\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\r\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\r\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\r\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProductListComponent } from './products/product-list/product-list.component';\r\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\r\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\r\nimport { SupplierBalanceSheetComponent } from './balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component';\r\nimport { ProfitSummaryComponent } from './reports/profit-summary/profit-summary.component';\r\nimport { StockBookComponent } from './reports/stock-book/stock-book.component';\r\nimport { UpdateBankInfoComponent } from './update-bank-info/update-bank-info.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent, },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: '404', component: NotfoundComponent },\r\n\r\n  {\r\n    path: 'dashboard', pathMatch: 'prefix', canActivate: [AuthGuard],\r\n    component: DashboardComponent,\r\n    children: [\r\n      { path: 'products', component: ProductListComponent, canActivate: [AuthGuard] },\r\n      { path: 'category', component: CreateCategoryComponent },\r\n      { path: 'purchaseOrder', component: PurchaseOrderComponent },\r\n      { path: 'salesOrder', component: SalesOrderComponent },\r\n      { path: 'location', component: CreateLocationComponent },\r\n      { path: 'customer', component: CreateCustomerComponent },\r\n      { path: 'supplier', component: CreateSupplierComponent },\r\n      { path: 'balance-sheet', component: BalanceSheetComponent },\r\n      { path: 'supplier-balance-sheet', component: SupplierBalanceSheetComponent },\r\n      { path: 'customers-list', component: CustomersListComponent },\r\n      { path: 'companies-list', component: CompanyListComponent },\r\n      { path: 'suppliers-list', component: SupplierListComponent },\r\n      { path: 'categories-list', component: CategoryListComponent },\r\n      { path: 'locations-list', component: LocationListComponent },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'profit-summary', component: ProfitSummaryComponent },\r\n      { path: 'stock-book', component: StockBookComponent },\r\n      { path: 'sales-report', component: SalesReportComponent },\r\n      { path: 'purchase-report', component: PurchaseReportComponent },\r\n      { path: 'register', component: RegisterComponent },\r\n      { path: 'updateBankDetails', component: UpdateBankInfoComponent }\r\n    ]\r\n  },\r\n  { path: 'table', component: TableComponent },\r\n  { path: 'salesTable', component: SalesTableComponent },\r\n  { path: '**', redirectTo: '404', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    form: any = {};\n    errorMessage = '';\n    roles: string[] = [];\n    loginForm: FormGroup;\n    hide = true;\n    constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (this.tokenStorage.getToken()) {\n            this.roles = this.tokenStorage.getUser().roles;\n        }\n        this.loginForm = new FormGroup({\n            'username': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n            'password': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n        });\n    }\n\n    onSubmit() {\n        let reqData = {\n            username: this.loginForm.controls.username.value,\n            password: this.loginForm.controls.password.value\n\n        }\n\n        if (!reqData.username && !reqData.password) {\n            this.errorMessage = \"Username and Password Required\"\n            return;\n        }\n\n        if (!reqData.username) {\n            this.errorMessage = \"Username is Required\"\n            return;\n        }\n\n        if (!reqData.password) {\n            this.errorMessage = \"Password is Required\"\n            return;\n        }\n\n        this.authService.login(reqData).subscribe(\n            data => {\n                this.tokenStorage.saveToken(data.accessToken);\n                localStorage.setItem('accessToken', data.accessToken);\n                this.tokenStorage.saveUser(data);\n                localStorage.setItem('username', data.username);\n                this.roles = this.tokenStorage.getUser().roles;\n                this.router.navigate(['dashboard/home']);\n\n                AppComponent.role_super_admin = this.roles.includes('ROLE_SUPER_ADMIN');\n                AppComponent.role_admin = this.roles.includes('ROLE_ADMIN');\n                AppComponent.role_user = this.roles.includes('ROLE_USER');\n            },\n            err => {\n                this.errorMessage = \"Username or password is wrong.\";\n            }\n        );\n    }\n\n    signup() {\n        this.router.navigate(['register']);\n    }\n}\n","<div class=\"login-container\" style=\"padding:'50px 100px';background:#c5c5cd\">\n    <div class=\"container-fluid\">\n        <div class=\"row\" style=\"padding:'0px';background:#ffffff\">\n            <div class=\"col-6\" ><img src=\"../../assets/images/logo2.jpg\" class=\"home-icon\" alt=\"\" width=\"588px\" height=\"650px\">\n            </div>\n            <div class=\"col-6\" style=\"border-left: 1px solid black;background-color: #3ab397;\">\n                <div>\n                    <h1 style=\"text-align: center;margin-top: 50px;color: white;font-weight: 700;\">Wellcome to xxxxxxxxx\n                    </h1>\n                </div>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <mat-card style=\"margin-top: 50px;\">\n\n                        <div style=\"text-align: center;\">\n                            <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                <mat-label>Username</mat-label>\n                                <input matInput formControlName=\"username\" required>\n                                <mat-icon matPrefix style=\"width: 1.3em;\">person</mat-icon>\n                            </mat-form-field>\n                            <br>\n                        </div>\n                        <div style=\"text-align: center;\">\n                            <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                <mat-label>Password</mat-label>\n                                <mat-icon matPrefix style=\"width: 1.3em;\">lock</mat-icon>\n                                <input matInput formControlName=\"password\" required [type]=\"hide ? 'password' : 'text'\">\n                                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n                            </mat-form-field>\n                            <br>\n                        </div>\n                        <div class=\"button-container\">\n                            <span style=\"color: red;text-align: center;\">{{errorMessage}}</span>\n                        </div>\n                        <div class=\"button-container\">\n                            <button class=\"btn btn-primary\" type=\"submit\"\n                                style=\"width: 50%;margin-left: 5px;border-radius: 10px;background-color: #3ab397;\">Login\n                            </button>\n                        </div>\n\n                    </mat-card>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\n\r\n@Component({\r\n    selector: 'app-create-customer',\r\n    templateUrl: './create-customer.component.html',\r\n    styleUrls: ['./create-customer.component.css']\r\n})\r\nexport class CreateCustomerComponent implements OnInit {\r\n\r\n    customerForm: FormGroup;\r\n    locationForm: FormGroup;\r\n    customerUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    citiesList: any;\r\n\r\n    constructor(private customerService: CustomerService, private location: LocationService,\r\n        public dialogRef: MatDialogRef<CreateCustomerComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.customerUpdateData = data;\r\n\r\n        this.customerForm = new FormGroup({\r\n            cityName: new FormControl(null),\r\n            customerName: new FormControl(null, [Validators.required]),\r\n            gstIn: new FormControl(null),\r\n            phoneNumber: new FormControl(null),\r\n        });\r\n\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required]),\r\n        });\r\n\r\n        if (data != null) {\r\n            this.customerUpdateData = data?.data;\r\n            this.customerForm.controls['customerName'].setValue(this.customerUpdateData.customerName);\r\n            this.customerForm.controls['gstIn'].setValue(this.customerUpdateData.gstIn);\r\n            this.customerForm.controls['phoneNumber'].setValue(this.customerUpdateData.phoneNumber);\r\n            this.customerForm.controls['cityName'].setValue(this.customerUpdateData.location);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n            this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getlocationList();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.customerForm.valid) {\r\n            if (this.customerUpdateData?.id != null) {\r\n                this.updateCustomer();\r\n            } else {\r\n                this.saveCustomer();\r\n            }\r\n        }\r\n    }\r\n\r\n    saveCustomer() {\r\n        let data = {\r\n            customerName: this.customerForm.controls.customerName.value,\r\n            gstIn: this.customerForm.controls.gstIn.value,\r\n            location: this.customerForm.controls.cityName.value,\r\n            phoneNumber: this.customerForm.controls.phoneNumber.value,\r\n        };\r\n\r\n        this.customerService.createCustomer(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Customer Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n            alert(this.errorMsg);\r\n        });\r\n    }\r\n\r\n    updateCustomer() {\r\n        let data = {\r\n            id: this.customerUpdateData?.id,\r\n            customerName: this.customerForm.controls.customerName.value,\r\n            gstIn: this.customerForm.controls.gstIn.value,\r\n            location: this.customerForm.controls.cityName.value,\r\n            phoneNumber: this.customerForm.controls.phoneNumber.value,\r\n        };\r\n\r\n        this.customerService.updateCustomer(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = \"Customer Successfully Updated..!\";\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        })\r\n    }\r\n\r\n    getCustomerList() {\r\n        this.customerService.getCustomerList().subscribe(data => {\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    getlocationList() {\r\n        this.location.getLocationList().subscribe(res => {\r\n            this.citiesList = res;\r\n        });\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\" *ngIf=\"customerUpdateData?.id==null\">\r\n        <h4 class=\"title\">Add Customer</h4>\r\n    </div>\r\n    <div class=\"title-header\" *ngIf=\"customerUpdateData?.id!=null\">\r\n        <h4 class=\"title\">Update Product</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"customerForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"customerName\" matInput placeholder=\"Customer Name\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"gstIn\" matInput placeholder=\"GSTIN\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-select formControlName=\"cityName\" placeholder=\"City\">\r\n                    <mat-option *ngFor=\"let location of citiesList\" [value]=\"location\">{{location.cityName}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!customerForm.valid\" class=\"btn btn-primary\"\r\n                style=\"width: 25%;margin-left: 5px;\">Save\r\n            </button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","export class Location {\n    locationID: number;\n    cityName: string;\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}