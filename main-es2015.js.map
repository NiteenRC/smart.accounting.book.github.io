{"version":3,"sources":["./src/app/validators/category.validator.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_model/purchaseOrder.ts","./src/app/ui_modules/table/sales-table.component.ts","./src/app/ui_modules/table/sales-table.component.html","./src/app/menu/navigation-bar/navigation-bar.component.ts","./src/app/menu/navigation-bar/navigation-bar.component.html","./src/app/_services/token-storage.service.js","./src/app/products/create-product/create-product.component.ts","./src/app/products/create-product/create-product.component.html","./src/app/_services/auth.service.ts","./src/app/purchase-order/purchase-order.component.ts","./src/app/purchase-order/purchase-order.component.html","./src/app/_services/supplier.service.ts","./src/app/_model/sales-order.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_services/category.service.ts","./src/app/locations/location-list/location-list.component.ts","./src/app/locations/location-list/location-list.component.html","./src/environments/environment.ts","./src/app/balance-sheet/supplier-balance-sheet/update-supplier-balance-sheet/supplier-update-balance-sheet.component.ts","./src/app/balance-sheet/supplier-balance-sheet/update-supplier-balance-sheet/supplier-update-balance-sheet.component.html","./src/app/_services/location.service.ts","./src/app/products/product-list/product-list.component.ts","./src/app/products/product-list/product-list.component.html","./src/app/_services/token-storage.service.ts","./src/app/reports/sales-report/sales-report.component.ts","./src/app/reports/sales-report/sales-report.component.html","./src/app/reports/sales-report-details/sales-report-details.component.ts","./src/app/reports/sales-report-details/sales-report-details.component.html","./src/app/menu/action-bar-item/action-bar-item.component.ts","./src/app/menu/action-bar-item/action-bar-item.component.html","./src/app/suppliers/create-supplier/create-supplier.component.ts","./src/app/suppliers/create-supplier/create-supplier.component.html","./src/app/_services/bank.service.ts","./src/app/_model/company.ts","./src/app/ui_modules/table/table.component.ts","./src/app/ui_modules/table/table.component.html","./src/app/balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component.ts","./src/app/balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component.html","./src/app/_services/purchase-order.service.ts","./src/app/companies/company-list/company-list.component.ts","./src/app/companies/company-list/company-list.component.html","./src/app/_services/sales-order.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/mobile-menu/mobile-menu.component.ts","./src/app/menu/mobile-menu/mobile-menu.component.html","./src/app/_services/customer.service.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/categories/create-category/create-category.component.ts","./src/app/categories/create-category/create-category.component.html","./src/app/balance-sheet/customer-balance-sheet/update-customer-balance-sheet/customer-update-balance-sheet.component.ts","./src/app/balance-sheet/customer-balance-sheet/update-customer-balance-sheet/customer-update-balance-sheet.component.html","./src/app/app.module.ts","./src/app/categories/category-list/category-list.component.ts","./src/app/categories/category-list/category-list.component.html","./src/app/sales-order/sales-order.component.ts","./src/app/sales-order/sales-order.component.html","./src/app/_model/category.ts","./src/app/_model/http-client-helper.ts","./src/app/reports/profit-summary/profit-summary.component.ts","./src/app/reports/profit-summary/profit-summary.component.html","./src/app/pages/notfound/notfound.component.ts","./src/app/pages/notfound/notfound.component.html","./src/app/locations/create-location/create-location.component.ts","./src/app/locations/create-location/create-location.component.html","./src/app/reports/stock-book/stock-book.component.ts","./src/app/reports/stock-book/stock-book.component.html","./src/app/_services/company.service.ts","./src/app/reports/purchase-report-details/purchase-report-details.component.ts","./src/app/reports/purchase-report-details/purchase-report-details.component.html","./src/app/companies/create-company/create-company.component.ts","./src/app/companies/create-company/create-company.component.html","./src/app/menu/action-bar/action-bar.component.ts","./src/app/menu/action-bar/action-bar.component.html","./src/app/update-bank-info/update-bank-info.component.ts","./src/app/update-bank-info/update-bank-info.component.html","./src/app/utils/numToWords.js","./src/app/customers/customers-list/customers-list.component.ts","./src/app/customers/customers-list/customers-list.component.html","./src/app/suppliers/supplier-list/supplier-list.component.ts","./src/app/suppliers/supplier-list/supplier-list.component.html","./src/app/reports/purchase-report/purchase-report.component.ts","./src/app/reports/purchase-report/purchase-report.component.html","./src/app/_services/product.service.ts","./src/app/UpdateBankDetails/UpdateBankDetails.component.ts","./src/app/UpdateBankDetails/UpdateBankDetails.component.html","./src/app/auth.guard.ts","./src/app/balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component.ts","./src/app/balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material.module.ts","./src/app/customers/create-customer/create-customer.component.ts","./src/app/customers/create-customer/create-customer.component.html","./src/app/_model/location.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA;AAAA;AAAO,SAAS,2BAA2B,CAAC,YAA6B;IACvE,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,MAAK,OAAO,CAAC,KAAK,CAAC,CAAC;QAEnF,IAAI,MAAM,EAAE;YACV,OAAO,IAAI,EAAE,2BAA2B;SACzC;QACD,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;IAClE,CAAC;AACH,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAI6B;;;;;;;;;;;;ICJ/E,0EACI;IAAA,0EACI;IAAA,wEACI;IAAA,yEAAQ;IAAA,6FAAkC;IAAA,4DAAS;IACvD,4DAAI;IACR,4DAAM;IACV,4DAAM;;ADKC,MAAM,iBAAiB;IAS1B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QARpE,SAAI,GAAQ,EAAE,CAAC;QACf,YAAO,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;QAGlB,YAAO,GAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAoD7D,cAAS,GAAG,EAAE,CAAC;QAEf,SAAI,GAAG;YACH,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;YACxB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;SAC1B,CAAC;IAvDF,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACvC,CAAC,CAAC;IACP,CAAC;IAED,KAAK;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC7B,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACvC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,GAAG;YACP,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YACrD,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC/C,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YACrD,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YAC3D,MAAM,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;SAClD,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CACrC,IAAI,CAAC,EAAE;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;YAEb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/B,CAAC,CACJ,CAAC;IACN,CAAC;IASD,YAAY,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,IAAS,EAAE,KAAoB;QACzC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAEnB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,mBAAmB;YACnB,6BAA6B;YAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SAC9C;aAAM;YACH,wBAAwB;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;YACnE,kCAAkC;SACrC;IACL,CAAC;IAED,IAAI;QACA,IAAI,CAAC,IAAI,CAAC;QACV,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;;kFA1FQ,iBAAiB;iGAAjB,iBAAiB;QCX9B,6GAMM;QACN,yEACI;QAAA,yEACI;QAAA,8EACI;QAAA,0EACI;QAD6B,6IAAY,cAAU,IAAC;QACpD,wEAAgC;QAAA,uEAAY;QAAA,4DAAK;QACjD,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACR,4DAAM;QACN,0EACI;QAAA,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,kFACI;QAAA,kFAA0B;QAAA,iEAAK;QAAA,4DAAa;QAC5C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC9C,4DAAa;QACjB,4DAAiB;QACrB,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EAA2B;QAAA,wDAAgB;QAAA,4DAAO;QACtD,4DAAM;QACN,2EACI;QAAA,8EAC6D;QAAA,iEAC7D;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAO;QACX,4DAAW;QACf,4DAAM;QACV,4DAAM;;QAhEe,6EAAa;QAUhB,0DAA0B;QAA1B,uFAA0B;QA4CG,2DAAgB;QAAhB,2FAAgB;;6FD3ClD,iBAAiB;cAL7B,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAO,MAAM,aAAa;CAYzB;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEQ;;;;;;ICwG9B,qEACI;IAAA,qEAAI;IAAA,uDAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,yEAA4B;IAAA,uDAA6C;IAAA,4DAAK;IAC9E,yEAA4B;IAAA,wDAAyB;IAAA,4DAAK;IAC1D,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,0EAA4B;IAAA,wDAE5B;IAAA,4DAAK;IAGL,0EAA4B;IAAA,wDAC0B;IAAA,4DAAK;IAC/D,4DAAK;;;;IAbG,0DAAU;IAAV,mFAAU;IACV,0DAA8B;IAA9B,sJAA8B;IAC9B,0DAAwB;IAAxB,gJAAwB;IACA,0DAA6C;IAA7C,qJAA6C;IAC7C,0DAAyB;IAAzB,mHAAyB;IACjD,0DAAuB;IAAvB,wJAAuB;IACC,0DAE5B;IAF4B,kSAE5B;IAG4B,0DAC0B;IAD1B,8UAC0B;;;IA+C1D,sEACI;IAAA,sEACI;IAAA,0EAAiE;IAAA,gEAAK;IAAA,4DAAO;IAC7E,2EACI;IAAA,uDAA+B;IAAA,4DAAO;IAC9C,4DAAM;IACN,sEACI;IAAA,0EAAiE;IAAA,kEAAO;IAAA,4DAAO;IAC/E,2EACI;IAAA,wDACJ;IAAA,4DAAO;IACX,4DAAM;IAEN,uEACI;IAAA,2EAAiE;IAAA,mEAAO;IAAA,4DAAO;IAC/E,4EACI;IAAA,wDACJ;IAAA,4DAAO;IACX,4DAAM;IACN,uEACI;IAAA,2EAAiE;IAAA,sEAAU;IAAA,4DAAO;IAClF,4EACI;IAAA,wDACJ;IAAA,4DAAO;IACX,4DAAM;IACV,4DAAM;;;IArBM,0DAA+B;IAA/B,iLAA+B;IAK/B,0DACJ;IADI,mLACJ;IAMI,0DACJ;IADI,oLACJ;IAKI,0DACJ;IADI,kLACJ;;ADrL7B,MAAM,mBAAmB;IAQ9B,YAAoB,mBAAwC,EAAU,UAAuB;QAAzE,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,eAAU,GAAV,UAAU,CAAa;QAN7F,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAW,CAAC,CAAC;QAC3B,aAAQ,GAAW,CAAC,CAAC;QACrB,kBAAa,GAAW,EAAE,CAAC;QAC3B,SAAI,GAAQ,IAAI,CAAC;IAEgF,CAAC;IAElG,QAAQ;QACN,mBAAmB;QACnB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAC1D,IAAI,WAAW,EAAE;gBACf,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACtC;SACF;aAAM;YACL,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;SACnE;QAED,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC;QAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;IACjD,CAAC;IAED,QAAQ;QACN,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEO,gBAAgB;;QACtB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,QAAQ,GAAG,CAAC,CAAC;QAEjB,OAAO,CAAC,GAAG,CAAC,4BAA4B,QAAE,IAAI,CAAC,QAAQ,0CAAE,gBAAgB,CAAC,CAAC;QAC3E,gBAAI,CAAC,QAAQ,0CAAE,gBAAgB,0CAAE,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;;YACtD,MAAM,MAAM,GAAG,WAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK,KAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,UAAU,EAAC;YAC1D,MAAM,SAAS,GAAG,MAAM,UAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,0CAAE,GAAG,IAAG,GAAG,CAAC;YAC1D,UAAU,IAAI,MAAM,CAAC;YACrB,cAAc,IAAI,SAAS,CAAC;YAC5B,QAAQ,IAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,UAAU,CAAC;QACpC,CAAC,EAAE;QAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAEjD,IAAI,CAAC,aAAa,GAAG,0EAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IAQD,SAAS;QACP,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kDAAkD,CAAC;aACpE,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,yBAAyB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACrE,CAAC,CACF,CAAC;IACN,CAAC;;sFApEU,mBAAmB;mGAAnB,mBAAmB;QCThC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAIA,oEAEA;QAAA,yEACI;QAAA,sEACI;QAAA,0EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACN,uEACI;QAAA,2EAAgD;QAAA,wDAEhD;QAAA,4DAAO;QACX,4DAAM;QACN,uEACI;QAAA,2EAAgD;QAAA,wDAEhB;QAAA,4DAAO;QAC3C,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,qEACA;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,4EACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,wEACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QAEN,2EACI;QAAA,4EACI;QAAA,4EACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,sEACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,qEACA;QAAA,2EACI;QAAA,2EACI;QAAA,4EAAgD;QAAA,sEAAU;QAAA,4DAAO;QACjE,wDACJ;;QAAA,4DAAM;QAEN,2EACI;QAAA,4EAAgD;QAAA,qEAAS;QAAA,4DAAO;QAChE,wDACJ;;QAAA,4DAAM;QAEN,2EACI;QAAA,4EAAgD;QAAA,wEAAY;QAAA,4DAAO;QACnE,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QACA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,8EAAkB;QAAA,4DAAK;QACvC,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QAC/B,0EAAgB;QAAA,+DAAG;QAAA,4DAAK;QACxB,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAE5B,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC/B,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,iHAcK;QAEL,sEACI;QAAA,qEAAqB;QACrB,0EAA4B;QAAA,wDAC5B;QAAA,4DAAK;QACT,4DAAK;QACL,sEACI;QAAA,0EAA4C;QAAA,gEAAI;QAAA,4DAAK;QACrD,0EAA4B;QAAA,wDAAmD;QAAA,4DAAK;QACxF,4DAAK;QACL,sEACI;QAAA,0EAA4C;QAAA,gEAAI;QAAA,4DAAK;QACrD,0EAA4B;QAAA,wDAAmD;QAAA,4DAAK;QACxF,4DAAK;QACL,sEACI;QAAA,0EAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC1B,0EAA4B;QAAA,wDAAoC;QAAA,4DAAK;QACrE,qEAAiC;QACjC,sEAAiC;QACjC,2EAA4B;QAAA,yDAAuC;QAAA,4DAAK;QAC5E,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QACR,4EAAgD;QAAA,yFAA4B;QAAA,4DAAO;QACnF,6EACI;QAAA,yDACJ;QAAA,4DAAO;QACP,kEACA;QACA,4EACI;QAAA,4EACI;QAAA,wEACI;QAAA,4EAAiE;QAAA,0EAAa;QAAA,4DAAO;QACrF,6EACI;QAAA,mEACJ;QAAA,4DAAO;QACX,4DAAM;QACN,wEACI;QAAA,4EAAiE;QAAA,qEAAQ;QAAA,4DAAO;QAChF,6EACI;QAAA,iEACJ;QAAA,4DAAO;QACX,4DAAM;QACN,kEAEA;QAAA,qHAyBM;QACV,4DAAM;QAEN,4EACI;QAAA,sEACA;QAAA,4EACI;QAAA,4EACI;QAAA,6EAAgD;QAAA,0EAAa;QAAA,4DAAO;QACpE,yDACJ;QAAA,4DAAM;QACN,4EACI;QAAA,6EAAgD;QAAA,8EAAiB;QAAA,4DAAO;QACxE,yDAC6D;QAAA,4DAAM;QAE/D,4EACI;QAAA,6EAAgD;QAAA,+EAAkB;QAAA,4DAAO;QACzE,6EACI;QAAA,yDAGJ;QAAA,4DAAO;QACX,4DAAM;QACN,4EACI;QAAA,6EAAgD;QAAA,+EAAkB;QAAA,4DAAO;QACzE,6EACI;QAAA,yDACJ;QAAA,4DAAO;QACX,4DAAM;QAEN,kEAAI;QAAA,kEAAI;QAAA,kEACR;QAAA,4EACI;QAAA,4EACI;QAAA,6EAAgD;QAAA,iFACnC;QAAA,4DAAO;QACxB,4DAAM;QACN,4EACI;QAAA,6EAC8C;QAAA,yDAAkC;QAAA,4DAAO;QAC3F,4DAAM;QACV,4DAAM;QACd,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,kEACA;QAAA,4EACI;QAAA,6EAA+B;QAAA,iGAAoC;QAAA,4DAAO;QAC9E,4DAAM;QACN,4EACI;QAAA,+EAA6B;QAArB,6IAAS,cAAU,IAAC;QAAC,kEAAK;QAAA,4DAAS;QAC/C,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QA1Pd,4DACI;;QAcgC,2DACJ;QADI,0KACJ;QAGgD,0DAEhD;QAFgD,kRAEhD;QAGgD,0DAEhB;QAFgB,mRAEhB;QAY5B,0DACJ;QADI,mLACJ;QAOI,0DACJ;QADI,+RACJ;QAQI,0DACJ;QADI,2SACJ;QAOI,0DACJ;QADI,yZACJ;QASI,0DACJ;QADI,wNACJ;QAII,0DACJ;QADI,sRACJ;QAKQ,0DACJ;QADI,6HACJ;QAsBa,2DAA+B;QAA/B,gIAA+B;QAkBpB,0DAC5B;QAD4B,8IAC5B;QAI4B,0DAAmD;QAAnD,kIAAmD;QAInD,0DAAmD;QAAnD,kIAAmD;QAInD,0DAAoC;QAApC,qGAAoC;QAGpC,0DAAuC;QAAvC,sHAAuC;QAM3E,0DACJ;QADI,mGACJ;QAmBc,2DAA8B;QAA9B,8FAA8B;QAiC5B,0DACJ;QADI,sKACJ;QAGI,0DAC6D;QAD7D,gPAC6D;QAKjD,0DAGJ;QAHI,iXAGJ;QAKI,0DACJ;QADI,2KACJ;QAWkD,2DAAkC;QAAlC,0KAAkC;;6FD7NnH,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAIW;;;;;;;;;;;ICArC,uEAAmF;IAA9C,oTAAsB;IAAwB,yEAAc;IAAA,4DAAI;;;;IACrG,uEACI;IAD0C,2TAA6B;IACvE,+EAAmB;IAAA,4DAAI;;ADKpC,MAAM,sBAAsB;IAMjC,YAAmB,MAAiB,EAAU,IAAiB,EAAU,MAAc;QAApE,WAAM,GAAN,MAAM,CAAW;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJvF,gBAAW,GAAG,kEAAY,CAAC,gBAAgB,CAAC;QAC5C,UAAK,GAAG,kEAAY,CAAC,UAAU,CAAC;QAChC,SAAI,GAAG,kEAAY,CAAC,SAAS,CAAC;IAG9B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;IAClD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;IACxD,CAAC;;4FAxBU,sBAAsB;sGAAtB,sBAAsB;QCbnC,yEACI;QAAA,yEACI;QAAA,qEAAkC;QAClC,yEACI;QAAA,8EAAwD;QAAA,iEAAM;QAAA,4DAAW;QACzE,oFACI;QAAA,8GAAqG;QACrG,8GAC2B;QAC3B,wEAA2D;QAAnB,0IAAS,YAAQ,IAAC;QAAC,mEAAO;QAAA,4DAAI;QAC1E,4DAAW;QACX,2EAAoD;QAAA,wDAC5B;QAAA,4DAAO;QACnC,4DAAM;QACV,4DAAM;QACV,4DAAM;;;QAXmC,0DAA0B;QAA1B,kFAA0B;QAE/C,0DAAiB;QAAjB,iFAAiB;QACjB,0DAA0B;QAA1B,8FAA0B;QAIT,0DAA0B;QAA1B,kFAA0B;QAAC,0DAC5B;QAD4B,iIAC5B;;6FDCvB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAA2C;AACP;AACpC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yCAAyC;AAC7G,4BAA4B,gEAAqB,EAAE,oFAAoF;AACvI,4BAA4B,CAAC,+DAAoB;AACjD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,iD;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;AAEzB;AACoC;;;;;;;;;;;;;ICLhF,0EACI;IAAA,yEAAkB;IAAA,sEAAW;IAAA,4DAAK;IACtC,4DAAM;;;IACN,0EACI;IAAA,yEAAkB;IAAA,yEAAc;IAAA,4DAAK;IACzC,4DAAM;;;IAeU,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8C,oHAA8B;IACrF,0DACJ;IADI,6HACJ;;ADPb,MAAM,sBAAsB;IAa/B,YAAoB,QAAyB,EACjC,cAA8B,EAC9B,eAAgC,EACjC,SAA+C,EACrB,IAAI;QAJrB,aAAQ,GAAR,QAAQ,CAAiB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QACjC,cAAS,GAAT,SAAS,CAAsC;QACrB,SAAI,GAAJ,IAAI;QAhBzC,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9B,YAAO,GAAe,EAAE,CAAC;QAEzB,qBAAgB,GAAG,EAAE,CAAC;QAclB,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC7B,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC5B,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpG,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC5B,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACnC,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC1B,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC,CAAC;QAEH,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACjG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;YACtF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC1E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC1E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;YACxF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;SAC/E;IACL,CAAC;IAED,UAAU;QACF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;;QACJ,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YACxB,IAAI,WAAI,CAAC,iBAAiB,0CAAE,EAAE,KAAI,IAAI,EAAE;gBACpC,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;iBAAM;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;SACJ;IACL,CAAC;IAED,UAAU;QACN,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;QAClE,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAEhD,IAAI,QAAQ,IAAI,SAAS,EAAE;YACvB,QAAQ,GAAG,EAAE,cAAc,EAAE,YAAY,EAAE,CAAC;SAC/C;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QAClD,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,KAAK,GAAG,IAAI,CAAC;SAChB;QAED,IAAI,IAAI,GAAG;YACP,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACxD,+CAA+C;YAC/C,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;YACxC,KAAK,EAAE,KAAK;YACZ,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC1D,2CAA2C;YAC3C,QAAQ,EAAE,QAAQ;SACrB,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,iCAAiC,CAAC;gBACpD,0BAA0B;gBAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,YAAoB;QAC7B,IAAI,IAAI,GAAG;YACP,YAAY,EAAE,YAAY;SAC7B;QACD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IAC1D,CAAC;IAED,aAAa;QACT,MAAM,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;QAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG;YACP,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE;YAC7B,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACxD,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC5C,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;YACxC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC5C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC1D,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;YACxC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;YAC9C,QAAQ;SACX,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,IAAI,CAAC,UAAU,GAAG,iCAAiC,CAAC;gBACpD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,eAAe;QACX,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,CAAC,yGAA2B,CAAC,IAAI,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACL,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,OAAO,CAAC,KAAa;QACzB,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAChC;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACpH,OAAO,YAAY,CAAC;IACxB,CAAC;IAEO,aAAa,CAAC,YAAoB;QACtC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,MAAK,YAAY,CAAC,CAAC;IACvF,CAAC;IAEO,oBAAoB;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI,CAC9E,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CACpC,CAAC;IACN,CAAC;;4FAnKQ,sBAAsB,ooBAiBnB,wEAAe;sGAjBlB,sBAAsB;QChBnC,yEACI;QAAA,kHAEM;QACN,kHAEM;QACN,gEACA;QAAA,0EACI;QAD4B,8IAAU,cAAU,IAAC;QACjD,yEACI;QAAA,oFACI;QAAA,sEACJ;QAAA,4DAAiB;QACjB,gEACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,qFACI;QAAA,uEAEA;QAAA,0FACI;QAAA,kIAEa;;QACjB,4DAAmB;QACvB,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,wEACJ;QAAA,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,wEACJ;QAAA,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,wEACJ;QAAA,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,8EACyC;QADnB,+IAAS,gBAAY,IAAC;QACH,mEACzC;QAAA,4DAAS;QACT,8EAC6D;QAAA,iEAC7D;QAAA,4DAAS;QACb,4DAAM;QAEN,2EACI;QAAA,0EAA0B;QAAA,wDAAc;QAAA,4DAAK;QAC7C,0EAAwB;QAAA,wDAAY;QAAA,4DAAK;QAC7C,4DAAM;QACV,4DAAO;QAEX,4DAAM;;;QA/DyB,0DAAiC;QAAjC,2IAAiC;QAGjC,0DAAiC;QAAjC,2IAAiC;QAItD,0DAAyB;QAAzB,sFAAyB;QAUmB,0DAAgC;QAAhC,gFAAgC;QAGnC,0DAA0B;QAA1B,0JAA0B;QAgCzD,2DAA+B;QAA/B,4FAA+B;QAMb,0DAAc;QAAd,+EAAc;QAChB,0DAAY;QAAZ,6EAAY;;6FD5CnC,sBAAsB;cALlC,uDAAS;eAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAChD;;sBAkBQ,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEjC/B;AAAA;AAAA;AAAA;AAAA;AAAyC;AACoB;AAEC;;;AAE9D,MAAM,QAAQ,GAAG,0EAAgB,CAAC,OAAO,GAAG,QAAQ,CAAC;AAErD,MAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;CACjE,CAAC;AAKK,MAAM,WAAW;IAEpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,KAAK,CAAC,WAAW;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACvC,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ;SACjC,EAAE,WAAW,CAAC,CAAC;IACpB,CAAC;IAED,QAAQ,CAAC,IAAI;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACvC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAG,IAAI,CAAC,IAAI;SACnB,EAAE,WAAW,CAAC,CAAC;IACpB,CAAC;IAED,MAAM;QACF,YAAY,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;sEAvBQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;6FAET,WAAW;cAHvB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEY;AACL;AACpB;AAKQ;;;;;;;;;;;;;;;;;;;;ICTxD,0EACI;IAAA,0EACI;IAAA,wEACI;IAAA,yEAAQ;IAAA,6FAAkC;IAAA,4DAAS;IACvD,4DAAI;IACR,4DAAM;IACV,4DAAM;;;IAQc,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFgD,0FAA6B;IACtF,0DACJ;IADI,mGACJ;;;IAmBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFkD,4FAA+B;IAC1F,0DACJ;IADI,qGACJ;;;IAgCJ,yEAA6D;IAAA,gEAAK;IAAA,4DAAK;;;IACvE,yEAAgF;IAAA,uDAAW;IAAA,4DAAK;;;IAAhB,0DAAW;IAAX,sFAAW;;;IAC3F,yEAAsC;IAAA,yEAAQ;IAAA,gEAAK;IAAA,4DAAS;IAAA,4DAAK;;;IAIjE,yEAA6D;IAAA,iEAAM;IAAA,4DAAK;;;;IACxE,yEACI;IAAA,6EACI;IADI,+VAA0B;IAC9B,+EAAgC;IAAA,iEAAM;IAAA,4DAAW;IAErD,4DAAS;IACb,4DAAK;;;IACL,oEAA2C;;;IAI3C,yEAAsC;IAAA,6EAAkB;IAAA,4DAAK;;;IAC7D,yEAAuC;IAAA,uDAA6C;IAAA,4DAAK;;;IAAlD,0DAA6C;IAA7C,+JAA6C;;;IACpF,oEAA2C;;;IAI3C,yEAA8D;IAAA,yEAAc;IAAA,4DAAK;;;IAKzE,4EACI;IAAA,+EACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,iFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,iGACJ;IAAA,4DAAY;;;IAZpB,yEACI;IAAA,qFACI;IAAA,uEACA;IAAA,2EAAgB;IAAA,uEAAO;IAAA,4DAAO;IAC9B,qIAEY;IACZ,qIAEY;IACZ,qIAEY;IAChB,4DAAiB;IACrB,4DAAK;;;;;;;IAd6E,oFAAuB;IAIrF,0DAAgD;IAAhD,oJAAgD;IAGhD,0DAA2C;IAA3C,+IAA2C;IAG3C,0DAA2C;IAA3C,+IAA2C;;;IAK/D,oEAA2C;;;IAI3C,yEAA8D;IAAA,mEAAQ;IAAA,4DAAK;;;IAInE,4EACI;IAAA,kFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,oFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,uGACJ;IAAA,4DAAY;;;IAXpB,yEACI;IAAA,qFACI;IAAA,uEACA;IAAA,qIAEY;IACZ,qIAEY;IACZ,qIAEY;IAChB,4DAAiB;IACrB,4DAAK;;;;;;;IAb6E,oFAAuB;IAGrF,0DAAqD;IAArD,yJAAqD;IAGrD,0DAAgD;IAAhD,oJAAgD;IAGhD,0DAAgD;IAAhD,oJAAgD;;;IAKpE,yEACI;IAAA,qEAAI;IAAA,oEAAG;IAAA,uDAAc;IAAA,4DAAI;IAAA,4DAAK;IAClC,4DAAK;;;IADM,0DAAc;IAAd,iFAAc;;;IA6BzB,yEAA8D;IAAA,iEAAM;IAAA,4DAAK;;;IACzE,yEACI;IACA,uDACJ;;IAAA,4DAAK;;;;IADD,0DACJ;IADI,8SACJ;;;IACA,yEACI;IAAA,qEAAI;IAAA,oEAAG;IAAA,uDAAkC;;IAAA,4DAAI;IAAA,4DAAK;IACtD,4DAAK;;;IADM,0DAAkC;IAAlC,4JAAkC;;;IAIjD,oEAA2E;;;IAC3E,oEAAkE;;;IAClE,oEAA4D;;;IAiCpE,0EACI;IAAA,yEAAkE;IAAA,wEAAa;IAAA,4DAAK;IACpF,6EACI;IADmD,+LAAS,kBAAc,aAAa,CAAC,IAAC;IACzF,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;IACN,0EACI;IAAA,wEAA6B;IAAA,4GAAiD;IAAA,4DAAI;IAElF,0EACI;IAAA,2EACI;IAAA,qEAAG;IAAA,wEAAY;IAAA,4DAAI;IACnB,qEAAG;IAAA,4EAA2D;IAAA,wDAAyB;IAAA,4DAAO;IAAA,4DAAI;IACtG,4DAAM;IACN,2EACI;IAAA,qEAAG;IAAA,uEAAW;IAAA,4DAAI;IAClB,qEAAG;IAAA,wDAA8B;IAAA,4DAAI;IACzC,4DAAM;IACN,2EACI;IAAA,qEAAG;IAAA,0EAAc;IAAA,4DAAI;IACrB,qEAAG;IAAA,wDAAsB;IAAA,4DAAI;IACjC,4DAAM;IACV,4DAAM;IAEN,qEACI;IAAA,4EAA0B;IAAA,sGAA0C;IAAA,4DAAO;IAC/E,4DAAI;IAER,4DAAM;IACN,2EACI;IAAA,8EAAgG;IAAxC,gMAAS,kBAAc,cAAc,CAAC,IAAC;IAAC,kEAAM;IAAA,4DAAS;IAC/G,8EAA+F;IAApC,gMAAS,gBAAY,YAAY,CAAC,IAAC;IAAC,8DAAE;IAAA,4DAAS;IAC9G,4DAAM;;;IApBoE,2DAAyB;IAAzB,oIAAyB;IAIpF,0DAA8B;IAA9B,uJAA8B;IAI9B,0DAAsB;IAAtB,yGAAsB;;;IAgBrC,0EACI;IAAA,yEAAkE;IAAA,uDAAc;IAAA,4DAAK;IACrF,6EACI;IADmD,+LAAS,kBAAc,aAAa,CAAC,IAAC;IACzF,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;IACN,0EACI;IAAA,oEAAG;IAAA,yEAAQ;IAAA,uDAAiB;IAAA,4DAAS;IAAA,4DAAI;IACzC,qEAAG;IAAA,wDAAoB;IAAA,4DAAI;IAC3B,sEAAqC;IACzC,4DAAM;IACN,2EACI;IAAA,8EAAgG;IAAxC,gMAAS,kBAAc,cAAc,CAAC,IAAC;IAAC,kEAAM;IAAA,4DAAS;IAC/G,8EAA+F;IAApC,gMAAS,gBAAY,YAAY,CAAC,IAAC;IAAC,8DAAE;IAAA,4DAAS;IAC9G,4DAAM;;;IAbgE,0DAAc;IAAd,mFAAc;IAMrE,0DAAiB;IAAjB,sFAAiB;IACzB,0DAAoB;IAApB,yFAAoB;IAClB,0DAAyB;IAAzB,wJAAyB;;ADlO/B,MAAM,sBAAsB;IAyBjC,YACU,GAAgB,EAChB,cAA8B,EAC9B,eAAgC,EAChC,YAAsB,EACtB,oBAA0C,EAAU,KAAa;QAJjE,QAAG,GAAH,GAAG,CAAa;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,yBAAoB,GAApB,oBAAoB,CAAsB;QAAU,UAAK,GAAL,KAAK,CAAQ;QA5B3E,qBAAgB,GAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;QAO3F,oBAAe,GAAG,CAAC,CAAC;QACpB,aAAQ,GAAG,CAAC,CAAC;QACb,gBAAW,GAAG,CAAC,CAAC;QAGhB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,kBAAa,GAAkB,IAAI,kEAAa,EAAE,CAAC;QAEnD,eAAU,GAAG,EAAE,CAAC;QAChB,kBAAa,GAAG,EAAE,CAAC;QACnB,qBAAgB,GAAG,EAAE,CAAC;QAEtB,gBAAW,GAAG,EAAE,CAAC;QA6DjB,YAAO,GAAY,KAAK,CAAC;QApDvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,uBAAuB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;IAC9F,CAAC;IAED,eAAe,CAAC,eAAuB;QACrC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE;IACzC,CAAC;IAED,gBAAgB,CAAC,gBAAwB;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,CAAC,YAAY,IAAI,EAAE,EAAE;oBACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IAClD,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACzD,CAAC;IAKD,SAAS,CAAC,UAAkB,EAAE,gBAAwB,EAAE,aAAqB,EAAE,cAAsB,EAAE;QACrG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;QAC1G,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,UAAmB,EAAE,OAAY;;QACpC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAClD,sDAAsD;YACtD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,2CAA2C,EAAE,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,OAAO;SACR;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;QACvE,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAEhD,MAAM,aAAa,GAAkB,IAAI,kEAAa,EAAE,CAAC;QAEzD,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC5C;QACD,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;QAC3E,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAClC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACxD,aAAa,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QACtE,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5C,gFAAgF;QAChF,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC3E,aAAa,CAAC,OAAO,SAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,0CAAE,OAAO,EAAE,CAAC;QAChF,aAAa,CAAC,QAAQ,SAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,0CAAE,OAAO,EAAE,CAAC;QAClF,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvD,IAAI,aAAa,CAAC,UAAU,GAAG,CAAC,EAAE;YAChC,2CAA2C;YAC3C,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,gCAAgC,EAAE,EAAE,CAAC,CAAC;YAC9D,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,OAAO;SACR;aAAM,IAAI,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,EAAE;YACrC,oDAAoD;YACpD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,yCAAyC,EAAE,EAAE,CAAC,CAAC;YACvE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,OAAO;SACR;aAAM,IAAI,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE;YACtC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;SAC/B;aAAM,IAAI,aAAa,CAAC,UAAU,GAAG,CAAC,EAAE;YACvC,aAAa,CAAC,MAAM,GAAG,SAAS,CAAC;SAClC;aAAM;YACL,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;SAC9B;QAED,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,KAAK,IAAI,aAAa,CAAC,MAAM,KAAK,SAAS,CAAC;YACxE,CAAC,QAAQ,CAAC,YAAY,KAAK,EAAE,IAAI,QAAQ,CAAC,WAAW,KAAK,EAAE,CAAC,EAAE;YAC/D,IAAI,QAAQ,GAAG,+BAA+B,CAAC;YAC/C,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,QAAQ,CAAC,YAAY,KAAK,EAAE,EAAE;gBAChC,MAAM,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;aAC/D;YACD,IAAI,QAAQ,CAAC,WAAW,KAAK,EAAE,EAAE;gBAC/B,MAAM,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;aAC9D;YACD,IAAI,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;gBACvC,MAAM,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;aAC1D;YACD,QAAQ,GAAG,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;YAC1C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,OAAO;SACR;QAED,IAAI,aAAa,CAAC,UAAU,IAAI,IAAI,EAAE;YACpC,aAAa,CAAC,UAAU,GAAG,GAAG,CAAC;SAChC;QAED,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC1G,IAAI,CAAC,oBAAoB;iBACtB,mBAAmB,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,UAAU,EAAE;oBACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBACrB,2BAA2B;iBAC5B;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,CAAC,EAAE,IAAI,CAAC,CAAC;iBACV;YACH,CAAC,EACC,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAClC,CAAC,CAAC,CAAC;QACT,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,YAAoB;QAC/B,IAAI,IAAI,GAAG;YACT,YAAY,EAAE,YAAY;YAC1B,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,IAAI;SAClB,CAAC;QACF,OAAO,IAAI,CAAC;QAAA,CAAC;IACf,CAAC;IAED,gBAAgB;QACd,wCAAwC;QACxC,yCAAyC;QACzC,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,CAAC;IAEO,oBAAoB,CAAC,UAAe;QAC1C,IAAI,CAAC,oBAAoB,CAAC,gCAAgC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC7F,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACpF,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACzC,CAAC;IAEO,SAAS,CAAC,QAAQ;QACxB,0DAA0D;QAC1D,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,SAAS,CAAC;QACxC,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,yCAAyC,CAAC,CAAC;QACvF,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;IAClC,CAAC;IAEO,eAAe,CAAC,KAAa;QACnC,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC7G,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,cAAc,CAAC,KAAa;QAClC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAChG,CAAC;IAEO,YAAY,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC;IACpE,CAAC;IAEO,aAAa,CAAC,KAAa;QACjC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC;IACtE,CAAC;IAEO,QAAQ,CAAC,OAAO;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACzF,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAChF,OAAO,EAAE,CAAC,OAAO,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAEO,WAAW,CAAC,OAAgB;QAClC,IAAI,cAAc,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAClD,IAAI,OAAO,CAAC,WAAW,KAAK,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;gBACvD,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBACpC,cAAc,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,cAAc,EAAE;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,CAAC,uBAAuB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;SAC7F;IACH,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI,CACzF,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAC1C,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,IAAI,CACvF,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CACzC,CAAC;QAEF,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE;YACjE,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC5B,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAClE,+DAA+D;gBAC/D,oCAAoC;gBACpC,WAAW,IAAI,OAAO,CAAC,UAAU,CAAC;gBAClC,WAAW,IAAI,MAAM,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,QAAQ,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACtB,OAAO,EAAE,EAAE;YACX,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACvC,UAAU,EAAE,EAAE;SACf,CAAC,CAAC;IACL,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,qBAAqB,CAAc,CAAC;IACzE,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAgB,CAAC;IAClE,CAAC;;4FArUU,sBAAsB;sGAAtB,sBAAsB;;;;;;;;;QCrBnC,kHAMM;QACN,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,kEAAO;QAAA,4DAAY;QAC9B,yEACA;QAAA,yFACI;QADmE,gLAAkB,wCAAoC,IAAC;QAC1H,kIAEa;;QACjB,4DAAmB;QACvB,4DAAiB;QAUrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,2FACI;QADoE,iLAAkB,yCAAqC,IAAC;QAC5H,kIAEa;;QACjB,4DAAmB;QACvB,4DAAiB;QACrB,4DAAM;QAEN,2EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACJ;QAAA,4DAAiB;QACrB,4DAAM;QAEN,sFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,wFACwB;QACxB,uFAA0C;QAC9C,4DAAiB;QAEjB,sFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,wFACwB;QACxB,uFAA0C;QAC9C,4DAAiB;QAErB,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,mHAAuE;QACvE,mHAAgG;QAChG,mHAAiE;QACrE,qEAAe;QAEf,6EACI;QAAA,mHAAwE;QACxE,mHAKK;QACL,mHAA2C;QAC/C,qEAAe;QAEf,6EACI;QAAA,mHAA6D;QAC7D,mHAAyF;QACzF,mHAA2C;QAC/C,qEAAe;QAEf,6EACI;QAAA,mHAAiF;QACjF,mHAcK;QACL,mHAA2C;QAC/C,qEAAe;QAEf,6EACI;QAAA,mHAA2E;QAC3E,mHAaK;QACL,mHAEK;QACT,qEAAe;QA0Bf,6EACI;QAAA,mHAAyE;QACzE,mHAGK;QACL,mHAEK;QACT,qEAAe;QAEf,mHAA2E;QAC3E,mHAAkE;QAClE,mHAA4D;QAChE,4DAAQ;QAER,2EACI;QAAA,uEACI;QAAA,6EAAkB;QAAA,8EAAkB;QAAA,4DAAQ;QAC5C,4EAA+B;QAAA,wDAA4E;;QAAA,4DAAO;QACtH,4DAAM;QACN,uEACI;QAAA,6EAAkB;QAAA,8EAAkB;QAAA,4DAAQ;QAC5C,4EAA+B;QAAA,wDAAqC;;QAAA,4DAAO;QAC/E,4DAAM;QACN,uEACI;QAAA,6EAAkB;QAAA,+EAAmB;QAAA,4DAAQ;QAC7C,4EAA+B;QAAA,wDAAsC;;QAAA,4DAAO;QAChF,4DAAM;QACN,uEACI;QAAA,6EAAkB;QAAA,0EAAc;QAAA,4DAAQ;QACxC,wEACJ;QAAA,4DAAM;QACN,iEAEA;QAAA,8EAA+K;QAA/B,+RAAS,SAAK,KAAK,OAAU,IAAC;QAAC,uEACtK;QAAA,4DAAS;QAClB,8EAAiJ;QAA9B,+RAAS,SAAK,IAAI,OAAU,IAAC;QAAC,+EAAmB;QAAA,4DAAS;QAC7K,8EAAkG;QAA7B,+IAAS,sBAAkB,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACpH,4DAAM;QACV,4DAAM;QACV,4DAAO;QAIP,oNAkCc;QAEd,oNAgBc;;;;;;QA7PO,6EAAa;QAO5B,0DAAgC;QAAhC,6FAAgC;QAKwE,0DAA+B;QAA/B,gFAA+B;QAEzF,0DAA2B;QAA3B,4JAA2B;QAmBkB,0DAAgC;QAAhC,gFAAgC;QAE5E,0DAA4B;QAA5B,6JAA4B;QAgBrD,2DAAyB;QAAzB,8EAAyB;QACR,0DAAe;QAAf,oEAAe;QAOhC,0DAAyB;QAAzB,8EAAyB;QACR,0DAAe;QAAf,oEAAe;QAOT,0DAAsC;QAAtC,mGAAsC;QAoGxE,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAC/B,0DAAiC;QAAjC,iGAAiC;QAMlB,0DAA4E;QAA5E,oMAA4E;QAI5E,0DAAqC;QAArC,8JAAqC;QAIrC,0DAAsC;QAAtC,gKAAsC;QAQU,0DAA4D;QAA5D,6HAA4D;QAE5D,0DAA+B;QAA/B,4FAA+B;;6FD5KjH,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;sgBAmB6B,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YAIC,YAAY;kBAAtC,uDAAS;mBAAC,cAAc;;;;;;;;;;;;;;AE3C3B;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGqB;;;AAKvD,MAAM,eAAe;IAIxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,WAAW,CAAC;IAGzD,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,QAAgB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,KAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,sBAAsB,CAAC,QAAgB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,WAAW,EAAE,QAAQ,CAAC,CAAC;IAChE,CAAC;IAED,iBAAiB,CAAC,YAAoB;QAClC,MAAM,IAAI,GAAG,EAAE,MAAM,EAAE,EAAC,cAAc,EAAE,YAAY,EAAC,EAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,eAAe,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;;8EApCQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAO,MAAM,UAAU;CAgBtB;AAEM,MAAM,aAAa;CAIzB;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;AAOzC,MAAM,aAAa;IAStB,YAAoB,cAA8B,EAAU,eAAgC,EAAU,eAAgC,EAAU,oBAA0C,EAAU,iBAAoC;QAApN,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;IACxO,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,MAAM;QACF,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;QACrC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QACtC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QACtC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3C,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACrC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,oBAAoB,CAAC,iCAAiC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACrC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,CAAC;;0EA1DQ,aAAa;6FAAb,aAAa;QC0B1B,yEAGI;QAAA,yEAGI;QAAA,yEAEI;QAAA,yEACI;QAAA,yEAEI;QAAA,yEAEI;QAAA,yEACI;QAAA,yEACI;QAAA,kEAAgC;QAChC,0EAA4B;QAAA,wDAAuB;QAAA,4DAAO;QAC1D,2EAAyB;QAAA,0EAAc;QAAA,4DAAO;QAClD,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,oEAA6B;QAC7B,2EAA4B;QAAA,wDAAoB;QAAA,4DAAO;QACvD,2EAAyB;QAAA,sEAAU;QAAA,4DAAO;QAC9C,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,oEAA2B;QAC3B,2EAA4B;QAAA,wDAAwB;QAAA,4DAAO;QAC3D,2EAAyB;QAAA,8EAAkB;QAAA,4DAAO;QACtD,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,oEAA4B;QAC5B,2EAA4B;QAAA,wDAAwB;QAAA,4DAAO;QAC3D,2EAAyB;QAAA,8EAAkB;QAAA,4DAAO;QACtD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAjCsD,2DAAuB;QAAvB,wFAAuB;QAQvB,0DAAoB;QAApB,qFAAoB;QAQpB,0DAAwB;QAAxB,yFAAwB;QAQxB,0DAAwB;QAAxB,yFAAwB;;6FDlEvE,aAAa;cALzB,uDAAS;eAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACtC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGqB;;;AAMvD,MAAM,eAAe;IAIxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,WAAW,CAAC;IAGzD,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,iBAAiB,CAAC,YAAoB;QAClC,MAAM,IAAI,GAAG,EAAE,MAAM,EAAE,EAAC,cAAc,EAAE,YAAY,EAAC,EAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,eAAe,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,QAAgB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,KAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,CAAC;;8EAhCQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACE;AAG0B;;;;;;;;;;;;;ICS3E,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,+FAAqB;;;IAC7D,yEAA+C;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,yFAAe;;;IAI9D,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;;IAClD,yEACI;IAAA,6EACI;IAAA,+EAA6B;IAAA,oEAAS;IAAA,4DAAW;IAErD,4DAAS;IACT,mFACI;IAAA,sEACI;IAAA,6EACI;IADI,oXAAsC;IAC1C,0EAEI;IACA,+EAAuB;IAAA,gEAAI;IAAA,4DAAW;IACtC,2EAAiC;IAAA,mEAAO;IAAA,4DAAM;IAClD,4DAAM;IACV,4DAAS;IACT,iEAEA;IAAA,8EACI;IADI,gXAAiC;IACrC,2EACI;IACA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAAgC;IAAA,mEAAO;IAAA,4DAAM;IACjD,4DAAM;IAEd,4DAAS;IAEL,iEACJ;IAAA,4DAAM;IACV,4DAAW;IAEf,4DAAK;;;IA7B8B,0DAA0B;IAA1B,mFAA0B;;;IAgCjE,oEAA4D;;;IAC5D,oEAAkE;;;AD3CnE,MAAM,qBAAqB;IAK9B,YAAmB,MAAiB,EAAU,eAAgC,EAAU,eAAgC;QAArG,WAAM,GAAN,MAAM,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAHxH,qBAAgB,GAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAIhD,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,UAAU;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB,CAAC,mBAAmB;QACnC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE;SACtC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACX,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/C,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACnD,QAAQ,CAAC,EAAE;YACP,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACX,CAAC;;0FA3DQ,qBAAqB;qGAArB,qBAAqB;kEACnB,wEAAY;;;;;QCd3B,sEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,8EACJ;QADkB,kJAAS,uBAAmB,IAAC;QAA3C,4DACJ;QAAA,4DAAiB;QACjB,yEACI;QAAA,4EAA+F;QAAvF,6IAAS,gBAAY,IAAC;QAAiE,yEAC/F;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,4EACI;QACA,4EACI;QAAA,iHAAmD;QACnD,iHAAkE;QAClE,kHAAmE;QACvE,qEAAe;QAEf,6EACI;QAAA,iHAAkD;QAClD,kHA8BK;QACT,qEAAe;QAEf,kHAA4D;QAC5D,kHAAkE;QACtE,4DAAQ;QACR,gFAAqG;QACzG,4DAAM;;QA/CK,2DAAyB;QAAzB,sFAAyB;QA2CvB,0DAAiC;QAAjC,iGAAiC;QACb,0DAA0B;QAA1B,kGAA0B;QAExC,0DAAgC;QAAhC,kJAAgC;;6FD7CtC,qBAAqB;cALjC,uDAAS;eAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC/C;4SAE4B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEd3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;AAWlE,MAAM,mCAAmC;IAI9C,YAAoB,oBAA0C,EACrD,SAA4D,EAClC,IAAI;QAFnB,yBAAoB,GAApB,oBAAoB,CAAsB;QACrD,cAAS,GAAT,SAAS,CAAmD;QAClC,SAAI,GAAJ,IAAI;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,EAAE,EAAE,IAAI,0DAAW,EAAE;YACrB,YAAY,EAAE,IAAI,0DAAW,EAAE;YAC/B,cAAc,EAAE,IAAI,0DAAW,EAAE;YACjC,SAAS,EAAE,IAAI,0DAAW,EAAE;SAC7B,CAAC,CAAC;QAEH,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;YACpC,qDAAqD;YACrD,uDAAuD;YACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACjG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SAC7F;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAChC;IACH,CAAC;IAED,qBAAqB;QACnB,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,MAAM,SAAS,GAAW,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE5E,IAAI,SAAS,GAAG,CAAC,EAAE;YACjB,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACvC,OAAO;SACR;aAAM,IAAI,SAAS,IAAI,CAAC,EAAE;YACzB,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACvC,OAAO;SACR;aAAM,IAAI,SAAS,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE;YACvE,MAAM,GAAG,MAAM,CAAC;SACjB;aAAM,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE;YACrE,MAAM,GAAG,KAAK,CAAC;SAChB;aAAM;YACL,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAChD,OAAO;SACR;QAED,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK;YACtC,SAAS,EAAE,SAAS;YACpB,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClE,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,2CAA2C;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;;sHArEU,mCAAmC,yWAMpC,wEAAe;mHANd,mCAAmC;QCbhD,yEAEI;QAAA,0EACI;QAD4B,2JAAU,cAAU,IAAC;QACjD,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,wEAAa;QAAA,4DAAY;QACpC,sEACJ;QAAA,4DAAiB;QACjB,gEACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,oFACI;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,uEACJ;QAAA,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,uEACJ;QAAA,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,6EACyC;QADlB,4JAAS,gBAAY,IAAC;QACJ,mEACzC;QAAA,4DAAS;QACT,6EAC6D;QAAA,iEAC7D;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QAnCI,0DAAyB;QAAzB,sFAAyB;QA6Bf,2DAA+B;QAA/B,4FAA+B;;6FDlBtC,mCAAmC;cAL/C,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,gDAAgD;gBAC7D,SAAS,EAAE,CAAC,+CAA+C,CAAC;aAC7D;;sBAOI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEnB3B;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGqB;;;AAKvD,MAAM,eAAe;IAIxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,WAAW,CAAC;IAGzD,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,cAAc,CAAC,QAAa;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,cAAc,CAAC,KAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,CAAC;;8EAzBQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACE;AAGuB;;;;;;;;;;;;;;ICUxE,yEAAsC;IAAA,+DAAI;IAAA,4DAAK;;;IAC/C,yEAAwD;IAAA,uDAAW;IAAA,4DAAK;;;IAAhB,0DAAW;IAAX,sFAAW;;;IAKnE,yEAAuC;IAAA,mEAAO;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,mGAAwB;;;IAKhE,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;IACpD,yEAAwC;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,mJAAmC;;;IAK3E,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;IAChD,yEAAwC;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,2FAAgB;;;IAIxD,yEAAuC;IAAA,0EAAc;IAAA,4DAAK;;;IAC1D,yEAAwC;IAAA,uDAAoC;;IAAA,4DAAK;;;IAAzC,0DAAoC;IAApC,sKAAoC;;;IAI5E,yEAAuC;IAAA,yEAAa;IAAA,4DAAK;;;IACzD,yEAA6D;IAAA,oEAAG;IAAA,uDAA4C;;IAAA,4DAAI;IAAA,4DAAK;;;IAArD,0DAA4C;IAA5C,mKAA4C;;;IAc5G,yEAAuC;IAAA,+DAAG;IAAA,4DAAK;;;IAC/C,yEAAwC;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,2FAAgB;;;IAIxD,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;;IAClD,yEAEI;IAAA,6EACA;IAAA,+EAA6B;IAAA,oEAAS;IAAA,4DAAW;IAErD,4DAAS;IACL,mFACI;IAAA,sEACI;IAAA,sEACI;IAAA,6EACA;IADQ,6WAAiC;IACzC,0EACI;IAAA,gFAAuB;IAAA,gEAAI;IAAA,4DAAW;IAEtC,2EAAiC;IAAA,mEAAO;IAAA,4DAAM;IAClD,4DAAM;IACV,4DAAS;IACT,4DAAM;IAEN,iEACA;IAAA,uEACI;IAAA,8EACI;IADI,iXAAoC;IACxC,2EACI;IACA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAAgC;IAAA,mEAAO;IAAA,4DAAM;IACjD,4DAAM;IACV,4DAAS;IAEb,4DAAM;IACV,4DAAM;IACV,4DAAW;IAGf,4DAAK;;;IA/B8B,0DAA0B;IAA1B,mFAA0B;;;IAkCjE,oEAA2E;;;IAC3E,oEAAmE;;;ADzFpE,MAAM,oBAAoB;IAK7B,YAAmB,MAAiB,EAAU,cAA8B,EAAU,cAA8B;QAAjG,WAAM,GAAN,MAAM,CAAW;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAJpH,qBAAgB,GAAa,CAAC,KAAK,EAAE,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;IAKnH,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/C,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,aAAa;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,aAAa;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;SAChC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,SAAS;QACnB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CAClD,QAAQ,CAAC,EAAE;YACP,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,CAAC;;wFAvDQ,oBAAoB;oGAApB,oBAAoB;kEAGlB,wEAAY;;;;;QChB3B,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,8EACJ;QADkB,iJAAS,uBAAmB,IAAC;QAA3C,4DACJ;QAAA,4DAAiB;QACjB,sEACI;QAAA,4EAAkG;QAA1F,4IAAS,mBAAe,IAAC;QAAiE,wEAClG;QAAA,4DAAS;QACb,4DAAM;QAEV,4DAAM;QAEN,yEACI;QAAA,4EAEI;QAAA,4EACI;QAAA,gHAA+C;QAC/C,gHAAwE;QAC5E,qEAAe;QAGf,6EACI;QAAA,gHAAmD;QACnD,gHAAqE;QACzE,qEAAe;QAGf,6EACI;QAAA,gHAAoD;QACpD,gHAAgF;QACpF,qEAAe;QAGf,6EACI;QAAA,gHAAgD;QAChD,gHAA6D;QACjE,qEAAe;QAEf,6EACI;QAAA,gHAA0D;QAC1D,gHAAiF;QACrF,qEAAe;QAEf,6EACI;QAAA,gHAAyD;QACzD,iHAAqH;QACzH,qEAAe;QAYf,6EACI;QAAA,gHAA+C;QAC/C,gHAA6D;QACjE,qEAAe;QAEf,6EACI;QAAA,gHAAkD;QAClD,iHAiCK;QACT,qEAAe;QAEf,iHAA2E;QAC3E,iHAAmE;QACvE,4DAAQ;QACR,gFAAuG;QAC3G,4DAAM;;QA5FK,2DAAyB;QAAzB,sFAAyB;QAwFvB,2DAAmC;QAAnC,iGAAmC;QACf,0DAA0B;QAA1B,kGAA0B;QAExC,0DAAiC;QAAjC,kJAAiC;;6FD3FvC,oBAAoB;cALhC,uDAAS;eAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC9C;wSAI4B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEhB3B;AAAA;AAAA;AAAyC;;AAEzC,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,mBAAmB;IAE5B;IACA,CAAC;IAED,OAAO;QACH,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAEM,SAAS,CAAC,KAAa;QAC1B,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;IAEM,QAAQ;QACX,OAAO,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IAEM,QAAQ,CAAC,IAAI;QAChB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxD,CAAC;;sFAzBQ,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFhB,MAAM;6FAET,mBAAmB;cAH/B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACF;AACE;AACL;AAC6C;;;;;;;;;;;;;;;;;ICAzF,6EACI;IADoE,wUAA+B;IACnG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAeb,4EAAwE;IAAA,6EAAkB;IAAA,4DAAY;;;IACtG,4EAAoE;IAAA,2EAAgB;IAAA,4DAAY;;;IAO5F,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,mJAAmC;;;IAI3E,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IACpD,yEACI;IAAA,6EACI;IADI,6WAAgC;IACpC,uDACJ;;IAAA,4DAAS;IACb,4DAAK;;;IAFG,0DACJ;IADI,uLACJ;;;IAKJ,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAyC;;IAAA,4DAAK;;;IAA9C,0DAAyC;IAAzC,8KAAyC;;;IAIjF,yEAA8D;IAAA,sEAAW;IAAA,4DAAK;;;IAC9E,yEAAgE;IAAA,uDACM;IAAA,4DAAK;;;IADX,0DACM;IADN,wKACM;;;IAItE,yEAA8D;IAAA,oEAAS;IAAA,4DAAK;;;IAC5E,yEACI;IAAA,uDAAyD;IAAA,4DAAK;;;IAA9D,0DAAyD;IAAzD,oIAAyD;;;IAI7D,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,+HACJ;;;IAIA,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,+HACJ;;;IAIA,yEAA6D;IAAA,iEAAM;IAAA,4DAAK;;;;IACxE,yEACI;IAAA,6EACI;IADI,gXAAmC;IACvC,+EAAgC;IAAA,iEAAM;IAAA,4DAAW;IACrD,4DAAS;IACb,4DAAK;;;IACL,oEAA2C;;;IAI3C,yEAA6D;IAAA,gEAAK;IAAA,4DAAK;;;;IACvE,yEACI;IAAA,6EACI;IADI,6WAAgC;IACpC,+EAA+B;IAAA,gEAAK;IAAA,4DAAW;IAEnD,4DAAS;IACb,4DAAK;;;IACL,oEAA2C;;;IAG/C,oEAA2E;;;IAM3D,yEAAsC;IAAA,+DAAI;IAAA,4DAAK;;;IAC/C,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,yFACJ;;;IAIA,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;IACvD,yEAAwC;IAAA,uDAAiC;IAAA,4DAAK;;;IAAtC,0DAAiC;IAAjC,gJAAiC;;;IAIzE,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,0HACJ;;;IAIA,yEAAyD;IAAA,oEAAS;IAAA,4DAAK;;;IACvE,yEAA2D;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,kGAAuB;;;IAGtF,oEAAyE;;;IACzE,oEAAgE;;;IA1BpE,4EACI;IAAA,4EACI;IAAA,mIAA+C;IAC/C,mIAEK;IACT,qEAAe;IAEf,4EACI;IAAA,mIAAuD;IACvD,mIAA8E;IAClF,qEAAe;IAEf,4EACI;IAAA,mIAAyE;IACzE,mIAEK;IACT,qEAAe;IAEf,6EACI;IAAA,qIAAuE;IACvE,qIAAuF;IAC3F,qEAAe;IAEf,qIAAyE;IACzE,qIAAgE;IACpE,4DAAQ;;;;IA3BD,gGAAmC;IAyBjC,2DAAkC;IAAlC,mGAAkC;IACd,0DAAwB;IAAxB,oGAAwB;;;;IA7B7D,yEAEI;IAAA,oNA6Bc;IAClB,4DAAK;;;IAhCwD,4EAAmB;;;ADlFjF,MAAM,oBAAoB;IAe/B,YAAmB,MAAiB,EAAU,iBAAoC,EAAU,MAAc;QAAvF,WAAM,GAAN,MAAM,CAAW;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAd1G,qBAAgB,GAAa,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,YAAY,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC1J,mBAAc,GAAa,CAAC,IAAI,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;QAM7E,UAAK,GAAG,IAAI,wDAAS,CAAC;YACpB,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,GAAG,EAAE,IAAI,0DAAW,EAAE;SACvB,CAAC,CAAC;IAI2G,CAAC;IAE/G,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,UAAU;QACR,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9C,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAErC,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAClC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC;YACzC,sFAAsF;YACtF,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;gBAC/C,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC9D,OAAO,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,OAAO;YAC3D,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,UAAU,EAAE;YACd,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,eAAC,+BAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,0CAAE,YAAY,0CAAE,WAAW,GAAG,OAAO,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,OAAM,CAAC,CAAC,IAAC,CAAC;SAC/I;QACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAEO,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,SAAS,CACnE,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,SAAS,CAChE,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACjC,CAAC;IAEO,SAAS,CAAC,QAAQ;QACxB,MAAM,OAAO,GAAG,oDAAoD,CAAC;QACrE,MAAM,MAAM,GAAG,GAAG,CAAC,eAAe,CAChC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAC3C,CAAC;QAEF,MAAM,GAAG,GAAG,oCAAoC,CAAC;QAEjD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACzB,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,6DAA6D,CAAC,CAAC;QACxG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,kCAAkC;QAElC,KAAK;QACL,+DAA+D;QAC/D,+CAA+C;QAC/C,yFAAyF;QACzF,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;IAClC,CAAC;IAED,aAAa,CAAC,aAAa;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,KAAK;YACnB,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;SAC9B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;;wFApHU,oBAAoB;oGAApB,oBAAoB;kEAGpB,wEAAY;;;;;QCjBzB,yEACI;QAAA,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,0EAAe;QAAA,4DAAY;QACtC,2EACA;QAD4B,4LAAwB,mFAAU,gBAAY,IAAtB;QAApD,4DACA;QAAA,sHAES;QACb,4DAAiB;QACrB,4DAAM;QAEN,iFACI;QAAA,0FACI;QAAA,sEACA;QAAA,uEACJ;QAAA,4DAAuB;QACvB,uFAAwE;QACxE,4FACI;QAD6B,4JAAS,eAAW,IAAC;QAClD,gFAAkC;QAAA,iEAAK;QAAA,4DAAW;QACtD,4DAAwB;QACxB,8FAAuD;QAEvD,+HAAsG;QACtG,+HAAgG;QACpG,4DAAiB;QACrB,4DAAM;QAEN,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,iHAAmD;QACnD,iHAAgF;QACpF,qEAAe;QAEf,6EACI;QAAA,iHAAoD;QACpD,iHAIK;QACT,qEAAe;QAEf,6EACI;QAAA,iHAAmD;QACnD,iHAAsF;QAC1F,qEAAe;QAEf,6EACI;QAAA,iHAA8E;QAC9E,iHAC2E;QAC/E,qEAAe;QAEf,6EACI;QAAA,iHAA4E;QAC5E,iHACkE;QACtE,qEAAe;QAEf,6EACI;QAAA,iHAAyE;QACzE,iHAEK;QACT,qEAAe;QAEf,6EACI;QAAA,iHAAyE;QACzE,iHAEK;QACT,qEAAe;QAEf,6EACI;QAAA,iHAAwE;QACxE,iHAIK;QACL,iHAA2C;QAC/C,qEAAe;QAEf,6EACI;QAAA,iHAAuE;QACvE,iHAKK;QACL,iHAA2C;QAC/C,qEAAe;QAEf,iHAA2E;QAC3E,iHAgCK;QACT,4DAAQ;QACR,gFAAqG;QACzG,4DAAM;QACN,iEAAI;;;QAhIoC,0DAAwB;QAAxB,mFAAwB;QAC3C,0DAAgB;QAAhB,gFAAgB;QAOP,0DAAmB;QAAnB,gFAAmB;QAIR,0DAAc;QAAd,oEAAc;QAMnC,0DAA0D;QAA1D,0HAA0D;QAC1D,0DAAsD;QAAtD,sHAAsD;QAK/D,0DAAyB;QAAzB,sFAAyB;QAmEvB,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAkCxC,0DAAgC;QAAhC,mJAAgC;;6FDpHtC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;+QAI0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEhBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AACV;AACE;AACS;;;;;;;;;;;ICD1D,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;IACvD,yEAAwC;IAAA,uDAAiC;IAAA,4DAAK;;;IAAtC,0DAAiC;IAAjC,gJAAiC;;;IAIzE,yEAAyD;IAAA,yEAAc;IAAA,4DAAK;;;IAC5E,yEAA2D;IAAA,uDAC3D;;IAAA,4DAAK;;;IADsD,0DAC3D;IAD2D,uKAC3D;;;IAIA,yEAAyD;IAAA,oEAAS;IAAA,4DAAK;;;IACvE,yEAA2D;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,kGAAuB;;;IAIlF,yEAA6D;IAAA,iEAAM;IAAA,4DAAK;;;;IACxE,yEACI;IAAA,6EACN;IADc,uXAAmC;IACjD,+EAAgC;IAAA,iEAAM;IAAA,4DAAW;IAEnD,4DAAS;IACL,4DAAK;;;IACL,oEAA2C;;;IAG/C,oEAA2E;;;;IAC3E,oEACK;;;IADwD,oFAAmB;;;ADnBjF,MAAM,2BAA2B;IAKtC,YAAmB,MAAiB,EAAU,oBAAuC,EAClD,IAAI;QADpB,WAAM,GAAN,MAAM,CAAW;QAAU,yBAAoB,GAApB,oBAAoB,CAAmB;QAClD,SAAI,GAAJ,IAAI;QALvC,qBAAgB,GAAa,CAAC,aAAa,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QAM5E,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC5C;IACH,CAAC;IACD,QAAQ,KAAW,CAAC;IAEZ,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAC9E,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,gEAAgE,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IACP,CAAC;;sGA3BU,2BAA2B,yVAM5B,wEAAe;2GANd,2BAA2B;kEAE3B,wEAAY;;;;;QCbzB,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,qHAAuD;QACvD,qHAA8E;QAClF,qEAAe;QAEf,2EACI;QAAA,qHAA4E;QAC5E,qHACK;QACT,qEAAe;QAEf,2EACI;QAAA,qHAAuE;QACvE,uHAAuF;QAC3F,qEAAe;QAEf,4EACI;QAAA,wHAAwE;QACxE,uHAKK;QACL,wHAA2C;QAC/C,qEAAe;QAEf,wHAA2E;QAC3E,wHACK;QACT,4DAAQ;QACR,gFAAqG;QACzG,4DAAM;QACN,iEAAI;;QAlCO,0DAAyB;QAAzB,sFAAyB;QA4BvB,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAGxC,0DAAgC;QAAhC,kJAAgC;;6FDtBtC,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,uCAAuC;gBACpD,SAAS,EAAE,CAAC,sCAAsC,CAAC;aACpD;;sBAOI,oDAAM;uBAAC,wEAAe;wBAJA,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEbzB;AAAA;AAAA;AAA+C;;AAOxC,MAAM,sBAAsB;IALnC;QAMa,WAAM,GAAY,KAAK,CAAC;KACpC;;4FAFY,sBAAsB;sGAAtB,sBAAsB;QCPnC,4EACI;QAAA,yEACI;QAAA,oEAAwB;QACxB,oEAAwB;QACxB,oEAAwB;QAC5B,4DAAM;QACN,0EAAoD;QAAA,+DAAI;QAAA,4DAAO;QACnE,4DAAS;;QAPD,kFAA0B;;6FDOrB,sBAAsB;cALlC,uDAAS;eAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aACjD;gBAEY,MAAM;kBAAd,mDAAK;;;;;;;;;;;;;;AERV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACgB;;;;;;;;;;;;;ICiBhE,iFAAmE;IAAA,uDACnE;IAAA,4DAAa;;;IADD,8EAAkB;IAAqC,0DACnE;IADmE,+FACnE;;;IAOA,iFAAgE;IAAA,uDAAuB;IAAA,4DAAa;;;IAAxF,6EAAiB;IAAmC,0DAAuB;IAAvB,uFAAuB;;ADfpG,MAAM,uBAAuB;IAUhC,YAAoB,eAAgC,EAAU,QAAyB,EAC3E,cAA8B,EAC/B,SAAgD,EACtB,IAAI;QAHrB,oBAAe,GAAf,eAAe,CAAiB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAC3E,mBAAc,GAAd,cAAc,CAAgB;QAC/B,cAAS,GAAT,SAAS,CAAuC;QACtB,SAAI,GAAJ,IAAI;QACrC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC/B,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAClC,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC,CAAC;QAEH,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,kBAAkB,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YAC1F,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YACxF,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClF,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;SACvF;IACL,CAAC;IAED,UAAU;QACF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;;QACJ,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YACzB,IAAI,WAAI,CAAC,kBAAkB,0CAAE,EAAE,KAAI,IAAI,EAAE;gBACrC,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;iBAAM;gBACH,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;SACJ;IACL,CAAC;IAED,YAAY;QACR,IAAI,IAAI,GAAG;YACP,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC3D,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC7C,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YACnD,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACrD,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;SAC5D,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,cAAc;;QACV,IAAI,IAAI,GAAG;YACP,EAAE,QAAE,IAAI,CAAC,kBAAkB,0CAAE,EAAE;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC3D,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC7C,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YACnD,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACzD,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;SACxD,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC;IACN,CAAC;IAED,eAAe;QACX,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;;8FA3GQ,uBAAuB,ooBAapB,wEAAe;uGAblB,uBAAuB;QCZpC,yEACI;QAAA,yEACI;QAAA,wEAAkB;QAAA,uEAAY;QAAA,4DAAK;QACvC,4DAAM;QACN,gEACA;QAAA,0EACI;QAD6B,+IAAU,cAAU,IAAC;QAClD,yEACI;QAAA,oFACI;QAAA,sEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,yEACI;QAAA,qFACI;QAAA,uEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,0EACI;QAAA,qFACI;QAAA,iFACI;QAAA,mIACa;QACjB,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACN,0EACI;QAAA,qFACI;QAAA,iFACI;QAAA,mIAAoG;QACxG,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACN,0EACI;QAAA,qFACI;QAAA,wEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,2EACI;QAAA,8EACyC;QADnB,gJAAS,gBAAY,IAAC;QACH,mEACzC;QAAA,4DAAS;QACT,8EACqC;QAAA,gEAAI;QAAA,4DAAS;QACtD,4DAAM;QACN,2EACI;QAAA,0EAA0B;QAAA,wDAAc;QAAA,4DAAK;QAC7C,0EAAwB;QAAA,wDAAY;QAAA,4DAAK;QAC7C,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QA5CI,0DAA0B;QAA1B,uFAA0B;QAcoC,2DAAa;QAAb,mFAAa;QAQf,0DAAY;QAAZ,kFAAY;QAclE,0DAAgC;QAAhC,6FAAgC;QAGV,0DAAc;QAAd,+EAAc;QAChB,0DAAY;QAAZ,6EAAY;;6FDjCnC,uBAAuB;cALnC,uDAAS;eAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aACjD;;sBAcQ,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEzB/B;AAAA;AAAA;AAAA;AAAA;AAAyC;AACoB;AAEC;;;AAE9D,MAAM,OAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,OAAO,CAAC;AAEnD,MAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;CACjE,CAAC;AAKK,MAAM,WAAW;IAEpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,UAAU,CAAC,IAAY;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,WAAW,CAAC,IAAY;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;;sEAXQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;6FAET,WAAW;cAHvB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACbD;AAAA;AAAO,MAAM,OAAO;CAInB;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEQ;;;;;ICsG9B,qEACI;IAAA,qEAAI;IAAA,uDAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,yEAA4B;IAAA,uDAA6C;IAAA,4DAAK;IAC9E,yEAA4B;IAAA,wDAAyB;IAAA,4DAAK;IAC1D,0EAA4B;IAAA,wDAClB;IAAA,4DAAK;IAOnB,4DAAK;;;;IAbG,0DAAU;IAAV,mFAAU;IACV,0DAA8B;IAA9B,sJAA8B;IAC9B,0DAAwB;IAAxB,gJAAwB;IACA,0DAA6C;IAA7C,qJAA6C;IAC7C,0DAAyB;IAAzB,mHAAyB;IACzB,0DAClB;IADkB,uMAClB;;;IAqCd,sEACI;IAAA,sEACI;IAAA,0EAAiE;IAAA,gEAAK;IAAA,4DAAO;IAC7E,2EACI;IAAA,uDACJ;IAAA,4DAAO;IACX,4DAAM;IACN,sEACI;IAAA,0EAAiE;IAAA,kEAAO;IAAA,4DAAO;IAC/E,2EACI;IAAA,wDACJ;IAAA,4DAAO;IACX,4DAAM;IAEN,uEACI;IAAA,2EAAiE;IAAA,mEAAO;IAAA,4DAAO;IAC/E,4EACI;IAAA,wDACJ;IAAA,4DAAO;IACX,4DAAM;IACN,uEACI;IAAA,2EAAiE;IAAA,sEAAU;IAAA,4DAAO;IAClF,4EACI;IAAA,wDACJ;IAAA,4DAAO;IACX,4DAAM;IACV,4DAAM;;;IAtBM,0DACJ;IADI,kLACJ;IAKI,0DACJ;IADI,mLACJ;IAMI,0DACJ;IADI,oLACJ;IAKI,0DACJ;IADI,kLACJ;;ADpK7B,MAAM,cAAc;IAOzB,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAL5D,eAAU,GAAW,CAAC,CAAC;QACvB,aAAQ,GAAW,CAAC,CAAC;QACrB,kBAAa,GAAW,EAAE,CAAC;QAC3B,SAAI,GAAQ,IAAI,CAAC;IAE8C,CAAC;IAEhE,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAC1D,IAAI,WAAW,EAAE;gBACf,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACzC;SACF;aAAM;YACL,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;SACtE;QAED,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;QAC9B,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC;QAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;IACjD,CAAC;IAED,QAAQ;QACN,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEO,gBAAgB;;QACtB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,+BAA+B,QAAE,IAAI,CAAC,QAAQ,0CAAE,mBAAmB,CAAC,CAAC;QACjF,gBAAI,CAAC,QAAQ,0CAAE,mBAAmB,0CAAE,OAAO,CAAC,CAAC,aAAa,EAAE,EAAE;YAC5D,MAAM,MAAM,GAAG,cAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,KAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,EAAC;YAChE,MAAM,GAAG,GAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,CAAC;YACtC,6DAA6D;YAC7D,QAAQ,IAAI,GAAG,CAAC;YAChB,UAAU,IAAI,MAAM,CAAC,gBAAe;QACtC,CAAC,EAAE;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,0EAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;;4EA9CU,cAAc;8FAAd,cAAc;QCR3B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEAEA;QAAA,yEACI;QAAA,sEACI;QAAA,0EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACN,uEACI;QAAA,2EAAgD;QAAA,wDAEhD;QAAA,4DAAO;QACX,4DAAM;QACN,uEACI;QAAA,2EAAgD;QAAA,wDACb;QAAA,4DAAO;QAC9C,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,qEACA;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,4EACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,wEACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QAEN,2EACI;QAAA,4EACI;QAAA,4EACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,sEACJ;QAAA,4DAAO;QACP,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,qEACA;QAAA,2EACI;QAAA,2EACI;QAAA,4EAAgD;QAAA,sEAAU;QAAA,4DAAO;QACjE,wDACJ;;QAAA,4DAAM;QAEN,2EACI;QAAA,4EAAgD;QAAA,qEAAS;QAAA,4DAAO;QAChE,wDACJ;;QAAA,4DAAM;QAEN,2EACI;QAAA,4EAAgD;QAAA,wEAAY;QAAA,4DAAO;QACnE,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QACA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,8EAAkB;QAAA,4DAAK;QACvC,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,yEAAa;QAAA,4DAAK;QAClC,0EAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAM/B,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,4GAcK;QACL,sEACI;QAAA,0EAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC1B,0EAA4B;QAAA,wDAAoC;QAAA,4DAAK;QACrE,0EAA4B;QAAA,wDAAuC;QAAA,4DAAK;QAC5E,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QACR,2EAAgD;QAAA,wFAA4B;QAAA,4DAAO;QACnF,4EACI;QAAA,wDACJ;QAAA,4DAAO;QACP,iEACA;QACA,2EACI;QAAA,2EACI;QAAA,uEACI;QAAA,2EAAiE;QAAA,yEAAa;QAAA,4DAAO;QACrF,4EACI;QAAA,kEACJ;QAAA,4DAAO;QACX,4DAAM;QACN,uEACI;QAAA,2EAAiE;QAAA,oEAAQ;QAAA,4DAAO;QAChF,4EACI;QAAA,gEACJ;QAAA,4DAAO;QACX,4DAAM;QACN,kEAEA;QAAA,gHA0BM;QACV,4DAAM;QAEN,4EACI;QAAA,sEACA;QAAA,4EACI;QAAA,4EACI;QAAA,6EAAgD;QAAA,0EAAa;QAAA,4DAAO;QACpE,yDACJ;QAAA,4DAAM;QACN,4EACI;QAAA,6EAAgD;QAAA,8EAAiB;QAAA,4DAAO;QACxE,yDAC6D;QAAA,4DAAM;QAE/D,4EACI;QAAA,6EAAgD;QAAA,+EAAkB;QAAA,4DAAO;QACzE,6EACI;QAAA,yDAGJ;QAAA,4DAAO;QACX,4DAAM;QACN,4EACI;QAAA,6EAAgD;QAAA,+EAAkB;QAAA,4DAAO;QACzE,6EACI;QAAA,yDACJ;QAAA,4DAAO;QACX,4DAAM;QAEN,kEAAI;QAAA,kEAAI;QAAA,kEACR;QAAA,4EACI;QAAA,4EACI;QAAA,6EAAgD;QAAA,iFACnC;QAAA,4DAAO;QACxB,4DAAM;QACN,4EACI;QAAA,6EAC8C;QAAA,yDAAkC;QAAA,4DAAO;QAC3F,4DAAM;QACV,4DAAM;QACd,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,kEACA;QAAA,4EACI;QAAA,6EAA+B;QAAA,iGAAoC;QAAA,4DAAO;QAC9E,4DAAM;QACN,4EACI;QAAA,+EAA6B;QAArB,wIAAS,cAAU,IAAC;QAAC,kEAAK;QAAA,4DAAS;QAC/C,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAxOd,4DACI;;QAUgC,2DACJ;QADI,0KACJ;QAGgD,0DAEhD;QAFgD,kRAEhD;QAGgD,0DACb;QADa,mRACb;QAY/B,0DACJ;QADI,mLACJ;QAOI,0DACJ;QADI,4KACJ;QAQI,0DACJ;QADI,kLACJ;QAOI,0DACJ;QADI,wOACJ;QASI,0DACJ;QADI,wNACJ;QAII,0DACJ;QADI,+MACJ;QAKQ,0DACJ;QADI,6HACJ;QAwBa,2DAAkC;QAAlC,mIAAkC;QAiBvB,0DAAoC;QAApC,qGAAoC;QACpC,0DAAuC;QAAvC,sHAAuC;QAM3E,0DACJ;QADI,mGACJ;QAmBc,2DAA8B;QAA9B,8FAA8B;QAkC5B,0DACJ;QADI,sKACJ;QAGI,0DAC6D;QAD7D,gPAC6D;QAKjD,0DAGJ;QAHI,iXAGJ;QAKI,0DACJ;QADI,2KACJ;QAWkD,2DAAkC;QAAlC,0KAAkC;;6FD5MnH,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACE;AACL;AACuE;;;;;;;;;;;;;;;ICDzH,6EACE;IADsE,iVAA+B;IACrG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAeX,4EAAwE;IAAA,6EAAkB;IAAA,4DAAY;;;IACtG,4EAAoE;IAAA,2EAAgB;IAAA,4DAAY;;;IAO9F,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,mJAAmC;;;IAI3E,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEAA2D;IAAA,uDAAoD;IAAA,4DAAK;;;IAAzD,0DAAoD;IAApD,+HAAoD;;;IAI/G,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEAA2D;IAAA,uDAAoD;IAAA,4DAAK;;;IAAzD,0DAAoD;IAApD,+HAAoD;;;IAI/G,yEAA8D;IAAA,qEAAU;IAAA,4DAAK;;;IAC7E,yEAAgE;IAAA,uDAAwD;IAAA,4DAAK;;;IAA7D,0DAAwD;IAAxD,mIAAwD;;;IAIxH,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;IACpD,yEACE;IAAA,uDACF;;IAAA,4DAAK;;;IADH,0DACF;IADE,+KACF;;;IAIA,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAyC;;IAAA,4DAAK;;;IAA9C,0DAAyC;IAAzC,8KAAyC;;;IAIjF,yEAA6D;IAAA,iEAAM;IAAA,4DAAK;;;;IACxE,yEACE;IAAA,6EACE;IADM,sXAAgC;IACtC,2EAAU;IAAA,kEAAO;IAAA,4DAAW;IAC9B,4DAAS;IACX,4DAAK;;;IACL,oEAA2C;;;IAG7C,oEAA2E;;;IAC3E,oEAAkE;;;AD3D/D,MAAM,6BAA6B;IAexC,YAAoB,MAAiB,EAAU,oBAA0C;QAArE,WAAM,GAAN,MAAM,CAAW;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAdzF,qBAAgB,GAAa,CAAC,cAAc,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAOxH,UAAK,GAAG,IAAI,wDAAS,CAAC;YACpB,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,GAAG,EAAE,IAAI,0DAAW,EAAE;SACvB,CAAC,CAAC;IAI0F,CAAC;IAE9F,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,oBAAoB,CAAC,uCAAuC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClF,GAAG,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;gBACpB,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACjC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,UAAU;QACR,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9C,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAErC,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAClC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;YAC9B,sFAAsF;YACtF,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;gBAC/C,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC7D,OAAO,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,OAAO;YAC3D,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,UAAU,EAAE;YACd,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,eAAC,+BAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,0CAAE,YAAY,0CAAE,WAAW,GAAG,OAAO,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,OAAM,CAAC,CAAC,IAAC,CAAC;SAC/I;QACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAEO,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,GAAG,CAAC,KAAa;QACf,KAAK,CAAC,GAAG,CAAC;QACV,2CAA2C;QAC3C,wFAAwF;IAC1F,CAAC;IAED,aAAa,CAAC,aAAa;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0IAAmC,EAAE;YACtE,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;SAC9B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;;0GAxFU,6BAA6B;6GAA7B,6BAA6B;kEAG7B,wEAAY;;;;;QChBzB,yEACE;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,0EAAe;QAAA,4DAAY;QACtC,2EACA;QAD4B,qMAAwB,4FAAU,gBAAY,IAAtB;QAApD,4DACA;QAAA,+HAES;QACX,4DAAiB;QACnB,4DAAM;QAEN,iFACE;QAAA,0FACE;QAAA,sEACA;QAAA,uEACF;QAAA,4DAAuB;QACvB,uFAAwE;QACxE,4FACE;QAD+B,qKAAS,eAAW,IAAC;QACpD,gFAAkC;QAAA,iEAAK;QAAA,4DAAW;QACpD,4DAAwB;QACxB,8FAAuD;QAEvD,wIAAsG;QACtG,wIAAgG;QAClG,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,6EACE;QAAA,6EACE;QAAA,0HAAmD;QACnD,0HAAgF;QAClF,qEAAe;QAEf,6EACE;QAAA,0HAAyE;QACzE,0HAAoH;QACtH,qEAAe;QAEf,6EACE;QAAA,0HAAyE;QACzE,0HAAoH;QACtH,qEAAe;QAEf,6EACE;QAAA,0HAA6E;QAC7E,0HAA6H;QAC/H,qEAAe;QAEf,6EACE;QAAA,0HAAoD;QACpD,0HAEK;QACP,qEAAe;QAEf,6EACE;QAAA,0HAAmD;QACnD,0HAAsF;QACxF,qEAAe;QAEf,6EACE;QAAA,0HAAwE;QACxE,0HAIK;QACL,0HAA2C;QAC7C,qEAAe;QAEf,0HAA2E;QAC3E,0HAAkE;QACpE,4DAAQ;QACR,gFAAqG;QACvG,4DAAM;QACN,iEAAI;;;QAxE8B,0DAAwB;QAAxB,mFAAwB;QAC3C,0DAAgB;QAAhB,gFAAgB;QAOL,0DAAmB;QAAnB,gFAAmB;QAIR,0DAAc;QAAd,oEAAc;QAMnC,0DAA0D;QAA1D,0HAA0D;QAC1D,0DAAsD;QAAtD,sHAAsD;QAK7D,0DAAyB;QAAzB,sFAAyB;QA2CzB,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAEtC,0DAAgC;QAAhC,mJAAgC;;6FD7DpC,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;mNAI0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEhBzB;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGqB;;;AAKvD,MAAM,oBAAoB;IAI7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,gBAAgB,CAAC;IAG9D,CAAC;IAED,mBAAmB,CAAC,OAAY;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,oBAAoB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,gCAAgC,CAAC,UAAe;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,aAAa,UAAU,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,iCAAiC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,WAAW,CAAC,CAAC;IACrD,CAAC;IAED,uCAAuC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,mBAAmB,CAAC,CAAC;IAC7D,CAAC;IAED,mBAAmB,CAAC,KAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,CAAC;IAED,kBAAkB,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,YAAY,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACrF,CAAC;IAED,2BAA2B,CAAC,EAAU;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,YAAY,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;;wFAzCQ,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFjB,MAAM;6FAET,oBAAoB;cAHhC,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACE;AAGuB;;;;;;;;;;;;;ICWxE,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;IAClD,yEAAwC;IAAA,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,kGAAwB;;;IAKhE,yEAAuC;IAAA,wEAAY;IAAA,4DAAK;;;IACxD,yEAAwC;IAAA,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,mGAAwB;;;IAIhE,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;;IAClD,yEAEI;IAAA,6EACI;IAAA,+EAA6B;IAAA,oEAAS;IAAA,4DAAW;IAErD,4DAAS;IACT,mFACI;IAAA,sEACI;IAAA,6EAEI;IAFI,6WAAgC;IAEpC,0EACI;IACA,+EAAuB;IAAA,gEAAI;IAAA,4DAAW;IACtC,2EAAiC;IAAA,mEAAO;IAAA,4DAAM;IAClD,4DAAM;IACV,4DAAS;IACT,iEACA;IAAA,8EACQ;IADA,8WAAgC;IAChC,2EACI;IACA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAAgC;IAAA,mEAAO;IAAA,4DAAM;IACjD,4DAAM;IAEd,4DAAS;IACT,iEAEJ;IAAA,4DAAM;IACV,4DAAW;IAGf,4DAAK;;;IA7B8B,0DAA0B;IAA1B,mFAA0B;;;IAiCjE,oEAA4D;;;IAC5D,oEAAkE;;;ADpDnE,MAAM,oBAAoB;IAK7B,YAAmB,MAAiB,EAAU,eAAgC,EAAU,cAA8B;QAAnG,WAAM,GAAN,MAAM,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAHtH,qBAAgB,GAAa,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;IAIlE,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,UAAU;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,aAAa;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;SAChC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/C,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,KAAK;QACf,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACjD,QAAQ,CAAC,EAAE;YACP,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACX,CAAC;;wFA3DQ,oBAAoB;oGAApB,oBAAoB;kEAClB,wEAAY;;;;;QCd3B,sEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,8EACJ;QADkB,iJAAS,uBAAmB,IAAC;QAA3C,4DACJ;QAAA,4DAAiB;QACjB,yEACI;QAAA,4EAA+F;QAAvF,4IAAS,gBAAY,IAAC;QAAiE,wEAC/F;QAAA,4DAAS;QACb,4DAAM;QAEV,4DAAM;QAEN,yEACI;QAAA,4EAEI;QACA,4EACI;QAAA,gHAAkD;QAClD,gHAAqE;QACzE,qEAAe;QAGf,6EACI;QAAA,gHAAwD;QACxD,gHAAqE;QACzE,qEAAe;QAEf,6EACI;QAAA,gHAAkD;QAClD,iHA+BK;QACT,qEAAe;QAGf,iHAA4D;QAC5D,iHAAkE;QACtE,4DAAQ;QACR,gFAAqG;QACzG,4DAAM;QACN,iEAAI;;QAxDO,2DAAyB;QAAzB,sFAAyB;QAmDvB,2DAAiC;QAAjC,iGAAiC;QACb,0DAA0B;QAA1B,kGAA0B;QAExC,0DAAgC;QAAhC,kJAAgC;;6FDtDtC,oBAAoB;cALhC,uDAAS;eAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC9C;0SAE4B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEd3B;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,iBAAiB;IAI1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,aAAa,CAAC;IAG3D,CAAC;IAED,gBAAgB,CAAC,OAAY;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,6BAA6B,CAAC,UAAe;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,qBAAqB,UAAU,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,+BAA+B;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,YAAY,CAAC,CAAC;IACtD,CAAC;IAED,oCAAoC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,mBAAmB,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,KAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,WAAW,CAAC,CAAC;IACrD,CAAC;IAED,0BAA0B;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,UAAU,CAAC,CAAC;IACpD,CAAC;IAED,YAAY,CAAC,WAAmB;QAC5B,MAAM,IAAI,GAAG,EAAE,MAAM,EAAE,EAAC,aAAa,EAAE,WAAW,EAAC,EAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,aAAa,EAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED,kBAAkB,CAAC,WAAW,EAAE,KAAa,EAAE,GAAW;QACtD,MAAM,IAAI,GAAG,EAAE,MAAM,EAAE,EAAC,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAC,EAAC,CAAC;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,qBAAqB,EAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,gBAAgB,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,CAAC;IAED,kBAAkB,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,YAAY,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACrF,CAAC;IAED,aAAa,CAAC,YAAiB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,YAAY,EAAE,CAAC,CAAC;IAC5D,CAAC;;kFA3DQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFd,MAAM;6FAET,iBAAiB;cAH7B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,YAAY;IAUvB,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAR5D,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,uBAAkB,GAAG,KAAK,CAAC;IAMqC,CAAC;IAEjE,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QAExD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YACxE,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC5D,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAC3D;IACH,CAAC;;wEAtBU,YAAY;4FAAZ,YAAY;QCTzB,yEACE;QAAA,2EAA+B;QACjC,4DAAM;;6FDOO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;AAOzC,MAAM,mBAAmB;IAE5B;IACA,CAAC;IAED,QAAQ;IACR,CAAC;;sFANQ,mBAAmB;mGAAnB,mBAAmB;QCPhC,yEACI;QAAA,uEAAiC;QAAA,wEAAa;QAAA,4DAAI;QAClD,4EAEI;QAAA,qEAAyC;QAC7C,4DAAS;QAET,yEACI;QAAA,wEACI;QAAA,wEACI;QAAA,uEACI;QAAA,uEAAW;QAAA,4DAAI;QACvB,4DAAK;QAEL,yEACI;QAAA,wEAA+C;QAAA,oEAAQ;QAAA,4DAAI;QAC/D,4DAAK;QAEL,yEACI;QAAA,wEAAiD;QAAA,iEAAK;QAAA,4DAAI;QAC9D,4DAAK;QAEL,yEACI;QAAA,yEAA0C;QAAA,uEAAW;QAAA,4DAAI;QAC7D,4DAAK;QAEL,yEACI;QAAA,yEAAmD;QAAA,yEAAY;QAAA,4DAAI;QACvE,4DAAK;QAEL,yEACI;QAAA,yEAAgD;QAAA,qEAAQ;QAAA,4DAAI;QAChE,4DAAK;QAEL,yEACI;QAAA,yEAAgD;QAAA,qEAAQ;QAAA,4DAAI;QAChE,4DAAK;QACL,yEACI;QAAA,yEAA+C;QAAA,oEAAO;QAAA,4DAAI;QAC9D,4DAAK;QACL,yEACI;QAAA,yEAAgD;QAAA,qEAAQ;QAAA,4DAAI;QAChE,4DAAK;QACT,4DAAK;QAET,4DAAM;QACV,4DAAM;;6FDvCO,mBAAmB;cAL/B,uDAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC9C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AAEC;;;;AAMzD,MAAM,eAAe;IAIxB,YAAoB,IAAgB,EAAU,YAAiC;QAA3D,SAAI,GAAJ,IAAI,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAFvE,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,WAAW,CAAC;QAKzD,WAAM,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAF1F,CAAC;IAID,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,cAAc,CAAC,QAAgB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACjF,CAAC;IAED,cAAc,CAAC,KAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,mBAAmB,CAAC,QAAgB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,QAAQ,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,iBAAiB,CAAC,YAAoB;QAClC,MAAM,IAAI,GAAG,EAAE,MAAM,EAAE,EAAE,cAAc,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;QAChF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,eAAe,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;;8EApCQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;;ICkBlC,yEACE;IAAA,uDACA;IAEF,4DAAK;;;;IAHH,0DACA;IADA,8GACA;;;IAHJ,wEACE;IAAA,2HAIK;IACP,4DAAK;;;IALkB,0DAAU;IAAV,mFAAU;;ADTtC,MAAM,kBAAkB;IAI3B,YACY,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAJ1B,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,EAAE,CAAC;IAKb,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QACV,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;QACD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACf,IAAI,CAAC,KAAK,EAAE,EAAE;gBACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACxB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;oFAvBQ,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEAEE;QAAA,+EAA2D;QAE3D,yEACE;QAAA,mFAAmE;QAEnE,gFAA6D;QAC7D,yEACE;QAAA,yEACE;QAAA,yEACE;QAKA,0MAQc;QAEhB,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EAEE;QAkCA,4EAA+B;QACjC,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FD7DO,kBAAkB;cAL9B,uDAAS;eAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;AACL;AAGjB;;;;;;;;;ICJ/C,yEACI;IAAA,yEAAkB;IAAA,uEAAY;IAAA,4DAAK;IACvC,4DAAM;;;IACN,yEACI;IAAA,yEAAkB;IAAA,0EAAe;IAAA,4DAAK;IAC1C,4DAAM;;ADMH,MAAM,uBAAuB;IAQlC,YAAoB,eAAgC,EAC3C,SAAgD,EAEtB,IAAI;QAHnB,oBAAe,GAAf,eAAe,CAAiB;QAC3C,cAAS,GAAT,SAAS,CAAuC;QAEtB,SAAI,GAAJ,IAAI;QAPvC,aAAQ,GAAa,IAAI,+DAAQ,EAAE,CAAC;QAQlC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACpC,CAAC;QAEF,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/F,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAChG;IACH,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,IAAI,WAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,EAAE,KAAI,IAAI,EAAE;gBAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;SACF;IACH,CAAC;IAED,YAAY;;QACV,IAAI,IAAI,GAAG;YACT,EAAE,QAAE,IAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,EAAE;YACpC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC3D,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;SAC5D;QACD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACxD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;;QACZ,IAAI,IAAI,GAAG;YACT,EAAE,QAAE,IAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,EAAE;YACpC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC3D,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;SAC5D;QACD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACxD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;QACxD,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC;;8FA7EU,uBAAuB,8VAWxB,wEAAe;uGAXd,uBAAuB;QCZpC,yEACI;QAAA,mHAEM;QACN,mHAEM;QACN,gEAEA;QAAA,0EACI;QAD6B,+IAAU,cAAU,IAAC;QAClD,yEACI;QAAA,oFACI;QAAA,sEACJ;QAAA,4DAAiB;QACrB,4DAAM;QAEN,yEACI;QAAA,oFACI;QAAA,uEACJ;QAAA,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,6EACuB;QAD4D,gJAAS,gBAAY,IAAC;QAClF,kEAAM;QAAA,4DAAS;QACtC,6EACqC;QAAA,gEAAI;QAAA,4DAAS;QACtD,4DAAM;QACN,0EACI;QAAA,0EAA0B;QAAA,wDAAc;QAAA,4DAAK;QAC7C,0EAAwB;QAAA,wDAAY;QAAA,4DAAK;QAC7C,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QAjCyB,0DAAuC;QAAvC,kJAAuC;QAGvC,0DAAuC;QAAvC,kJAAuC;QAK5D,0DAA0B;QAA1B,uFAA0B;QAiBpB,2DAAgC;QAAhC,6FAAgC;QAGV,0DAAc;QAAd,+EAAc;QAChB,0DAAY;QAAZ,6EAAY;;6FDlBnC,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;sBAYI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEvB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;AAUlE,MAAM,2BAA2B;IAMtC,YAAoB,iBAAoC,EAC/C,SAAoD,EAC1B,IAAI;QAFnB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC/C,cAAS,GAAT,SAAS,CAA2C;QAC1B,SAAI,GAAJ,IAAI;QALvC,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,iBAAY,GAAG,EAAE,CAAC;QAKhB,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,EAAE,EAAE,IAAI,0DAAW,EAAE;YACrB,YAAY,EAAE,IAAI,0DAAW,EAAE;YAC/B,cAAc,EAAE,IAAI,0DAAW,EAAE;YACjC,SAAS,EAAE,IAAI,0DAAW,EAAE;YAC5B,OAAO,EAAE,IAAI,0DAAW,EAAE;SAC3B,CAAC,CAAC;QAEH,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACjG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SAC7F;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAC1B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,EAAE;gBAC9C,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;SACF;IACH,CAAC;IAED,qBAAqB;QACnB,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,MAAM,SAAS,GAAW,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE5E,IAAI,SAAS,GAAG,CAAC,EAAE;YACjB,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACvC,OAAO;SACR;aAAM,IAAI,SAAS,IAAI,CAAC,EAAE;YACzB,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACvC,OAAO;SACR;aAAM,IAAI,SAAS,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE;YACvE,MAAM,GAAG,MAAM,CAAC;SACjB;aAAM,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE;YACrE,MAAM,GAAG,KAAK,CAAC;SAChB;aAAM;YACL,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAChD,OAAO;SACR;QAED,IAAI,SAAS,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE;YAChE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC5C,IAAI,CAAC,YAAY,GAAG,wBAAwB,CAAC;gBAC7C,OAAO;aACR;SACF;QAED,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK;YACtC,SAAS,EAAE,SAAS;YACpB,MAAM,EAAE,MAAM;YACd,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK;YAC9D,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK;SACjD,CAAC;QAEF,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5D,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,2CAA2C;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;sGAjFU,2BAA2B,mWAQ5B,wEAAe;2GARd,2BAA2B;QCZxC,yEAEI;QAAA,0EACI;QAD4B,mJAAU,cAAU,IAAC;QACjD,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,wEAAa;QAAA,4DAAY;QACpC,sEACJ;QAAA,4DAAiB;QACjB,gEACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,oFACI;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,uEACJ;QAAA,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,uEACJ;QAAA,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QAEN,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,uFACwB;QACxB,sFAA0C;QAC9C,4DAAiB;QAEjB,2EACI;QAAA,4EAA0B;QAAA,wDAAgB;QAAA,4DAAO;QACrD,4DAAM;QAEN,2EACI;QAAA,8EACyC;QADnB,oJAAS,gBAAY,IAAC;QACH,mEACzC;QAAA,4DAAS;QACT,8EAC6D;QAAA,iEAC7D;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAO;QAEX,4DAAM;;;QA/CI,0DAAyB;QAAzB,sFAAyB;QA2BP,2DAAyB;QAAzB,8EAAyB;QACR,0DAAe;QAAf,oEAAe;QAMtB,0DAAgB;QAAhB,iFAAgB;QAOlC,0DAA+B;QAA/B,4FAA+B;;6FD/BtC,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,gDAAgD;gBAC7D,SAAS,EAAE,CAAC,+CAA+C,CAAC;aAC7D;;sBASI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEpB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACT;AACS;AACuB;AACxB;AACgB;AACd;AACS;AACb;AAC8B;AACT;AACyD;AAC1E;AACS;AACS;AACH;AACzB;AACM;AAC0B;AACnC;AACgC;AACc;AACnC;AACyC;AACH;AACA;AACN;AACI;AACK;AACN;AACA;AACM;AACC;AACX;AACM;AACxB;AACW;AACM;AACS;AAC6D;AACpG;AAC6F;AACe;AAExE;AACZ;AACsC;AACT;AACpB;AACjC;AAC6B;AAC3B;AAC+B;;;AAkEjF,MAAM,SAAS;IACpB,YAAoB,WAA8B;QAA9B,gBAAW,GAAX,WAAW,CAAmB;QAChD,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,aAAa;IAC/C,CAAC;;wFAHU,SAAS,cAFR,2DAAY;4IAEb,SAAS,8IAHT,EAAE,YAnBJ;YACP,0DAAW;YACX,oEAAkB;YAClB,uEAAc;YACd,qEAAa;YACb,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,gFAAkB;YAClB,qEAAgB;YAChB,4FAAuB;YACvB,kEAAmB;YACnB,oFAAqB;YACrB,sEAAc;YACd,oEAAS;YACT,mEAAmB;YACnB,6DAAY;YACZ,qEAAa;SACd;mIAIU,SAAS,mBA9DlB,2DAAY;QACZ,yGAAsB;QACtB,mGAAoB;QACpB,8GAAuB;QACvB,gGAAsB;QACtB,6GAAuB;QACvB,6GAAuB;QACvB,6GAAuB;QACvB,uFAAmB;QACnB,gJAAqB;QACrB,gLAAmC;QACnC,iKAA6B;QAC7B,yFAAkB;QAClB,uGAAsB;QACtB,qGAAsB;QACtB,sEAAc;QACd,+EAAiB;QACjB,wFAAkB;QAClB,qFAAiB;QACjB,4FAAmB;QACnB,0GAAsB;QACtB,0GAAsB;QACtB,oGAAoB;QACpB,wGAAqB;QACrB,6GAAuB;QACvB,uGAAqB;QACrB,uGAAqB;QACrB,iFAAc;QACd,4FAAmB;QACnB,kGAAoB;QACpB,2GAAuB;QACvB,wKAA2B;QAC3B,wGAAsB;QACtB,4FAAkB;QAClB,kIAA8B;QAC9B,yHAA2B;QAC3B,qGAAuB;QACvB,qGAAuB;QACvB,iGAAiB,aAGjB,0DAAW;QACX,oEAAkB;QAClB,uEAAc;QACd,qEAAa;QACb,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,gFAAkB;QAClB,qEAAgB;QAChB,4FAAuB;QACvB,kEAAmB;QACnB,oFAAqB;QACrB,sEAAc;QACd,oEAAS;QACT,mEAAmB;QACnB,6DAAY;QACZ,qEAAa;6FAKJ,SAAS;cAhErB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,yGAAsB;oBACtB,mGAAoB;oBACpB,8GAAuB;oBACvB,gGAAsB;oBACtB,6GAAuB;oBACvB,6GAAuB;oBACvB,6GAAuB;oBACvB,uFAAmB;oBACnB,gJAAqB;oBACrB,gLAAmC;oBACnC,iKAA6B;oBAC7B,yFAAkB;oBAClB,uGAAsB;oBACtB,qGAAsB;oBACtB,sEAAc;oBACd,+EAAiB;oBACjB,wFAAkB;oBAClB,qFAAiB;oBACjB,4FAAmB;oBACnB,0GAAsB;oBACtB,0GAAsB;oBACtB,oGAAoB;oBACpB,wGAAqB;oBACrB,6GAAuB;oBACvB,uGAAqB;oBACrB,uGAAqB;oBACrB,iFAAc;oBACd,4FAAmB;oBACnB,kGAAoB;oBACpB,2GAAuB;oBACvB,wKAA2B;oBAC3B,wGAAsB;oBACtB,4FAAkB;oBAClB,kIAA8B;oBAC9B,yHAA2B;oBAC3B,qGAAuB;oBACvB,qGAAuB;oBACvB,iGAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,0DAAW;oBACX,oEAAkB;oBAClB,uEAAc;oBACd,qEAAa;oBACb,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,gFAAkB;oBAClB,qEAAgB;oBAChB,4FAAuB;oBACvB,kEAAmB;oBACnB,oFAAqB;oBACrB,sEAAc;oBACd,oEAAS;oBACT,mEAAmB;oBACnB,6DAAY;oBACZ,qEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACE;AAE0B;;;;;;;;;;;;ICW3E,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,mGAAyB;;;IAKjE,yEAAuC;IAAA,wEAAY;IAAA,4DAAK;;;IACxD,yEAAwC;IAAA,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,mGAAyB;;;IAIjE,yEAAuC;IAAA,mEAAO;IAAA,4DAAK;;;;IACnD,yEAEI;IAAA,6EACN;IAAA,+EAA6B;IAAA,oEAAS;IAAA,4DAAW;IAEnD,4DAAS;IACD,mFACI;IAAA,sEACI;IAAA,6EACI;IADI,+WAAiC;IACrC,0EACI;IACA,+EAAuB;IAAA,gEAAI;IAAA,4DAAW;IACtC,2EAAiC;IAAA,mEAAO;IAAA,4DAAM;IAClD,4DAAM;IACb,4DAAS;IACN,iEACA;IAAA,8EACI;IADI,gXAAiC;IACrC,2EACI;IACA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAAgC;IAAA,mEAAO;IAAA,4DAAM;IACjD,4DAAM;IACV,4DACC;IAAA,iEACL;IAAA,4DAAM;IACV,4DAAW;IAEf,4DAAK;;;IAzB8C,0DAA0B;IAA1B,mFAA0B;;;IA2BjF,oEAA4D;;;IAC5D,oEAAkE;;;AD7CnE,MAAM,qBAAqB;IAKhC,YAAoB,eAAgC,EAAS,MAAiB;QAA1D,oBAAe,GAAf,eAAe,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAW;QAH9E,qBAAgB,GAAa,CAAC,cAAc,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;IAGc,CAAC;IAEnF,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,cAAc;QAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE;SAC/B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC7C,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACrD,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;YAClD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;;0FA1DU,qBAAqB;qGAArB,qBAAqB;kEACrB,wEAAY;;;;;QCdzB,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,2EACJ;QADoB,kJAAS,uBAAmB,IAAC;QAA7C,4DACJ;QAAA,4DAAiB;QACjB,sEACI;QAAA,4EAA8F;QAAtF,6IAAS,gBAAY,IAAC;QAAgE,wEAAa;QAAA,4DAAS;QACxH,4DAAM;QAEV,4DAAM;QAEN,yEACI;QAAA,2EAEI;QACA,4EACI;QAAA,iHAAmD;QACnD,iHAAsE;QAC1E,qEAAe;QAGf,4EACI;QAAA,iHAAwD;QACxD,iHAAsE;QAC1E,qEAAe;QAEf,6EACI;QAAA,iHAAmD;QACnD,kHA2BK;QACT,qEAAe;QACf,kHAA4D;QAC5D,kHAAkE;QACtE,4DAAQ;QACR,gFAAqG;QACzG,4DAAM;;QAjDe,0DAAyB;QAAzB,sFAAyB;QA6ClB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAEhD,0DAAgC;QAAhC,kJAAgC;;6FD/CtC,qBAAqB;cANjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;+MAG0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEdzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEY;AACL;AACpB;AAKkB;;;;;;;;;;;;;;;;;;;ICTlE,0EACI;IAAA,0EACI;IAAA,wEACI;IAAA,yEAAQ;IAAA,6FAAkC;IAAA,4DAAS;IACvD,4DAAI;IACR,4DAAM;IACV,4DAAM;;;IASc,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFgD,0FAA6B;IACtF,0DACJ;IADI,mGACJ;;;IAUA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFkD,4FAA+B;IAC1F,0DACJ;IADI,qGACJ;;;IAgCJ,yEAA6D;IAAA,gEAAK;IAAA,4DAAK;;;IACvE,yEAAgF;IAAA,uDAAW;IAAA,4DAAK;;;IAAhB,0DAAW;IAAX,sFAAW;;;IAC3F,yEAAsC;IAAA,yEAAQ;IAAA,gEAAK;IAAA,4DAAS;IAAA,4DAAK;;;IAIjE,yEAA6D;IAAA,iEAAM;IAAA,4DAAK;;;;IACxE,yEACI;IAAA,6EACI;IADI,4VAA0B;IAC9B,+EAAgC;IAAA,iEAAM;IAAA,4DAAW;IAErD,4DAAS;IACb,4DAAK;;;IACL,oEAA2C;;;IAI3C,yEAAsC;IAAA,6EAAkB;IAAA,4DAAK;;;IAC7D,yEAAuC;IAAA,uDAA6C;IAAA,4DAAK;;;IAAlD,0DAA6C;IAA7C,+JAA6C;;;IACpF,oEAA2C;;;IAI3C,yEAA8D;IAAA,wEAAa;IAAA,4DAAK;;;IAQxE,4EACI;IAAA,uDACJ;;IAAA,4DAAY;;;;IADR,0DACJ;IADI,sRACJ;;;IACA,4EACI;IAAA,iFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,iGACJ;IAAA,4DAAY;;;;IAfpB,yEACI;IAAA,qFACI;IAAA,4EACA;IADkF,uXAAuC;IAAzH,4DACA;IAAA,2EAAgB;IAAA,uEAAO;IAAA,4DAAO;IAI9B,kIAEY;IACZ,kIAEY;IACZ,kIAEY;IAChB,4DAAiB;IACrB,4DAAK;;;;;;;IAjB6E,oFAAuB;IAOrF,0DAAgD;IAAhD,oJAAgD;IAGhD,0DAA2C;IAA3C,+IAA2C;IAG3C,0DAA2C;IAA3C,+IAA2C;;;IAK/D,oEAA2C;;;IAI3C,yEAA8D;IAAA,mEAAQ;IAAA,4DAAK;;;IAInE,4EACI;IAAA,uDACJ;IAAA,4DAAY;;;;IADR,0DACJ;IADI,2LACJ;;;IACA,4EACI;IAAA,oFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,uGACJ;IAAA,4DAAY;;;;IAXpB,yEACI;IAAA,qFACI;IAAA,4EACA;IADoE,8XAA4C;IAAhH,4DACA;IAAA,kIAEY;IACZ,kIAEY;IACZ,kIAEY;IAChB,4DAAiB;IACrB,4DAAK;;;;;;;IAb6E,oFAAuB;IAGrF,0DAAqD;IAArD,yJAAqD;IAGrD,0DAAgD;IAAhD,oJAAgD;IAGhD,0DAAgD;IAAhD,oJAAgD;;;IAKpE,yEACI;IAAA,qEAAI;IAAA,oEAAG;IAAA,uDAAc;IAAA,4DAAI;IAAA,4DAAK;IAClC,4DAAK;;;IADM,0DAAc;IAAd,iFAAc;;;IA6BzB,yEAA8D;IAAA,iEAAM;IAAA,4DAAK;;;IACzE,yEACI;IAAA,uDACJ;;IAAA,4DAAK;;;;IADD,0DACJ;IADI,8SACJ;;;IACA,yEACI;IAAA,qEAAI;IAAA,oEAAG;IAAA,uDAAkC;;IAAA,4DAAI;IAAA,4DAAK;IACtD,4DAAK;;;IADM,0DAAkC;IAAlC,4JAAkC;;;IAIjD,oEAA2E;;;IAC3E,oEAAkE;;;IAClE,oEAA4D;;;IA0DpE,0EACI;IAAA,yEAAkE;IAAA,wEAAa;IAAA,4DAAK;IACpF,6EACI;IADmD,4LAAS,kBAAc,aAAa,CAAC,IAAC;IACzF,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;IACN,0EACI;IAAA,wEAA6B;IAAA,oGAAyC;IAAA,4DAAI;IAE1E,0EACI;IAAA,2EACI;IAAA,qEAAG;IAAA,wEAAY;IAAA,4DAAI;IACnB,qEAAG;IAAA,4EAA2D;IAAA,wDAAsB;IAAA,4DAAO;IAAA,4DAAI;IACnG,4DAAM;IACN,2EACI;IAAA,qEAAG;IAAA,uEAAW;IAAA,4DAAI;IAClB,qEAAG;IAAA,wDAA2B;IAAA,4DAAI;IACtC,4DAAM;IACN,2EACI;IAAA,qEAAG;IAAA,0EAAc;IAAA,4DAAI;IACrB,qEAAG;IAAA,wDAAsB;IAAA,4DAAI;IACjC,4DAAM;IACV,4DAAM;IAEN,qEACI;IAAA,4EAA0B;IAAA,sGAA0C;IAAA,4DAAO;IAC/E,4DAAI;IAER,4DAAM;IACN,2EACI;IAAA,8EAAgG;IAAxC,6LAAS,kBAAc,cAAc,CAAC,IAAC;IAAC,kEAAM;IAAA,4DAAS;IAC/G,8EAA+F;IAApC,6LAAS,gBAAY,YAAY,CAAC,IAAC;IAAC,8DAAE;IAAA,4DAAS;IAC9G,4DAAM;;;IApBoE,2DAAsB;IAAtB,8HAAsB;IAIjF,0DAA2B;IAA3B,iJAA2B;IAI3B,0DAAsB;IAAtB,yGAAsB;;;IAgBrC,0EACI;IAAA,yEAAkE;IAAA,uDAAc;IAAA,4DAAK;IACrF,6EACI;IADmD,4LAAS,kBAAc,aAAa,CAAC,IAAC;IACzF,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;IACN,0EACI;IAAA,oEAAG;IAAA,yEAAQ;IAAA,uDAAiB;IAAA,4DAAS;IAAA,4DAAI;IACzC,qEAAG;IAAA,wDAAoB;IAAA,4DAAI;IAC3B,sEAAqC;IACzC,4DAAM;IACN,2EACI;IAAA,8EAAgG;IAAxC,6LAAS,kBAAc,cAAc,CAAC,IAAC;IAAC,kEAAM;IAAA,4DAAS;IAC/G,8EAA+F;IAApC,6LAAS,gBAAY,YAAY,CAAC,IAAC;IAAC,8DAAE;IAAA,4DAAS;IAC9G,4DAAM;;;IAbgE,0DAAc;IAAd,mFAAc;IAMrE,0DAAiB;IAAjB,sFAAiB;IACzB,0DAAoB;IAApB,yFAAoB;IAClB,0DAAyB;IAAzB,wJAAyB;;ADtP/B,MAAM,mBAAmB;IA+B9B,YACU,GAAgB,EAChB,cAA8B,EAC9B,YAAsB,EACtB,eAAgC,EAChC,iBAAoC;QAJpC,QAAG,GAAH,GAAG,CAAa;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAU;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAlC9C,qBAAgB,GAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;QAO3F,oBAAe,GAAG,CAAC,CAAC;QACpB,aAAQ,GAAG,CAAC,CAAC;QACb,gBAAW,GAAG,CAAC,CAAC;QAGhB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,4BAAuB,GAAG,WAAW,CAAC;QACtC,0BAAqB,GAAG,MAAM,CAAC;QAE/B,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,eAAU,GAAG,EAAE,CAAC;QAChB,kBAAa,GAAG,EAAE,CAAC;QACnB,qBAAgB,GAAG,EAAE,CAAC;QAEtB,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAe,IAAI,6DAAU,EAAE,CAAC;QAG1C,gCAA2B,GAAoB,EAAE,CAAC;QAClD,uBAAkB,GAAQ,EAAE,CAAC;QA8F7B,YAAO,GAAY,KAAK,CAAC;QArFvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC1D,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAClG,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;YACpB,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC;QAErD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QACtF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,eAAe,CAAC,eAAuB;QACrC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAExC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACnD,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,EAAE;YACpB,kCAAkC;YAClC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,uBAAuB,EAAE,EAAE,CAAC,CAAC;YACrD,yCAAyC;YACzC,mBAAmB;YACnB,KAAK;YACL,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;IAC1D,CAAC;IAED,gBAAgB,CAAC,gBAAwB;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,CAAC,YAAY,IAAI,EAAE,EAAE;oBACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IAClD,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACzD,CAAC;IAED,SAAS,CAAC,UAAkB,EAAE,gBAAwB,EAAE,aAAqB,EAAE,cAAsB,EAAE,EAAE,WAAgB,GAAG,EAAE,GAAG,CAAC;QAChI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACxG,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAID,IAAI,CAAC,UAAmB,EAAE,OAAY;;QACpC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/C,sDAAsD;YACtD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,2CAA2C,EAAE,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,OAAO;SACR;QAED,IAAI,YAAY,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,UAAU,EAAE;gBACxC,+DAA+D;gBAC/D,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,wBAAwB,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;gBAElF,YAAY,GAAG,KAAK,CAAC;aACtB;YAED,IAAI,KAAK,CAAC,UAAU,KAAK,CAAC,EAAE;gBAC1B,kEAAkE;gBAClE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,2BAA2B,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;gBACrF,YAAY,GAAG,KAAK,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,YAAY,EAAE;YAChB,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;YACnE,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAEhD,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;aAC9C;YACD,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;YACvE,MAAM,UAAU,GAAe,IAAI,6DAAU,EAAE,CAAC;YAChD,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC/B,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACrD,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC7D,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACzC,yEAAyE;YACzE,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YACpE,UAAU,CAAC,OAAO,SAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,0CAAE,OAAO,EAAE,CAAC;YACzE,UAAU,CAAC,QAAQ,SAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,0CAAE,OAAO,EAAE,CAAC;YAC3E,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACpD,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACxD,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACpD,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;YAE7C,IAAI,UAAU,CAAC,UAAU,GAAG,CAAC,EAAE;gBAC7B,2CAA2C;gBAC3C,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,gCAAgC,EAAE,EAAE,CAAC,CAAC;gBAC9D,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAChC,OAAO;aACR;iBAAM,IAAI,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,EAAE;gBACrC,oDAAoD;gBACpD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,yCAAyC,EAAE,EAAE,CAAC,CAAC;gBACvE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAChC,OAAO;aACR;iBAAM,IAAI,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE;gBACtC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;aAC5B;iBAAM,IAAI,UAAU,CAAC,UAAU,GAAG,CAAC,EAAE;gBACpC,UAAU,CAAC,MAAM,GAAG,SAAS,CAAC;aAC/B;iBAAM;gBACL,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;aAC3B;YAED,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,KAAK,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,CAAC;gBAClE,CAAC,QAAQ,CAAC,YAAY,KAAK,EAAE,IAAI,QAAQ,CAAC,WAAW,KAAK,IAAI,IAAI,QAAQ,CAAC,WAAW,KAAK,EAAE,IAAI,UAAU,CAAC,OAAO,KAAK,SAAS,CAAC,EAAE;gBACpI,oHAAoH;gBAEpH,IAAI,QAAQ,GAAG,sCAAsC,CAAC;gBACtD,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,IAAI,QAAQ,CAAC,YAAY,KAAK,EAAE,EAAE;oBAChC,MAAM,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;iBAC/D;gBACD,IAAI,QAAQ,CAAC,WAAW,KAAK,EAAE,EAAE;oBAC/B,MAAM,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;iBAC9D;gBACD,IAAI,UAAU,CAAC,OAAO,KAAK,SAAS,EAAE;oBACpC,MAAM,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;iBAC1D;gBACD,QAAQ,GAAG,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;gBACnD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;gBAE1C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAChC,OAAO;aACR;YAED,IAAI,UAAU,CAAC,UAAU,IAAI,IAAI,EAAE;gBACjC,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC;aAC7B;YAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,2BAA2B,GAAG,IAAI,CAAC,2BAA2B,CAAC;YAE/E,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC1G,IAAI,CAAC,iBAAiB;qBACnB,gBAAgB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC7C,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,SAAS,EAAE,CAAC;oBACpF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,uBAAuB;oBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,IAAI,UAAU,EAAE;wBACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBACrB,2BAA2B;qBAC5B;yBAAM;wBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACvB,CAAC,EAAE,IAAI,CAAC,CAAC;qBACV;gBACH,CAAC,EACC,KAAK,CAAC,EAAE;oBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAClC,CAAC,CAAC,CAAC;YACT,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;gBACZ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAClC,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,cAAc,CAAC,YAAoB;QACjC,IAAI,IAAI,GAAG;YACT,YAAY,EAAE,YAAY;YAC1B,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,IAAI;SAClB,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,gBAAgB;QACd,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,CAAC;IAEO,oBAAoB,CAAC,UAAe;QAC1C,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChF,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACzC,CAAC;IAEO,SAAS,CAAC,QAAQ;QACxB,+DAA+D;QAC/D,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,cAAc,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACzB,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,yCAAyC,CAAC,CAAC;QACvF,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IAEO,eAAe,CAAC,KAAa;QACnC,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC7G,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,cAAc,CAAC,KAAa;QAClC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAChG,CAAC;IAEO,YAAY,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC;IACpE,CAAC;IAEO,aAAa,CAAC,KAAa;QACjC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC;IACtE,CAAC;IAEO,QAAQ,CAAC,OAAO;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,KAAK,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/F,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAChF,OAAO,EAAE,CAAC,OAAO,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAGO,WAAW,CAAC,OAAgB;QAClC,IAAI,cAAc,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC/C,IAAI,OAAO,CAAC,WAAW,KAAK,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;gBACvD,uCAAuC;gBACvC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,4BAA4B,EAAE,EAAE,CAAC,CAAC;gBAE1D,cAAc,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,cAAc,EAAE;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SACvF;IACH,CAAC;IAED,aAAa,CAAC,KAAU,EAAE,OAAY;QACpC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3C,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,gIAAgI;QAChI,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,CAAC,aAAa,IAAI,YAAY,CAAC,IAAI,CAAC,YAAY,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YAC3F,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,4CAA4C,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE;gBACvF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gBACnD,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;gBAErC,IAAI,IAAI,KAAK,IAAI,EAAE;oBACjB,MAAM,WAAW,GAAG;wBAClB,KAAK,EAAE,YAAY;wBACnB,WAAW,EAAE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW;wBAC9C,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;qBAC7B;oBAED,MAAM,eAAe,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;oBACxG,IAAI,eAAe,EAAE;wBACnB,eAAe,CAAC,KAAK,GAAG,YAAY,CAAC;qBACtC;yBAAM;wBACL,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBACpD;iBACF;qBAAM;oBACL,QAAQ;iBACT;gBAED,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC;YAE9D,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,YAAY,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE;YAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC3G,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;gBACpB,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aACvD;SACF;QAED,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC;IACpD,CAAC;IAED,gBAAgB,CAAC,KAAU,EAAE,OAAY;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;IACvC,CAAC;IAED,mBAAmB,CAAC,WAAkB;QACpC,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC5B,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClE,+DAA+D;YAC/D,WAAW,IAAI,OAAO,CAAC,UAAU,CAAC;YAClC,WAAW,IAAI,MAAM,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI,CACrF,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAC1C,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,IAAI,CACnF,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CACzC,CAAC;QAIF,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE;YAC9D,OAAO;YACP,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC5B,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAClE,+DAA+D;gBAC/D,WAAW,IAAI,OAAO,CAAC,UAAU,CAAC;gBAClC,WAAW,IAAI,MAAM,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAIO,WAAW;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACnC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACtB,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACpC,UAAU,EAAE,EAAE;SACf,CAAC,CAAC;IACL,CAAC;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kBAAkB,CAAc,CAAC;IAClE,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAgB,CAAC;IAC9D,CAAC;;sFAxcU,mBAAmB;mGAAnB,mBAAmB;;;;;;;;;QCpBhC,+GAMM;QAEN,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,kEAAO;QAAA,4DAAY;QAC9B,yEACA;QAAA,yFACI;QADmE,6KAAkB,wCAAoC,IAAC;QAC1H,+HAEa;;QACjB,4DAAmB;QACvB,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,2FACI;QADoE,8KAAkB,yCAAqC,IAAC;QAC5H,+HAEa;;QACjB,4DAAmB;QACvB,4DAAiB;QACrB,4DAAM;QAEN,2EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACJ;QAAA,4DAAiB;QACrB,4DAAM;QAEN,sFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,wFACwB;QACxB,uFAA0C;QAC9C,4DAAiB;QAEjB,sFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,wFACwB;QACxB,uFAA0C;QAC9C,4DAAiB;QAErB,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,gHAAuE;QACvE,gHAAgG;QAChG,gHAAiE;QACrE,qEAAe;QAEf,6EACI;QAAA,gHAAwE;QACxE,gHAKK;QACL,gHAA2C;QAC/C,qEAAe;QAEf,6EACI;QAAA,gHAA6D;QAC7D,gHAAyF;QACzF,gHAA2C;QAC/C,qEAAe;QAEf,6EACI;QAAA,gHAAgF;QAChF,gHAiBK;QACL,gHAA2C;QAC/C,qEAAe;QAEf,6EACI;QAAA,gHAA2E;QAC3E,gHAaK;QACL,gHAEK;QACT,qEAAe;QA0Bf,6EACI;QAAA,gHAAyE;QACzE,gHAEK;QACL,gHAEK;QACT,qEAAe;QAEf,gHAA2E;QAC3E,gHAAkE;QAClE,gHAA4D;QAChE,4DAAQ;QA4BJ,2EACI;QAAA,uEACI;QAAA,6EAAkB;QAAA,8EAAkB;QAAA,4DAAQ;QAC5C,4EAA+B;QAAA,wDAA4E;;QAAA,4DAAO;QACtH,4DAAM;QACN,uEACI;QAAA,6EAAkB;QAAA,+EAAmB;QAAA,4DAAQ;QAC7C,4EAA+B;QAAA,wDAAqC;;QAAA,4DAAO;QAC/E,4DAAM;QACN,uEACI;QAAA,6EAAkB;QAAA,+EAAmB;QAAA,4DAAQ;QAC7C,4EAA+B;QAAA,wDAAsC;;QAAA,4DAAO;QAChF,4DAAM;QACN,uEACI;QAAA,6EAAkB;QAAA,0EAAc;QAAA,4DAAQ;QACxC,wEACJ;QAAA,4DAAM;QACN,iEAEA;QAAA,8EAAgK;QAA/B,4RAAS,SAAK,KAAK,OAAU,IAAC;QAAC,uEACvJ;QAAA,4DAAS;QAClB,8EAAsI;QAA9B,4RAAS,SAAK,IAAI,OAAU,IAAC;QAAC,+EAAmB;QAAA,4DAAS;QAClK,8EAAuF;QAA7B,4IAAS,sBAAkB,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACzG,4DAAM;QAEd,4DAAM;QACV,4DAAO;QAEP,iNAkCc;QAEd,iNAgBc;;;;;;QAhRO,6EAAa;QAQ5B,0DAA4B;QAA5B,yFAA4B;QAK4E,0DAA+B;QAA/B,gFAA+B;QAEzF,0DAA2B;QAA3B,4JAA2B;QAUkB,0DAAgC;QAAhC,gFAAgC;QAE5E,0DAA4B;QAA5B,6JAA4B;QAgBrD,2DAAyB;QAAzB,8EAAyB;QACR,0DAAe;QAAf,oEAAe;QAOhC,0DAAyB;QAAzB,8EAAyB;QACR,0DAAe;QAAf,oEAAe;QAOZ,0DAAmC;QAAnC,gGAAmC;QAsGlE,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAC/B,0DAAiC;QAAjC,iGAAiC;QAgCd,0DAA4E;QAA5E,oMAA4E;QAI5E,0DAAqC;QAArC,8JAAqC;QAIrC,0DAAsC;QAAtC,gKAAsC;QAQD,0DAAwD;QAAxD,yHAAwD;QAExD,0DAA+B;QAA/B,4FAA+B;;6FDjM1G,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;8bAmB6B,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YAKC,YAAY;kBAAtC,uDAAS;mBAAC,cAAc;;;;;;;;;;;;;;AE3C3B;AAAA;AAAO,MAAM,QAAQ;CAIpB;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,gBAAgB;;AACzB,2FAA2F;AAE3F,4BAA4B;AACrB,wBAAO,GAAG,uBAAuB,CAAC;;;;;;;;;;;;;ACH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACF;AACE;AAEO;;;;;;;;;;ICD5D,yEAA2D;IAAA,oEAAS;IAAA,4DAAK;;;;IACzE,yEACE;IAD0D,oWAAwB;IAClF,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,gGACF;;;IAGA,yEAA2D;IAAA,sEAAW;IAAA,4DAAK;;;IAC3E,yEACE;IAAA,uDAAqD;IAAA,4DAAK;;;IAA1D,0DAAqD;IAArD,gIAAqD;;;IAGvD,yEAA8D;IAAA,qEAAU;IAAA,4DAAK;;;IAC7E,yEACE;IAAA,uDAAmD;IAAA,4DAAK;;;IAAxD,0DAAmD;IAAnD,8HAAmD;;;IAGrD,yEAA2D;IAAA,iEAAM;IAAA,4DAAK;;;IACtE,yEACE;IAAA,uDAAgD;IAAA,4DAAK;;;IAArD,0DAAgD;IAAhD,2HAAgD;;;IAGlD,yEAA2D;IAAA,yEAAc;IAAA,4DAAK;;;IAC9E,yEACE;IAAA,uDAAuD;IAAA,4DAAK;;;IAA5D,0DAAuD;IAAvD,kIAAuD;;;IAE3D,oEAA4E;;;IAC5E,oEAAmE;;;ADnBlE,MAAM,sBAAsB;IAmCjC,YAAoB,iBAAoC,EAAU,GAAgB;QAA9D,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,QAAG,GAAH,GAAG,CAAa;QAjClF,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;QAC7D,sBAAiB,GAAa,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QACzG,4BAAuB,GAAa,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QAO7E,gBAAW,GAAG,CAAC,CAAC;QAChB,cAAS,GAAG,CAAC,CAAC;QACd,QAAG,GAAG,CAAC,CAAC;QACR,YAAO,GAAG,CAAC,CAAC;QACZ,mBAAc,GAAG,CAAC,CAAC;QACnB,kBAAa,GAAG,CAAC,CAAC;QAClB,eAAU,GAAG,CAAC,CAAC;QACf,cAAS,GAAG,CAAC,CAAC;QACd,UAAK,GAAG,CAAC,CAAC;QACV,oBAAe,GAAG,CAAC,CAAC;QACpB,oBAAe,GAAG,CAAC,CAAC;QACpB,oBAAe,GAAG,CAAC,CAAC;QACpB,qBAAgB,GAAG,CAAC,CAAC;QACrB,qBAAgB,GAAG,CAAC,CAAC;QACrB,qBAAgB,GAAG,CAAC,CAAC;QACrB,sBAAiB,GAAG,CAAC,CAAC;QACtB,wBAAmB,GAAG,CAAC,CAAC;QACxB,iBAAY,GAAG,CAAC,CAAC;QACjB,mBAAc,GAAG,CAAC,CAAC;QACnB,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,CAAC,CAAC;QACjB,kBAAa,GAAG,CAAC,CAAC;QAClB,kBAAa,GAAG,CAAC,CAAC;QAClB,kBAAa,GAAG,CAAC,CAAC;IAGlB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACxC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACxC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACxC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACvC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACvC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;SACxC,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC/E,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,qDAAqD;YACrD,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,aAAa,CAAC;YAClC,gEAAgE;QAClE,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC9E,IAAI,CAAC,gBAAgB,GAAG,GAAG,GAAG,aAAa;YAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,2EAA2E;QAC7E,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC9E,IAAI,CAAC,gBAAgB,GAAG,GAAG,GAAG,aAAa,CAAC;YAC5C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,4EAA4E;QAC9E,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC9E,IAAI,CAAC,gBAAgB,GAAG,GAAG,GAAG,aAAa,CAAC;YAC5C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,2EAA2E;QAC7E,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC7E,IAAI,CAAC,eAAe,GAAG,EAAE,GAAG,aAAa,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;YAClC,2EAA2E;QAC7E,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC7E,IAAI,CAAC,eAAe,GAAG,EAAE,GAAG,aAAa,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;YAClC,0EAA0E;QAC5E,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC7E,IAAI,CAAC,eAAe,GAAG,EAAE,GAAG,aAAa,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;YAClC,0EAA0E;QAC5E,CAAC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAChK,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACnL,IAAI,CAAC,UAAU,GAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;IACzJ,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC;IAEO,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9C,CAAC;IACO,mBAAmB,CAAC,IAAI;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACpD,CAAC;IAED,OAAO,CAAC,KAAK;QACX,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,kCAAkC;QAClC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACpG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;;4FAxHU,sBAAsB;sGAAtB,sBAAsB;kEAKtB,wEAAY;;;;;QChBzB,yEACE;QAAA,yEACE;QAAA,2EACE;QAAA,2EACE;QAAA,gHAAyE;QACzE,gHAEK;QACP,qEAAe;QACf,2EACE;QAAA,gHAA2E;QAC3E,gHAC4D;QAC9D,qEAAe;QACf,2EACE;QAAA,kHAA6E;QAC7E,kHAC0D;QAC5D,qEAAe;QACf,6EACE;QAAA,mHAAsE;QACtE,kHACuD;QACzD,qEAAe;QACf,6EACE;QAAA,mHAA8E;QAC9E,kHAC8D;QAChE,qEAAe;QACf,mHAA4E;QAC5E,mHAAmE;QACrE,4DAAQ;QACR,gFAAqG;QACvG,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,gFAGE;QAAA,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,0EAAwD;QAAA,kEAAM;QAAA,4DAAK;QACnE,0EAAyC;QAAA,iEAAK;QAAA,4DAAK;QACnD,0EAA0D;QAAA,iEAAK;QAAA,4DAAK;QACpE,0EAAyD;QAAA,iEAAK;QAAA,4DAAK;QACnE,0EAAyD;QAAA,gEAAI;QAAA,4DAAK;QAClE,0EAAyD;QAAA,gEAAI;QAAA,4DAAK;QAClE,0EAAyD;QAAA,gEAAI;QAAA,4DAAK;QACpE,4DAAM;QACN,2EACE;QAAA,4EACE;QAAA,yEACE;QAAA,sFACE;QAAA,6EAEF;QAF4D,8JAAiB,eAAW,IAAC;QAAvF,4DAEF;QAAA,4DAAiB;QACjB,4EAA+C;QAAA,6DAAC;QAAA,4DAAO;QACzD,4DAAI;QACJ,yEACE;QAAA,sFACE;QAAA,6EAEF;QAF4D,8JAAiB,eAAW,IAAC;QAAvF,4DAEF;QAAA,4DAAiB;QACjB,6EAAgD;QAAA,6DAAC;QAAA,4DAAQ;QAC3D,4DAAI;QACJ,yEACE;QAAA,sFACE;QAAA,6EAEF;QAF4D,8JAAiB,eAAW,IAAC;QAAvF,4DAEF;QAAA,4DAAiB;QACjB,6EAAgD;QAAA,6DAAC;QAAA,4DAAQ;QAC3D,4DAAI;QACJ,yEACE;QAAA,sFACE;QAAA,6EAEF;QAF4D,8JAAiB,eAAW,IAAC;QAAvF,4DAEF;QAAA,4DAAiB;QACjB,6EAAgD;QAAA,6DAAC;QAAA,4DAAQ;QAC3D,4DAAI;QACJ,yEACE;QAAA,sFACE;QAAA,6EAEF;QAF4D,8JAAiB,eAAW,IAAC;QAAvF,4DAEF;QAAA,4DAAiB;QACjB,6EAAgD;QAAA,6DAAC;QAAA,4DAAQ;QAC3D,4DAAI;QACJ,yEACE;QAAA,sFACE;QAAA,6EAEF;QAF4D,8JAAiB,eAAW,IAAC;QAAvF,4DAEF;QAAA,4DAAiB;QACjB,6EAAgD;QAAA,6DAAC;QAAA,4DAAQ;QAC3D,4DAAI;QACJ,yEACE;QAAA,sFACE;QAAA,6EAEF;QAF4D,8JAAiB,eAAW,IAAC;QAAvF,4DAEF;QAAA,4DAAiB;QACjB,6EAAgD;QAAA,6DAAC;QAAA,4DAAQ;QAC3D,4DAAI;QACN,4DAAO;QACT,4DAAM;QACN,2EACE;QAAA,0EAAgC;QAAA,wDAAU;QAAA,4DAAK;QAC/C,0EAA0D;QAAA,wDAAqB;QAAA,4DAAK;QACpF,0EAA0D;QAAA,wDAAqB;QAAA,4DAAK;QACpF,0EAA0D;QAAA,wDAAqB;QAAA,4DAAK;QACpF,0EAA0D;QAAA,wDAAoB;QAAA,4DAAK;QACnF,0EAA0D;QAAA,wDAAoB;QAAA,4DAAK;QACnF,0EAA0D;QAAA,wDAAoB;QAAA,4DAAK;QACrF,4DAAM;QACR,4DAAM;QACN,qEACA;QAAA,2EACE;QAAA,uEACE;QAAA,0EAAgC;QAAA,iEAAK;QAAA,4DAAK;QAC5C,4DAAM;QACN,uEACE;QAAA,0EAAgC;QAAA,yDAAa;QAAA,4DAAK;QACpD,4DAAM;QACN,wEACE;QAAA,2EAAgC;QAAA,mEAAM;QAAA,6EAAkC;QAAA,8DAAC;QAAA,4DAAO;QAAC,yDACjF;QAAA,4DAAK;QACP,4DAAM;QACR,4DAAM;QACN,sEACF;QAAA,4DAAM;QAER,4DAAW;QACb,4DAAM;QACR,4DAAM;QAEN,4EACE;QAAA,4EACE;QAAA,iFACE;QAAA,4EACE;QAAA,2EACE;QAAA,4EACE;QAAA,wEACE;QAAA,0EACE;QAAA,uFACE;QAAA,8EACF;QAD8D,8LAAsB;QAAlF,4DACF;QAAA,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAF2D,iMAAyB;QAAlF,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAF8D,mMAA2B;QAAvF,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAFyD,+LAAuB;QAA9E,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAFiD,yMAAiC;QAAhF,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAFgE,yLAAiB,uGAC5D,eAAW,IADiD;QAA/E,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAFiE,6LAAqB,uGACjE,eAAW,IADsD;QAApF,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QACJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAFqE,oMAA4B,uGAC5E,eAAW,IADiE;QAA/F,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,uFACE;QAAA,8EAEF;QAF4C,gMAAwB;QAAlE,4DAEF;QAAA,4DAAiB;QACnB,4DAAI;QACN,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7MK,0DAA0B;QAA1B,uFAA0B;QA2B1B,2DAAqC;QAArC,kGAAqC;QACjB,0DAA2B;QAA3B,mGAA2B;QAEvC,0DAAgC;QAAhC,mJAAgC;QAmB/B,2DAA0B;QAA1B,uFAA0B;QAqDA,2DAAU;QAAV,oFAAU;QACgB,0DAAqB;QAArB,+FAAqB;QACrB,0DAAqB;QAArB,+FAAqB;QACrB,0DAAqB;QAArB,+FAAqB;QACrB,0DAAoB;QAApB,8FAAoB;QACpB,0DAAoB;QAApB,8FAAoB;QACpB,0DAAoB;QAApB,8FAAoB;QAS9C,0DAAa;QAAb,8EAAa;QAGoC,0DACjF;QADiF,mGACjF;QAmBkE,2DAAsB;QAAtB,iFAAsB;QAMzB,0DAAyB;QAAzB,oFAAyB;QAOtB,0DAA2B;QAA3B,sFAA2B;QAOhC,0DAAuB;QAAvB,kFAAuB;QAO/B,0DAAiC;QAAjC,4FAAiC;QAOlB,0DAAiB;QAAjB,4EAAiB;QAOhB,0DAAqB;QAArB,gFAAqB;QAMjB,0DAA4B;QAA5B,uFAA4B;QAOrD,0DAAwB;QAAxB,mFAAwB;;6FDzLzE,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;qMAM0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEhBzB;AAAA;AAAA;AAAA;AAAgD;;;AAOzC,MAAM,iBAAiB;IAE1B;IACA,CAAC;IAED,QAAQ;IACR,CAAC;;kFANQ,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEACI;QAAA,yEACI;QAAA,oEAA4B;QAC5B,wEAAkB;QAAA,8DAAG;QAAA,4DAAK;QAC1B,uEAAgB;QAAA,6EAAkB;QAAA,4DAAI;QACtC,4EAA+D;QAAA,+DAAI;QAAA,4DAAS;QAChF,4DAAM;QACV,4DAAM;;6FDAO,iBAAiB;cAL7B,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACU;AACK;AACZ;AAEV;;;;;;;;;ICJ7C,yEACI;IAAA,yEAAkB;IAAA,uEAAY;IAAA,4DAAK;IACvC,4DAAM;;;IACN,yEACI;IAAA,yEAAkB;IAAA,0EAAe;IAAA,4DAAK;IAC1C,4DAAM;;;IAMM,4EACI;IAAA,gFACJ;IAAA,4DAAY;;ADDrB,MAAM,uBAAuB;IAWhC,YAAoB,eAAgC,EACjC,SAAgD,EACtB,IAAI;QAF7B,oBAAe,GAAf,eAAe,CAAiB;QACjC,cAAS,GAAT,SAAS,CAAuC;QACtB,SAAI,GAAJ,IAAI;QAVjD,aAAQ,GAAa,IAAI,+DAAQ,EAAE,CAAC;QAWhC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC,CAAC;QACH,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1F;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;;QACJ,IAAI,WAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,EAAE,KAAI,IAAI,EAAE;YAC1C,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAED,YAAY;;QACR,IAAI,IAAI,GAAG;YACP,EAAE,QAAE,IAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,EAAE;YACpC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;SACtD,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;;QACV,IAAI,IAAI,GAAG;YACP,EAAE,QAAE,IAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,EAAE;YACpC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;SACtD,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACX,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QACnD,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;8FA1EQ,uBAAuB,8VAaZ,wEAAe;uGAb1B,uBAAuB;QCbpC,yEACI;QAAA,mHAEM;QACN,mHAEM;QACN,gEACA;QAAA,0EACI;QAD6B,+IAAU,cAAU,IAAC;QAClD,yEACI;QAAA,oFACI;QAAA,sEACA;QAAA,+HAEY;QAChB,4DAAiB;QACrB,4DAAM;QAEN,yEACI;QAAA,6EAC6C;QADvB,gJAAS,gBAAY,IAAC;QACC,mEAC7C;QAAA,4DAAS;QACT,6EAC6C;QAAA,iEAC7C;QAAA,4DAAS;QACb,4DAAM;QACN,0EACI;QAAA,0EAA0B;QAAA,wDAAc;QAAA,4DAAK;QAC7C,0EAAwB;QAAA,wDAAY;QAAA,4DAAK;QAC7C,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QA/BI,0DAAuC;QAAvC,kJAAuC;QAGvC,0DAAuC;QAAvC,kJAAuC;QAIvC,0DAA0B;QAA1B,uFAA0B;QAIR,0DAAuD;QAAvD,uHAAuD;QAU/D,0DAAgC;QAAhC,6FAAgC;QAKd,0DAAc;QAAd,+EAAc;QAChB,0DAAY;QAAZ,6EAAY;;6FDfnC,uBAAuB;cALnC,uDAAS;eAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aACjD;;sBAcgB,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEzBvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACF;AACE;AAIL;AACR;;;;;;;;;;;;;;;ICCxC,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFgD,0FAA6B;IACxF,0DACF;IADE,mGACF;;;IAeF,4EAAwE;IAAA,6EAAkB;IAAA,4DAAY;;;IACtG,4EAAoE;IAAA,2EAAgB;IAAA,4DAAY;;;IAsC9F,yEAA6D;IAAA,+DAAI;IAAA,4DAAK;;;IACtE,yEAAgF;IAAA,uDAAW;IAAA,4DAAK;;;IAAhB,0DAAW;IAAX,sFAAW;;;IAC3F,yEAAsC;IAAA,yEAAQ;IAAA,gEAAK;IAAA,4DAAS;IAAA,4DAAK;;;IAIjE,yEAA8D;IAAA,uEAAY;IAAA,4DAAK;;;IAC/E,yEAAgE;IAAA,uDAChE;;IAAA,4DAAK;;;IAD2D,0DAChE;IADgE,2KAChE;;;IAIA,yEAA8D;IAAA,uEAAY;IAAA,4DAAK;;;IAC/E,yEACE;IAAA,uDAAkC;IAAA,4DAAK;;;IAAvC,0DAAkC;IAAlC,6GAAkC;;;IAIpC,yEAA8D;IAAA,wEAAa;IAAA,4DAAK;;;IAChF,yEACE;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,8GAAmC;;;IAIrC,yEAA8D;IAAA,mEAAQ;IAAA,4DAAK;;;IAC3E,yEACE;IAAA,uDAAgC;IAAA,4DAAK;;;IAArC,0DAAgC;IAAhC,2GAAgC;;;IAIlC,yEAA8D;IAAA,wEAAa;IAAA,4DAAK;;;IAChF,yEACE;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,8GAAmC;;;IAGvC,oEAA2E;;;IAC3E,oEAAkE;;;ADtFjE,MAAM,kBAAkB;IAmB7B,YAAoB,iBAAoC,EAAU,cAA8B;QAA5E,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAlBhG,qBAAgB,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;QAIzG,qBAAgB,GAAG,EAAE,CAAC;QAStB,UAAK,GAAG,IAAI,wDAAS,CAAC;YACpB,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,GAAG,EAAE,IAAI,0DAAW,EAAE;SACvB,CAAC,CAAC;QAGD,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAClC,WAAW,EAAE,IAAI,0DAAW,EAAE;YAC9B,UAAU,EAAE,IAAI,0DAAW,EAAE;YAC7B,YAAY,EAAE,IAAI,0DAAW,EAAE;SAChC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,sCAAsC;QACtC,iCAAiC;QAEjC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,IAAI,CAChF,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CACzC,CAAC;IACJ,CAAC;IAEO,cAAc,CAAC,KAAa;QAClC,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,eAAe,CAAC,eAAuB;QACrC,0DAA0D;QAC1D,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC;QAClC,kCAAkC;IACpC,CAAC;IAEO,YAAY,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC;IACpE,CAAC;IAEO,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,UAAU;QACR,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;QAE9C,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC;YACxC,IAAG,IAAI,CAAC,UAAU,IAAI,SAAS,EAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;YACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACvE;QAAA,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,WAAW,EAAE,SAAiB,EAAE,OAAe;QAChE,0CAA0C;QACxC,IAAG,SAAS,IAAI,SAAS,IAAI,OAAO,IAAI,SAAS,EAAC;YAC/C,SAAS,GAAG,IAAI,CAAC;YACjB,OAAO,GAAG,IAAI,CAAC;SACjB;QACD,iCAAiC;QACjC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1F,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjD,mBAAmB;YACnB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACnE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACtE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAClC,IAAI;IACN,CAAC;;oFAnHW,kBAAkB;kGAAlB,kBAAkB;kEAElB,wEAAY;;;;;QCjBzB,yEACE;QAAA,yEACE;QAAA,oEAAG;QAAA,uEAAM;QAAA,6FAAkC;QAAA,4DAAO;QAAA,4DAAI;QACtD,gEAAI;QAAA,gEACJ;QAAA,oFACE;QAAA,4EAAW;QAAA,kEAAO;QAAA,4DAAY;QAC9B,uEACA;QAAA,0FAEE;QADA,6KAAkB,wCAAoC,IAAC;QACvD,8HAEa;;QACf,4DAAmB;QACrB,4DAAiB;QAEjB,kFACE;QAAA,2FACE;QAAA,uEACA;QAAA,uEACF;QAAA,4DAAuB;QACvB,wFAAwE;QACxE,6FACE;QAD+B,0JAAS,eAAW,IAAC;QACpD,gFAAkC;QAAA,iEAAK;QAAA,4DAAW;QACpD,4DAAwB;QACxB,8FAAuD;QAEvD,6HAAsG;QACtG,6HAAgG;QAClG,4DAAiB;QAEjB,iEAAI;QAAA,iEAAI;QAAA,iEAAI;QAAA,iEACZ;QAAA,qEAAG;QAAA,wEAAM;QAAA,yEAAa;QAAA,4DAAO;QAAA,4DAAI;QACjC,iEAAI;QAAA,iEACJ;QAAA,2EACE;QAAA,4EACE;QAQA,2EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACF;QAAA,4DAAiB;QACjB,iEACF;QAAA,4DAAM;QAEN,2EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACF;QAAA,4DAAiB;QACjB,iEACF;QAAA,4DAAM;QACR,4DAAO;QAET,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,6EACE;QAAA,6EACE;QAAA,+GAAsE;QACtE,+GAAgG;QAChG,+GAAiE;QACnE,qEAAe;QAEf,6EACE;QAAA,+GAA+E;QAC/E,+GACK;QACP,qEAAe;QAEf,6EACE;QAAA,+GAA+E;QAC/E,+GACyC;QAC3C,qEAAe;QAEf,6EACE;QAAA,+GAAgF;QAChF,+GAC0C;QAC5C,qEAAe;QAEf,6EACE;QAAA,+GAA2E;QAC3E,+GACuC;QACzC,qEAAe;QAEf,6EACE;QAAA,+GAAgF;QAChF,+GAC0C;QAC5C,qEAAe;QAEf,+GAA2E;QAC3E,+GAAkE;QAEpE,4DAAQ;QACR,gFAAqG;QACvG,4DAAM;QACR,4DAAM;;;;QApG+E,2DAA+B;QAA/B,gFAA+B;QAG5E,0DAA2B;QAA3B,4JAA2B;QAOvC,0DAAmB;QAAnB,gFAAmB;QAIR,0DAAc;QAAd,oEAAc;QAMnC,0DAA0D;QAA1D,0HAA0D;QAC1D,0DAAsD;QAAtD,sHAAsD;QAO5D,2DAAyB;QAAzB,sFAAyB;QA6B1B,2DAAyB;QAAzB,sFAAyB;QAqCzB,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAGtC,0DAAgC;QAAhC,mJAAgC;;6FDzFtC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;0NAG0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEjBzB;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGqB;;;AAKvD,MAAM,cAAc;IAIvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,UAAU,CAAC;IAGxD,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,OAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,KAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,aAAa,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,CAAC;;4EA3BQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;6FAET,cAAc;cAH1B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AACV;AACE;AACS;;;;;;;;;ICDhE,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;IACvD,yEAAwC;IAAA,uDAAiC;IAAA,4DAAK;;;IAAtC,0DAAiC;IAAjC,8IAAiC;;;IAIzE,yEAAyD;IAAA,yEAAc;IAAA,4DAAK;;;IAC5E,yEAA2D;IAAA,uDAC3D;;IAAA,4DAAK;;;IADsD,0DAC3D;IAD2D,sKAC3D;;;IAIA,yEAAyD;IAAA,oEAAS;IAAA,4DAAK;;;IACvE,yEAA2D;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,kGAAuB;;;IAapF,oEAA2E;;;;IAC3E,oEACK;;;IADwD,mFAAmB;;;ADlB7E,MAAM,8BAA8B;IAKzC,YAAmB,MAAiB,EAAU,oBAA0C,EACrD,IAAI;QADpB,WAAM,GAAN,MAAM,CAAW;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QACrD,SAAI,GAAJ,IAAI;QALvC,qBAAgB,GAAa,CAAC,aAAa,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAMlE,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC/C;IACH,CAAC;IACD,QAAQ,KAAW,CAAC;IAEZ,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,SAAS,CACjF,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,mEAAmE,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACP,CAAC;;4GA3BU,8BAA8B,+VAM/B,wEAAe;8GANd,8BAA8B;kEAE9B,wEAAY;;;;;QCbzB,yEACE;QAAA,2EACE;QAAA,2EACE;QAAA,wHAAuD;QACvD,wHAA8E;QAChF,qEAAe;QAEf,2EACE;QAAA,wHAA4E;QAC5E,wHACK;QACP,qEAAe;QAEf,2EACE;QAAA,wHAAuE;QACvE,0HAAuF;QACzF,qEAAe;QAYf,0HAA2E;QAC3E,2HACK;QACP,4DAAQ;QACR,gFAAqG;QACvG,4DAAM;QACN,iEAAI;;QAjCK,0DAAyB;QAAzB,sFAAyB;QA2BzB,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAGtC,0DAAgC;QAAhC,kJAAgC;;6FDrBpC,8BAA8B;cAL1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,0CAA0C;gBACvD,SAAS,EAAE,CAAC,yCAAyC,CAAC;aACvD;;sBAOI,oDAAM;uBAAC,wEAAe;wBAJA,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACU;AACK;AAExB;;;;;;;;;ICH3C,yEACI;IAAA,yEAAkB;IAAA,sEAAW;IAAA,4DAAK;IACtC,4DAAM;;;IACN,yEACI;IAAA,yEAAkB;IAAA,yEAAc;IAAA,4DAAK;IACzC,4DAAM;;;IAMM,4EACI;IAAA,iFACJ;IAAA,4DAAY;;ADFrB,MAAM,sBAAsB;IAQ/B,YAAoB,cAA8B,EAC/B,SAA+C,EACrB,IAAI;QAF7B,mBAAc,GAAd,cAAc,CAAgB;QAC/B,cAAS,GAAT,SAAS,CAAsC;QACrB,SAAI,GAAJ,IAAI;QAPjD,YAAO,GAAY,IAAI,6DAAO,EAAE,CAAC;QAQ7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACrC,CAAC,CAAC;QACH,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC3F,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9F;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;;QACJ,IAAI,WAAI,CAAC,iBAAiB,0CAAE,IAAI,CAAC,EAAE,KAAI,IAAI,EAAE;YACzC,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;aAAM;YACH,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAED,WAAW;;QACP,IAAI,IAAI,GAAG;YACP,EAAE,QAAE,IAAI,CAAC,iBAAiB,0CAAE,IAAI,CAAC,EAAE;YACnC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACxD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;SAC3D,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,iCAAiC,CAAC;gBACpD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;;QACT,IAAI,IAAI,GAAG;YACP,EAAE,QAAE,IAAI,CAAC,iBAAiB,0CAAE,IAAI,CAAC,EAAE;YACnC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACxD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;SAC3D,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,iCAAiC,CAAC;gBACpD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;QACtD,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;4FAzEQ,sBAAsB,4VAUX,wEAAe;sGAV1B,sBAAsB;QCZnC,yEACI;QAAA,kHAEM;QACN,kHAEM;QACN,gEACA;QAAA,0EACI;QAD4B,8IAAU,cAAU,IAAC;QACjD,yEACI;QAAA,oFACI;QAAA,sEACA;QAAA,8HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,yEACI;QAAA,qFACI;QAAA,uEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,0EACI;QAAA,6EAC6C;QADvB,+IAAS,gBAAY,IAAC;QACC,mEAC7C;QAAA,4DAAS;QACT,8EAC6C;QAAA,iEAC7C;QAAA,4DAAS;QACb,4DAAM;QACN,0EACI;QAAA,0EAA0B;QAAA,wDAAc;QAAA,4DAAK;QAC7C,0EAAwB;QAAA,wDAAY;QAAA,4DAAK;QAC7C,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QAnCI,0DAAsC;QAAtC,gJAAsC;QAGtC,0DAAsC;QAAtC,gJAAsC;QAItC,0DAAyB;QAAzB,sFAAyB;QAIP,0DAAyD;QAAzD,yHAAyD;QAcjE,0DAA+B;QAA/B,4FAA+B;QAKb,0DAAc;QAAd,+EAAc;QAChB,0DAAY;QAAZ,6EAAY;;6FDpBnC,sBAAsB;cALlC,uDAAS;eAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAChD;;sBAWgB,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEtBvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AAEvB;AAC6B;AAC5B;;;;;;;;;;ICmBjC,2EAAkD;IAAA,qEAAU;IAAA,4DAAO;;;;;IAKvE,oFACI;IACA,6EACR;IADuI,4WAA6B;;IACpK,uDAAa;IAAA,4DAAS;IAClB,4DAAgB;;;;IAFY,0DAAsG;IAAtG,8RAAsG;IACtI,0DAAa;IAAb,uFAAa;;;IAGT,oFACI;IAAA,6EACR;IAAA,+EACE;IAAA,uDACF;IAAA,4DAAW;IAIb,4DAAS;IACC,2EACR;IAAA,uDACF;IAAA,4DAAO;IAED,4DAAgB;;;;IAZ8B,0DAAyC;IAAzC,kGAAyC;IAEzF,0DACF;IADE,qJACF;IAKuD,0DAAyC;IAAzC,kGAAyC;IAChG,0DACF;IADE,yFACF;;;;IAOM,oFACI;IACA,6EACR;IADwI,8XAA+B;;IACvK,uDAAa;IAAA,4DAAS;IAElB,4DAAgB;;;;IAHY,0DAAuG;IAAvG,kSAAuG;IACvI,0DAAa;IAAb,wFAAa;;;IAIT,oFACI;IAAA,6EACR;IAAA,+EACE;IAAA,uDACF;IAAA,4DAAW;IAGb,4DAAS;IACC,2EACR;IAAA,uDACF;IAAA,4DAAO;IACD,4DAAgB;;;;IAV8B,0DAAyC;IAAzC,kGAAyC;IAEzF,0DACF;IADE,sJACF;IAIuD,0DAAyC;IAAzC,kGAAyC;IAChG,0DACF;IADE,yFACF;;;IAnBE,+EACI;IACA,+IAKgB;IAEhB,+IAWgB;IACpB,4DAAW;;;IArBY,gGAAgC;IASV,0DAAc;IAAd,+FAAc;;;;IAgBvD,oFACI;IACA,6EACR;IADiI,oXAAiC;;IAClK,uDAAa;IAAA,4DAAS;IAClB,4DAAgB;;;;IAFY,0DAAgG;IAAhG,yRAAgG;IAChI,0DAAa;IAAb,wFAAa;;;IAGT,oFACI;IAAA,6EACR;IAAA,+EACE;IAAA,uDACF;IAAA,4DAAW;IAGb,4DAAS;IACC,2EACR;IAAA,uDACF;IAAA,4DAAO;IACD,4DAAgB;;;;IAV8B,0DAAyC;IAAzC,kGAAyC;IAEzF,0DACF;IADE,qJACF;IAIuD,0DAAyC;IAAzC,kGAAyC;IAChG,0DACF;IADE,yFACF;;;;IAMM,oFACI;IACA,6EACR;IADwI,8XAA+B;;IACvK,uDAAa;IAAA,4DAAS;IAElB,4DAAgB;;;;IAHY,0DAAuG;IAAvG,kSAAuG;IACvI,0DAAa;IAAb,wFAAa;;;IAIT,oFACI;IAAA,6EACR;IAAA,+EACE;IAAA,uDACF;IAAA,4DAAW;IAGb,4DAAS;IACC,2EACR;IAAA,uDACF;IAAA,4DAAO;IACD,4DAAgB;;;;IAV8B,0DAAyC;IAAzC,kGAAyC;IAEzF,0DACF;IADE,sJACF;IAIuD,0DAAyC;IAAzC,kGAAyC;IAChG,0DACF;IADE,yFACF;;;IAnBE,+EACI;IACA,+IAKgB;IAEhB,+IAWgB;IACpB,4DAAW;;;IArBY,gGAAgC;IASV,0DAAc;IAAd,+FAAc;;;IAeuB,2EACvD;IAAA,gEAAK;IAAA,4DAAO;;;IAFvC,wEACI;IAAA,wEAAiD;IAAA,mEAA4B;IAAC,sHAC3C;IAAA,4DAAI;IAC3C,4DAAK;;;IAFoF,0DAAc;IAAd,iFAAc;;AD5G5G,MAAM,kBAAkB;IAsB7B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QArB1B,iBAAY,GAAG,CAAC,IAAgB,EAAE,KAAa,EAAE,EAAE;YACzD,OAAO;gBACL,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;gBACvD,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,KAAK;aACb,CAAC;QACJ,CAAC;QAED,gBAAW,GAAG,IAAI,iEAAe,CAC/B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/C,kBAAa,GAAG,IAAI,uEAAgB,CAClC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEzF,eAAU,GAAG,IAAI,4EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC7E,qBAAgB,GAAG,IAAI,4EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACnF,sBAAiB,GAAG,IAAI,4EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACpF,sBAAiB,GAAG,IAAI,4EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACpF,sBAAiB,GAAG,IAAI,4EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAepF,aAAQ,GAAG,CAAC,CAAS,EAAE,IAAqB,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QAEjE,aAAQ,GAAG,IAAI,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QAdZ,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,UAAU,CAAC;QACxC,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO,CAAC;QACtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO,CAAC;QAEtC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC3D,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,kEAAY,CAAC,UAAU,IAAI,kEAAY,CAAC,gBAAgB,CAAC;IACvE,CAAC;IAOD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IACD,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACzC,IAAI,IAAI,IAAI,SAAS,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;SAC9C;QACD,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;SACrD;QACD,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,IAAI,SAAS,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACpD;IACH,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAC1C,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;SAChD;QACD,IAAI,IAAI,KAAK,cAAc,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC;SAChD;QACD,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC;SACjD;IACH,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACvC,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;SACnD;QACD,IAAI,IAAI,KAAK,cAAc,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC;SACnD;QACD,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,IAAI,CAAC,eAAe,CAAC,kCAAkC,CAAC,CAAC;SAC1D;IACH,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACvC,IAAI,IAAI,KAAK,eAAe,EAAE;YAC5B,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,CAAC;SAClD;QACD,IAAI,IAAI,KAAK,YAAY,EAAE;YACzB,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;SAC9C;IACH,CAAC;IAEO,eAAe,CAAC,KAAK;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAChC,CAAC;;oFAtGU,kBAAkB;kGAAlB,kBAAkB;QCX/B,yEAEI;QAMA,yFACI;QADiC,uLAA8B;QAC/D,qEAAgF;QAChF,0EAAmC;QAAA,+DAAI;QAAA,4DAAO;QAClD,4DAAsB;QAGtB,yEAEI;QACA,wEACI;QAAA,wEACI;QAAA,uEACI;QAEA,oEACA;QAAA,kHAAmE;QAAC,4DAAI;QAChF,4DAAK;QAEL,gFACI;QACA,qIAIgB;QAEhB,qIAagB;QACpB,4DAAW;QAEX,2HAqBW;QAEX,gFACI;QACA,qIAIgB;QAEhB,qIAWgB;QACpB,4DAAW;QAEX,2HAqBW;QAEX,+GAGK;QAET,4DAAK;QAET,4DAAM;QACV,4DAAM;;QA9HkB,8FAAsC;QAQrC,0DAAe;QAAf,wEAAe;QAeb,0DAAc;QAAd,8EAAc;QAGnB,0DAA+B;QAA/B,4FAA+B;QAQI,0DAAc;QAAd,4FAAc;QAgBhD,0DAAU;QAAV,sEAAU;QAuBX,0DAAyB;QAAzB,sFAAyB;QAQU,0DAAc;QAAd,4FAAc;QAchD,0DAAU;QAAV,0EAAU;QAuBC,0DAAW;QAAX,uEAAW;;6FD3GhC,kBAAkB;cAN9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;gBAC1C,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;AA+GD,MAAM,UAAU,GAAiB;IAC/B;QACE,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;aACd;YACD;gBACE,IAAI,EAAE,cAAc;aACrB;YACD;gBACE,IAAI,EAAE,MAAM;aACb;SACF;KACF;CACF,CAAC;AAEF,MAAM,OAAO,GAAiB;IAC5B;QACE,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;aACd;YACD;gBACE,IAAI,EAAE,cAAc;aACrB;YACD;gBACE,IAAI,EAAE,MAAM;aACb;SACF;KACF;CACF,CAAC;AAEF,MAAM,OAAO,GAAiB;IAC5B;QACE,IAAI,EAAE,SAAS;QACf,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,eAAe;aACtB;YACD;gBACE,IAAI,EAAE,YAAY;aACnB;SACF;KACF;CACF,CAAC;AAEF,MAAM,SAAS,GAAiB;IAC9B;QACE,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,SAAS;aAChB,EAAE;gBACD,IAAI,EAAE,UAAU;aACjB,EAAE;gBACD,IAAI,EAAE,UAAU;aACjB,EAAE;gBACD,IAAI,EAAE,SAAS;aAChB,EAAE;gBACD,IAAI,EAAE,UAAU;aACjB,EAAE;gBACD,IAAI,EAAE,UAAU;aACjB;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;AE5LF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAI6B;;;;;;;;;;;ICqE/C,6EAA8C;IAAA,oEAAG;IAAA,uDAAmB;IAAA,4DAAI;IAAA,4DAAS;;;IAAhC,0DAAmB;IAAnB,uFAAmB;;;IAIxE,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IADG,0DAAe;IAAf,4IAAe;;;IAsBpD,0EACI;IAAA,0EACI;IAAA,wEACI;IAAA,yEAAQ;IAAA,8FAAmC;IAAA,4DAAS;IACxD,4DAAI;IACR,4DAAM;IACV,4DAAM;;AD9FC,MAAM,uBAAuB;IAUlC,YAAoB,WAAwB,EAAU,MAAc,EAAU,IAAgB;QAA1E,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAY;QAT9F,YAAO,GAAY,KAAK,CAAC;QACzB,SAAI,GAAQ,EAAE,CAAC;QACf,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAa,EAAE,CAAC;QAErB,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;IAIvB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACnC,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAClC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAClC,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAQM,aAAa,CAAC,KAAK;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,iBAAiB;QACf,MAAM,aAAa,GAAG,IAAI,QAAQ,EAAE,CAAC;QACrC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAG3E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kCAAkC,EAAE,aAAa,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACvF,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC;aACvD;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,uCAAuC,CAAC;aAChE;QACH,CAAC,CACA,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kDAAkD,CAAC;aAC9D,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,yBAAyB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACrE,CAAC,CACF,CAAC;IACN,CAAC;IAEH,QAAQ;QACN,IAAI,IAAI,GAAG;YACT,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACpH,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK;YACzD,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;YACvD,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACpH,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YAC3D,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YAC3G,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YAC3G,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;SACxH,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAE5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;;8FA3FU,uBAAuB;uGAAvB,uBAAuB;QCZpC,yEACI;QAAA,yEACI;QACA,8EACI;QAAA,0EACI;QAD6B,mJAAY,cAAU,IAAC;QACpD,wEAAgC;QAAA,8EAAmB;QAAA,4DAAK;QACxD,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QAEJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACR,4DAAM;QACN,0EACI;QAAA,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QACJ,wEACI;QAAA,sFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACJ;QAAA,4DAAiB;QACrB,4DAAI;QAEJ,2EACI;QAAA,6EACA;QADyD,2LAAmB;QAA5E,4DACA;QAAA,6EAEJ;QAFyB,+IAAS,eAAW,IAAC;QAA1C,4DAEJ;QAAA,4DAAM;QAEN,2EACI;QAAA,6EACA;QADmB,uJAAU,yBAAqB,IAAC;QAAnD,4DACA;QAAA,6EACJ;QADyB,+IAAS,uBAAmB,IAAC;QAAlD,4DACJ;QAAA,4DAAM;QAEN,uEACI;QAAA,4HAAiF;QACrF,4DAAM;QACN,iEAEA;QAAA,sHAEM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EAA0B;QAAA,wDAAgB;QAAA,4DAAO;QAErD,4DAAM;QACN,2EAEI;QAAA,8EAC6D;QAAA,iEAC7D;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAO;QAEX,4DAAW;QACf,4DAAM;QACV,4DAAM;QAEN,sHAMM;;QAtGY,0DAA0B;QAA1B,uFAA0B;QA0D6C,2DAAmB;QAAnB,8EAAmB;QAWnE,0DAAoB;QAApB,qFAAoB;QAI3B,0DAAY;QAAZ,6EAAY;QAQA,0DAAgB;QAAhB,iFAAgB;QAezC,0DAAa;QAAb,6EAAa;;6FDxFrB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AACA;;AAEO;AACP;AACA,yDAAyD,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AAEF;AACE;AAG0B;;;;;;;;;;;;;ICazE,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,oGAAyB;;;IAIjE,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;IAChD,yEAAwC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAK1D,yEAAuC;IAAA,wEAAY;IAAA,4DAAK;;;IACxD,yEAAwC;IAAA,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,mGAAwB;;;IAIhE,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;IACpD,yEAAwC;IAAA,uDAA+B;IAAA,4DAAK;;;IAApC,0DAA+B;IAA/B,+IAA+B;;;IAIvE,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;;IAClD,yEAEI;IAAA,6EACI;IAAA,+EAA6B;IAAA,oEAAS;IAAA,4DAAW;IAErD,4DAAS;IACT,mFACI;IAAA,sEACI;IAAA,6EACI;IADI,gXAAiC;IACrC,0EACI;IACA,+EAAuB;IAAA,gEAAI;IAAA,4DAAW;IACtC,2EAAiC;IAAA,mEAAO;IAAA,4DAAM;IAClD,4DAAM;IACV,4DAAS;IACT,iEAEA;IAAA,8EACI;IADI,iXAAiC;IACrC,2EACI;IACA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAAgC;IAAA,mEAAO;IAAA,4DAAM;IACjD,4DAAM;IAEd,4DAAS;IACL,iEAEJ;IAAA,4DAAM;IACV,4DAAW;IAEf,4DAAK;;;IA5B8B,0DAA0B;IAA1B,mFAA0B;;;IAiC7D,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEAAwC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAG/D,oEAA4D;;;IAC5D,oEAAkE;;;ADpEnE,MAAM,sBAAsB;IAK/B,YAAmB,MAAiB,EAAU,eAAgC,EAAU,cAA8B;QAAnG,WAAM,GAAN,MAAM,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAHtH,qBAAgB,GAAa,CAAC,cAAc,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAIxF,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,UAAU;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,cAAc;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAC,IAAI,EAAE,cAAc,EAAC;SAC/B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACX,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/C,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACnD,QAAQ,CAAC,EAAE;YACP,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,CAAC;;4FAxDQ,sBAAsB;sGAAtB,sBAAsB;kEACpB,wEAAY;;;;;QCd3B,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,8EACJ;QADkB,mJAAS,uBAAmB,IAAC;QAA3C,4DACJ;QAAA,4DAAiB;QACjB,sEACI;QAAA,4EAA+F;QAAvF,8IAAS,gBAAY,IAAC;QAAiE,yEAC/F;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,4EAEI;QAIA,4EACI;QAAA,kHAAmD;QACnD,kHAAsE;QAC1E,qEAAe;QAEf,6EACI;QAAA,kHAAgD;QAChD,kHAA+D;QACnE,qEAAe;QAGf,6EACI;QAAA,kHAAwD;QACxD,kHAAqE;QACzE,qEAAe;QAEf,6EACI;QAAA,kHAAoD;QACpD,kHAA4E;QAChF,qEAAe;QAEf,6EACI;QAAA,kHAAkD;QAClD,mHA8BK;QACT,qEAAe;QAGf,6EACI;QAAA,kHAAkD;QAClD,kHAAgE;QACpE,qEAAe;QAEf,mHAA4D;QAC5D,mHAAkE;QACtE,4DAAQ;QACR,gFAAqG;QACzG,4DAAM;QACN,iEAAI;;QAzEO,2DAAyB;QAAzB,sFAAyB;QAoEvB,2DAAiC;QAAjC,iGAAiC;QACb,0DAA0B;QAA1B,kGAA0B;QAExC,0DAAgC;QAAhC,kJAAgC;;6FDtEtC,sBAAsB;cALlC,uDAAS;eAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAChD;0SAE4B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEd3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AAEF;AACE;AAE0B;;;;;;;;;;;;ICUzE,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,oGAAyB;;;IACjE,yEAA+C;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAI9D,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;IAChD,yEAAwC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAAuC;IAAA,mEAAO;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAiC;IAAA,4DAAK;;;IAAtC,0DAAiC;IAAjC,gJAAiC;;;IAIzE,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;IACpD,yEAAwC;IAAA,uDAA+B;IAAA,4DAAK;;;IAApC,0DAA+B;IAA/B,+IAA+B;;;IAKvE,yEAAuC;IAAA,wEAAY;IAAA,4DAAK;;;IACxD,yEAAwC;IAAA,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,mGAAwB;;;IAIhE,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;;IAClD,yEAEI;IAAA,6EACI;IAAA,+EAA6B;IAAA,oEAAS;IAAA,4DAAW;IAErD,4DAAS;IACT,mFACI;IAAA,sEACI;IAAA,6EACI;IADI,gXAAkC;IACtC,0EACI;IACA,+EAAuB;IAAA,gEAAI;IAAA,4DAAW;IACtC,2EAAiC;IAAA,mEAAO;IAAA,4DAAM;IAClD,4DAAM;IACV,4DAAS;IACT,iEAEA;IAAA,8EACI;IADI,gXAAiC;IACrC,2EACI;IACA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAAgC;IAAA,mEAAO;IAAA,4DAAM;IACjD,4DAAM;IACV,4DAAS;IACT,iEAEJ;IAAA,4DAAM;IACV,4DAAW;IAGf,4DAAK;;;IA5B8B,0DAA0B;IAA1B,mFAA0B;;;IAkC7D,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEAAwC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAG/D,oEAA4D;;;IAC5D,oEAAkE;;;ADvEnE,MAAM,qBAAqB;IAK9B,YAAmB,MAAiB,EAAU,eAAgC;QAA3D,WAAM,GAAN,MAAM,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAH9E,qBAAgB,GAAa,CAAC,cAAc,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAInG,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,UAAU;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACX,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE;aACjC,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/C,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACnD,QAAQ,CAAC,EAAE;YACP,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,eAAe,CAAC,cAAc;QAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAC,IAAI,EAAE,cAAc,EAAC;SAC/B,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;;0FAvDQ,qBAAqB;qGAArB,qBAAqB;kEACnB,wEAAY;;;;;QCd3B,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,8EACJ;QADkB,kJAAS,uBAAmB,IAAC;QAA3C,4DACJ;QAAA,4DAAiB;QACjB,sEACI;QAAA,4EAA+F;QAAvF,6IAAS,gBAAY,IAAC;QAAiE,yEAC/F;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,4EAEI;QACA,4EACI;QAAA,iHAAmD;QACnD,iHAAsE;QACtE,kHAAmE;QACvE,qEAAe;QAEf,6EACI;QAAA,iHAAgD;QAChD,iHAA+D;QACnE,qEAAe;QAEf,6EACI;QAAA,iHAAmD;QACnD,iHAA8E;QAClF,qEAAe;QAEf,6EACI;QAAA,iHAAoD;QACpD,iHAA4E;QAChF,qEAAe;QAGf,6EACI;QAAA,iHAAwD;QACxD,iHAAqE;QACzE,qEAAe;QAEf,6EACI;QAAA,iHAAkD;QAClD,kHA8BK;QACT,qEAAe;QAIf,6EACI;QAAA,iHAAkD;QAClD,iHAAgE;QACpE,qEAAe;QAEf,kHAA4D;QAC5D,kHAAkE;QACtE,4DAAQ;QACR,gFAAqG;QACzG,4DAAM;;QA5EK,2DAAyB;QAAzB,sFAAyB;QAwEvB,2DAAiC;QAAjC,iGAAiC;QACb,0DAA0B;QAA1B,kGAA0B;QAExC,0DAAgC;QAAhC,kJAAgC;;6FDzEtC,qBAAqB;cANjC,uDAAS;eAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAE/C;+MAE4B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEb3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACF;AACE;AACL;AAEsD;;;;;;;;;;;;;;;;ICDxG,6EACE;IADsE,2UAA+B;IACrG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAeX,4EAAwE;IAAA,6EAAkB;IAAA,4DAAY;;;IACtG,4EAAoE;IAAA,2EAAgB;IAAA,4DAAY;;;IAO9F,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,mJAAmC;;;IAI3E,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IACpD,yEACE;IAAA,6EACE;IADM,gXAAgC;IACtC,uDACF;;IAAA,4DAAS;IACX,4DAAK;;;IAFD,0DACF;IADE,uLACF;;;IAgCF,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAyC;;IAAA,4DAAK;;;IAA9C,0DAAyC;IAAzC,8KAAyC;;;IAIjF,yEAA8D;IAAA,qEAAU;IAAA,4DAAK;;;IAC7E,yEAAgE;IAAA,uDACvD;IAAA,4DAAK;;;IADkD,0DACvD;IADuD,oIACvD;;;IAIT,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEAA2D;IAAA,uDAC3D;IAAA,4DAAK;;;IADsD,0DAC3D;IAD2D,+HAC3D;;;IAIA,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEAA2D;IAAA,uDAC3D;IAAA,4DAAK;;;IADsD,0DAC3D;IAD2D,+HAC3D;;;IAkBF,oEAA2E;;;IAMnE,yEAAsC;IAAA,+DAAI;IAAA,4DAAK;;;IAC/C,yEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,yFACF;;;IAIA,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;IACvD,yEAAwC;IAAA,uDAAiC;IAAA,4DAAK;;;IAAtC,0DAAiC;IAAjC,gJAAiC;;;IAIzE,yEAAyD;IAAA,yEAAc;IAAA,4DAAK;;;IAC5E,yEAA2D;IAAA,uDAC3D;;IAAA,4DAAK;;;IADsD,0DAC3D;IAD2D,uKAC3D;;;IAIA,yEAAyD;IAAA,oEAAS;IAAA,4DAAK;;;IACvE,yEAA2D;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,kGAAuB;;;IAGpF,oEAAyE;;;IACzE,oEAAgE;;;IAzBlE,4EACE;IAAA,4EACE;IAAA,sIAA+C;IAC/C,sIAEK;IACP,qEAAe;IAEf,4EACE;IAAA,sIAAuD;IACvD,sIAA8E;IAChF,qEAAe;IAEf,4EACE;IAAA,sIAA4E;IAC5E,sIACK;IACP,qEAAe;IAEf,6EACE;IAAA,wIAAuE;IACvE,wIAAuF;IACzF,qEAAe;IAEf,wIAAyE;IACzE,wIAAgE;IAClE,4DAAQ;;;;IA1BD,mGAAsC;IAwBtC,2DAAkC;IAAlC,mGAAkC;IACd,0DAAwB;IAAxB,oGAAwB;;;;IA5BvD,yEAEE;IAAA,uNA4Bc;IAChB,4DAAK;;;IA/BwD,4EAAmB;;;ADhG7E,MAAM,uBAAuB;IAelC,YAAmB,MAAiB,EAAU,oBAA0C;QAArE,WAAM,GAAN,MAAM,CAAW;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAdxF,qBAAgB,GAAa,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QAC9G,mBAAc,GAAa,CAAC,IAAI,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;QAMhF,UAAK,GAAG,IAAI,wDAAS,CAAC;YACpB,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,GAAG,EAAE,IAAI,0DAAW,EAAE;SACvB,CAAC,CAAC;IAIyF,CAAC;IAE7F,QAAQ;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/D,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACtC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,UAAU;QACR,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9C,IAAI,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC;QAExC,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAClC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC;YACzC,sFAAsF;YACtF,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;gBAClD,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;gBACjE,OAAO,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,OAAO;YAC3D,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,UAAU,EAAE;YACd,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,eAAC,kCAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,QAAQ,0CAAE,YAAY,0CAAE,WAAW,GAAG,OAAO,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,OAAM,CAAC,CAAC,IAAC,CAAC;SACrJ;QACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAEO,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CACpE,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,mEAAmE,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,aAAa;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yHAA8B,EAAE;YACjE,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,KAAK;YACnB,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;SAC9B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;;8FA1FU,uBAAuB;uGAAvB,uBAAuB;kEAGvB,wEAAY;;;;;QChBzB,yEACE;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,0EAAe;QAAA,4DAAY;QACtC,2EACA;QAD4B,+LAAwB,sFAAU,gBAAY,IAAtB;QAApD,4DACA;QAAA,yHAES;QACX,4DAAiB;QACnB,4DAAM;QAEN,iFACE;QAAA,0FACE;QAAA,sEACA;QAAA,uEACF;QAAA,4DAAuB;QACvB,uFAAwE;QACxE,4FACE;QAD+B,+JAAS,eAAW,IAAC;QACpD,gFAAkC;QAAA,iEAAK;QAAA,4DAAW;QACpD,4DAAwB;QACxB,8FAAuD;QAEvD,kIAAsG;QACtG,kIAAgG;QAClG,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,6EACE;QAAA,6EACE;QAAA,oHAAmD;QACnD,oHAAgF;QAClF,qEAAe;QAEf,6EACE;QAAA,oHAAoD;QACpD,oHAIK;QACP,qEAAe;QA6Bf,6EACE;QAAA,oHAAmD;QACnD,oHAAsF;QACxF,qEAAe;QAEf,6EACE;QAAA,oHAA6E;QAC7E,oHACc;QAChB,qEAAe;QAEf,6EACE;QAAA,oHAAyE;QACzE,oHACK;QACP,qEAAe;QAEf,6EACE;QAAA,oHAAyE;QACzE,oHACK;QACP,qEAAe;QAiBf,oHAA2E;QAC3E,oHA+BK;QACP,4DAAQ;QACR,gFAAqG;QACvG,4DAAM;QACN,iEAAI;;;QA5I8B,0DAAwB;QAAxB,mFAAwB;QAC3C,0DAAgB;QAAhB,gFAAgB;QAOL,0DAAmB;QAAnB,gFAAmB;QAIR,0DAAc;QAAd,oEAAc;QAMnC,0DAA0D;QAA1D,0HAA0D;QAC1D,0DAAsD;QAAtD,sHAAsD;QAK7D,0DAAyB;QAAzB,sFAAyB;QAgFzB,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAiCtC,0DAAgC;QAAhC,mJAAgC;;6FDjIpC,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;mNAI0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEhBzB;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGqB;;;AAKvD,MAAM,cAAc;IAIvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAG,UAAU,CAAC;IAGxD,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,OAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,sCAAsC;IACtC,yBAAyB,CAAC,OAAe,EAAE,EAAU;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,KAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,iBAAiB,CAAC,KAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,cAAc,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED,aAAa,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;;4EApCQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;6FAET,cAAc;cAH1B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,iBAAiB;IAO1B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QANpE,SAAI,GAAQ,EAAE,CAAC;QACf,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;QAElB,YAAO,GAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QA6C7D,cAAS,GAAG,EAAE,CAAC;QAEf,SAAI,GAAG;YACH,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;YACxB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;SAC1B,CAAC;IAhDF,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE5B,IAAI,IAAI,GAAG;YACP,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC9B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;YACxB,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC9B,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YACvC,aAAa,EAAE;gBACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAC9B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;gBAClC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;aACjC;YACD,MAAM,EAAE;gBACJ,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;gBACxB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;gBACxB,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;gBACpC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;aACnC;SACJ,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CACrC,IAAI,CAAC,EAAE;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/B,CAAC,CACJ,CAAC;IACN,CAAC;IASD,YAAY,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,IAAS,EAAE,KAAoB;QACzC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAEnB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,mBAAmB;YACnB,6BAA6B;YAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SAC9C;aAAM;YACH,wBAAwB;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;YACnE,kCAAkC;SACrC;IACL,CAAC;IAED,IAAI;QACA,IAAI,CAAC,IAAI,CAAC;QACV,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;;kFAjFQ,iBAAiB;iGAAjB,iBAAiB;QCR9B,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,2EACI;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAClB,4DAAW;;6FDKE,iBAAiB;cAL7B,uDAAS;eAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACnD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAA2C;;AAOpC,MAAM,SAAS;IACpB,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAC1B,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;kEARU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACE;AACL;AAC+D;;;;;;;;;;;;;;;;ICFjH,6EACE;IADsE,yUAA+B;IACrG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAeX,4EAAwE;IAAA,6EAAkB;IAAA,4DAAY;;;IACtG,4EAAoE;IAAA,2EAAgB;IAAA,4DAAY;;;IAO9F,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,mJAAmC;;;IAI3E,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;IACvD,yEAAwC;IAAA,uDAAkC;IAAA,4DAAK;;;IAAvC,0DAAkC;IAAlC,kJAAkC;;;IAS1E,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEAA2D;IAAA,uDAAoD;IAAA,4DAAK;;;IAAzD,0DAAoD;IAApD,+HAAoD;;;IAI/G,yEAAyD;IAAA,sEAAW;IAAA,4DAAK;;;IACzE,yEAA2D;IAAA,uDAAoD;IAAA,4DAAK;;;IAAzD,0DAAoD;IAApD,+HAAoD;;;IAI/G,yEAA8D;IAAA,qEAAU;IAAA,4DAAK;;;IAC7E,yEAAgE;IAAA,uDAAwD;IAAA,4DAAK;;;IAA7D,0DAAwD;IAAxD,mIAAwD;;;IAIxH,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;IACpD,yEACE;IAAA,uDACF;;IAAA,4DAAK;;;IADH,0DACF;IADE,+KACF;;;IAIA,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAyC;;IAAA,4DAAK;;;IAA9C,0DAAyC;IAAzC,8KAAyC;;;IAIjF,yEAA6D;IAAA,iEAAM;IAAA,4DAAK;;;;IACxE,yEACE;IAAA,6EACE;IADM,8WAAgC;IACtC,2EAAU;IAAA,kEAAO;IAAA,4DAAW;IAC9B,4DAAS;IACX,4DAAK;;;IACL,oEAA2C;;;IAG7C,oEAA2E;;;IAC3E,oEAAkE;;;ADpE/D,MAAM,qBAAqB;IAehC,YAAoB,MAAiB,EAAU,iBAAoC,EAAU,oBAA0C;QAAnH,WAAM,GAAN,MAAM,CAAW;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAdvI,qBAAgB,GAAa,CAAC,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAOvI,UAAK,GAAG,IAAI,wDAAS,CAAC;YACpB,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,GAAG,EAAE,IAAI,0DAAW,EAAE;SACvB,CAAC,CAAC;IAIwI,CAAC;IAE5I,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,iBAAiB,CAAC,oCAAoC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5E,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,UAAU;QACR,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9C,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAErC,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAClC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;YAC9B,sFAAsF;YACtF,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;gBAC/C,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC7D,OAAO,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,OAAO;YAC3D,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,UAAU,EAAE;YACd,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,eAAC,+BAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,0CAAE,YAAY,0CAAE,WAAW,GAAG,OAAO,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,OAAM,CAAC,CAAC,IAAC,CAAC;SAC/I;QACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAEO,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,GAAG,CAAC,KAAa;QACf,KAAK,CAAC,GAAG,CAAC;QACV,2CAA2C;QAC3C,wFAAwF;IAC1F,CAAC;IAED,aAAa,CAAC,aAAa;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kIAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;SAC9B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;;0FArFU,qBAAqB;qGAArB,qBAAqB;kEAGrB,wEAAY;;;;;QCjBzB,yEACE;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,0EAAe;QAAA,4DAAY;QACtC,2EACA;QAD4B,6LAAwB,oFAAU,gBAAY,IAAtB;QAApD,4DACA;QAAA,uHAES;QACX,4DAAiB;QACnB,4DAAM;QAEN,iFACE;QAAA,0FACE;QAAA,sEACA;QAAA,uEACF;QAAA,4DAAuB;QACvB,uFAAwE;QACxE,4FACE;QAD+B,6JAAS,eAAW,IAAC;QACpD,gFAAkC;QAAA,iEAAK;QAAA,4DAAW;QACpD,4DAAwB;QACxB,8FAAuD;QAEvD,gIAAsG;QACtG,gIAAgG;QAClG,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,6EACE;QAAA,6EACE;QAAA,kHAAmD;QACnD,kHAAgF;QAClF,qEAAe;QAEf,6EACE;QAAA,kHAAuD;QACvD,kHAA+E;QACjF,qEAAe;QAOf,6EACE;QAAA,kHAAyE;QACzE,kHAAoH;QACtH,qEAAe;QAEf,6EACE;QAAA,kHAAyE;QACzE,kHAAoH;QACtH,qEAAe;QAEf,6EACE;QAAA,kHAA6E;QAC7E,kHAA6H;QAC/H,qEAAe;QAEf,6EACE;QAAA,kHAAoD;QACpD,kHAEK;QACP,qEAAe;QAEf,6EACE;QAAA,kHAAmD;QACnD,kHAAsF;QACxF,qEAAe;QAEf,6EACE;QAAA,kHAAwE;QACxE,kHAIK;QACL,kHAA2C;QAC7C,qEAAe;QAEf,kHAA2E;QAC3E,kHAAkE;QACpE,4DAAQ;QACV,gFAAqG;QACrG,4DAAM;QACN,iEAAI;;;QAlF8B,0DAAwB;QAAxB,mFAAwB;QAC3C,0DAAgB;QAAhB,gFAAgB;QAOL,0DAAmB;QAAnB,gFAAmB;QAIR,0DAAc;QAAd,oEAAc;QAMnC,0DAA0D;QAA1D,0HAA0D;QAC1D,0DAAsD;QAAtD,sHAAsD;QAK7D,0DAAyB;QAAzB,sFAAyB;QAqDzB,2DAAoC;QAApC,iGAAoC;QAChB,0DAA0B;QAA1B,kGAA0B;QAExC,0DAAgC;QAAhC,mJAAgC;;6FDtElC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;8SAI0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEjBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACW;AACoD;AACzD;AACjC;AACsB;AAEoB;AACjB;AACS;AACH;AAC/B;AACoD;AACN;AACI;AACD;AACA;AACM;AACC;AACD;AACA;AAC1C;AACgC;AACD;AACS;AACsD;AACzD;AACZ;AACS;AAC/B;;;AAElD,MAAM,MAAM,GAAW;IAC5B,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,GAAG;IAC7C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,oFAAiB,EAAE;IAE7C;QACE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,sDAAS,CAAC;QAChE,SAAS,EAAE,uFAAkB;QAC7B,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mGAAoB,EAAE,WAAW,EAAE,CAAC,sDAAS,CAAC,EAAE;YAC/E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8GAAuB,EAAE;YACxD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,+FAAsB,EAAE;YAC5D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAE;YACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAuB,EAAE;YACxD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAuB,EAAE;YACxD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAuB,EAAE;YACxD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,+IAAqB,EAAE;YAC3D,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,iKAA6B,EAAE;YAC5E,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,0GAAsB,EAAE;YAC7D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,oGAAoB,EAAE;YAC3D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uGAAqB,EAAE;YAC5D,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,wGAAqB,EAAE;YAC7D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uGAAqB,EAAE;YAC5D,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mEAAa,EAAE;YAC1C,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,wGAAsB,EAAE;YAC7D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,4FAAkB,EAAE;YACrD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,kGAAoB,EAAE;YACzD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,2GAAuB,EAAE;YAC/D,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,qGAAuB,EAAE;SAClE;KACF;IACD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,2FAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE;CACrD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACxED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIF;AAC+B;;;;;;;;;;;AAMxE,MAAM,cAAc;IAMvB,YAAoB,WAAwB,EAAU,YAAiC,EAAU,MAAc;QAA3F,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAL/G,SAAI,GAAQ,EAAE,CAAC;QACf,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAa,EAAE,CAAC;QAErB,SAAI,GAAG,IAAI,CAAC;IAEZ,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAClD;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC3B,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACpF,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,OAAO,GAAG;YACV,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YAChD,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;SAEnD;QAED,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACxC,IAAI,CAAC,YAAY,GAAG,gCAAgC;YACpD,OAAO;SACV;QAED,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,sBAAsB;YAC1C,OAAO;SACV;QAED,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,sBAAsB;YAC1C,OAAO;SACV;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CACrC,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAEzC,2DAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YACxE,2DAAY,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC5D,2DAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC9D,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,YAAY,GAAG,gCAAgC,CAAC;QACzD,CAAC,CACJ,CAAC;IACN,CAAC;IAED,MAAM;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC,CAAC;;4EA9DQ,cAAc;8FAAd,cAAc;QCX3B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAoB;QAAA,oEACpB;QAAA,4DAAM;QACN,yEACI;QAAA,sEACI;QAAA,wEAA+E;QAAA,iFAC/E;QAAA,4DAAK;QACT,4DAAM;QACN,0EACI;QAD0B,0IAAY,cAAU,IAAC;QACjD,+EAEI;QAAA,0EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA0C;QAAA,kEAAM;QAAA,4DAAW;QAC/D,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,gFAA0C;QAAA,gEAAI;QAAA,4DAAW;QACzD,wEACA;QAAA,8EAEI;QAF8B,+JAAsB;QAEpD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACnE,4DAAS;QACb,4DAAiB;QACjB,iEACJ;QAAA,4DAAM;QACN,2EACI;QAAA,4EAA6C;QAAA,wDAAgB;QAAA,4DAAO;QACxE,4DAAM;QACN,2EACI;QAAA,8EACuF;QAAA,kEACvF;QAAA,4DAAS;QACb,4DAAM;QAEV,4DAAW;QACf,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QArCgB,0DAAuB;QAAvB,oFAAuB;QAeuC,2DAAmC;QAAnC,gGAAmC;QAEnF,0DAAmC;QAAnC,wFAAmC;QACzB,0DAA0C;QAA1C,2GAA0C;QAMf,0DAAgB;QAAhB,iFAAgB;;6FDvB5E,cAAc;cAL1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACvC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;AACF;;AAkD5C,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBA9C3B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;mIAGN,kBAAkB,cA9C3B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;6FAGN,kBAAkB;cAhD9B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAU;oBACV,sEAAe;oBACf,qEAAgB;oBAChB,iEAAc;oBACd,+DAAa;oBACb,qEAAc;oBACd,oFAAqB;oBACrB,uEAAc;oBACd,oFAAoB;oBACpB,yEAAe;oBACf,sFAAqB;oBACrB,qEAAa;oBACb,6EAAiB;oBACjB,uEAAc;oBACd,2EAAgB;oBAChB,iFAAmB;oBACnB,yEAAe;oBACf,2EAAgB;oBAChB,+EAAkB;oBAClB,8EAAiB;oBACjB,qEAAa;oBACb,uEAAc;oBACd,qEAAa;oBACb,qEAAa;oBACb,2EAAmB;oBACnB,+EAAkB;oBAClB,oFAAoB;oBACpB,4FAAwB;oBACxB,uEAAc;oBACd,uEAAe;oBACf,yEAAe;oBACf,2EAAgB;oBAChB,yEAAe;oBACf,oFAAoB;oBACpB,8EAAiB;oBACjB,qEAAa;oBACb,uEAAc;oBACd,qEAAa;oBACb,2EAAgB;oBAChB,2EAAgB;oBAChB,qEAAa;oBACb,mEAAa;oBACb,gEAAY;oBACZ,sEAAe;iBAChB;aACF;;;;;;;;;;;;;;AC5FD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;;;;;ICDrE,yEACI;IAAA,yEAAkB;IAAA,uEAAY;IAAA,4DAAK;IACvC,4DAAM;;;IACN,yEACI;IAAA,yEAAkB;IAAA,yEAAc;IAAA,4DAAK;IACzC,4DAAM;;;IAgBU,iFAAmE;IAAA,uDACnE;IAAA,4DAAa;;;IADmC,8EAAkB;IAAC,0DACnE;IADmE,+FACnE;;ADZb,MAAM,uBAAuB;IAShC,YAAoB,eAAgC,EAAU,QAAyB,EAC5E,SAAgD,EACtB,IAAI;QAFrB,oBAAe,GAAf,eAAe,CAAiB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAC5E,cAAS,GAAT,SAAS,CAAuC;QACtB,SAAI,GAAJ,IAAI;QACrC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC/B,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC,CAAC;QAEH,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,kBAAkB,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YAC1F,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YACxF,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SACrF;IACL,CAAC;IAED,UAAU;QACF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;;QACJ,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YACzB,IAAI,WAAI,CAAC,kBAAkB,0CAAE,EAAE,KAAI,IAAI,EAAE;gBACrC,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;iBAAM;gBACH,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;SACJ;IACL,CAAC;IAED,YAAY;QACR,IAAI,IAAI,GAAG;YACP,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC3D,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC7C,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YACnD,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;SAC5D,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;YACzC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;;QACV,IAAI,IAAI,GAAG;YACP,EAAE,QAAE,IAAI,CAAC,kBAAkB,0CAAE,EAAE;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;YAC3D,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC7C,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YACnD,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;SAC5D,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,CAAC,UAAU,GAAG,kCAAkC,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,CAAC,CAAC;IACN,CAAC;IAED,eAAe;QACX,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;QACxD,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,eAAe;QACX,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;;8FAnGQ,uBAAuB,kfAWpB,wEAAe;uGAXlB,uBAAuB;QCXpC,yEACI;QAAA,mHAEM;QACN,mHAEM;QACN,gEACA;QAAA,0EACI;QAD6B,+IAAU,cAAU,IAAC;QAClD,yEACI;QAAA,oFACI;QAAA,sEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,yEACI;QAAA,oFACI;QAAA,uEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,0EACI;QAAA,qFACI;QAAA,iFACI;QAAA,mIACa;QACjB,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACN,0EACI;QAAA,qFACI;QAAA,uEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,2EACI;QAAA,8EACyC;QADnB,gJAAS,gBAAY,IAAC;QACH,mEACzC;QAAA,4DAAS;QACT,8EACyC;QAAA,iEACzC;QAAA,4DAAS;QACb,4DAAM;QACN,2EACI;QAAA,0EAA0B;QAAA,wDAAc;QAAA,4DAAK;QAC7C,0EAAwB;QAAA,wDAAY;QAAA,4DAAK;QAC7C,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QA7CyB,0DAAkC;QAAlC,6IAAkC;QAGlC,0DAAkC;QAAlC,6IAAkC;QAIvD,0DAA0B;QAA1B,uFAA0B;QAciB,2DAAa;QAAb,mFAAa;QAc9C,0DAAgC;QAAhC,6FAAgC;QAKd,0DAAc;QAAd,+EAAc;QAChB,0DAAY;QAAZ,6EAAY;;6FD/BnC,uBAAuB;cALnC,uDAAS;eAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aACjD;;sBAYQ,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEtB/B;AAAA;AAAO,MAAM,QAAQ;CAGpB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { Category } from './../_model/category';\r\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function autocompleteStringValidator(validOptions: Array<Category>): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const option = validOptions.find(option => option?.categoryName === control.value);\r\n    \r\n    if (option) {\r\n      return null  /* valid option selected */\r\n    }\r\n    return { 'invalidAutocompleteString': { value: control.value } }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    form: any = {};\n    showMsg: boolean = false;\n    isSuccessful = false;\n    isSignUpFailed = false;\n    errorMessage = '';\n    registerForm: FormGroup;\n    favoriteSeason: string;\n    seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n    constructor(private authService: AuthService, private router: Router) {\n    }\n\n    ngOnInit() {\n        this.registerForm = new FormGroup({\n            'username': new FormControl(null, [Validators.required]),\n            'email': new FormControl(null),\n            'password': new FormControl(null, [Validators.required]),\n            'role': new FormControl(null, [Validators.required]),\n            'phoneNumber': new FormControl(null),\n        });\n    }\n\n    clear() {\n        this.registerForm = new FormGroup({\n            'username': new FormControl(null),\n            'email': new FormControl(null),\n            'password': new FormControl(null),\n            'role': new FormControl(null),\n            'phoneNumber': new FormControl(null),\n        });\n    }\n\n    onSubmit() {\n        let data = {\n            \"username\": this.registerForm.controls.username.value,\n            \"email\": this.registerForm.controls.email.value,\n            \"password\": this.registerForm.controls.password.value,\n            \"phoneNumber\": this.registerForm.controls.phoneNumber.value,\n            \"role\": [this.registerForm.controls.role.value],\n        };\n\n        this.authService.register(data).subscribe(\n            data => {\n                console.log(data);\n                this.isSuccessful = true;\n                this.isSignUpFailed = false;\n                this.clear();\n\n                this.showMsg = true;\n                setTimeout(() => {\n                    this.showMsg = false;\n                }, 2000);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n                this.isSignUpFailed = true;\n            }\n        );\n    }\n\n    selection = [];\n\n    list = [\n        { id: 1, role: 'admin' },\n        { id: 2, role: 'user' }\n    ];\n\n    getSelection(item) {\n        return this.selection.findIndex(s => s.id === item.id) !== -1;\n    }\n\n    changeHandler(item: any, event: KeyboardEvent) {\n        const id = item.id;\n\n        const index = this.selection.findIndex(u => u.id === id);\n        if (index === -1) {\n            // ADD TO SELECTION\n            // this.selection.push(item);\n            this.selection = [...this.selection, item];\n        } else {\n            // REMOVE FROM SELECTION\n            this.selection = this.selection.filter(user => user.id !== item.id)\n            // this.selection.splice(index, 1)\n        }\n    }\n\n    save() {\n        this.form;\n        this.form.controls['role'].setValue(this.selection);\n        console.log(this.selection);\n    }\n}\n","<div class=\"middle\" *ngIf=\"showMsg\">\n    <div class=\"col-xs-6\">\n        <p class=\"alert alert-success\">\n            <strong>Sales Order Successfully created!!</strong>\n        </p>\n    </div>\n</div>\n<div class=\"col-md-12\">\n    <div class=\"\">\n        <mat-card style=\"width: 90%;\">\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                <h1 style=\"text-align: center;\">Registration</h1>\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Username</mat-label>\n                                    <input matInput formControlName=\"username\" required>\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Password</mat-label>\n                                    <input matInput formControlName=\"password\" required>\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Email</mat-label>\n                                    <input matInput formControlName=\"email\" required>\n                                </mat-form-field>\n                            </p>\n                        </div>\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Phone number</mat-label>\n                                    <input matInput formControlName=\"phoneNumber\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Role</mat-label>\n                                    <mat-select formControlName=\"role\">\n                                        <mat-option value=\"admin\">Admin</mat-option>\n                                        <mat-option value=\"user\">User</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"button-container\">\n                    <span style=\"color: red;\"> {{errorMessage}}</span>\n                </div>\n                <div class=\"button-container\">\n                    <button class=\"btn btn-primary\" type=\"submit\"\n                        style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\n                    </button>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n</div>","import {PurchaseOrderDetail} from './purchaseOrderDetail';\nimport {Supplier} from './supplier';\n\nexport class PurchaseOrder {\n    status: string;\n    supplier: Supplier;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    purchaseOrderDetail: Array<PurchaseOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n    billDate: string;\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\r\nimport { numberInWords } from '../../utils/numToWords.js';\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './sales-table.component.html',\r\n  styleUrls: ['./sales-table.component.css']\r\n})\r\nexport class SalesTableComponent implements OnInit {\r\n  response: any;\r\n  totalPrice: number = 0;\r\n  totalTaxAmount: number = 0;\r\n  totalQty: number = 0;\r\n  amountInWords: string = '';\r\n  user: any = null;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService, private httpClient : HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.viewImage();\r\n    console.log('this.response', JSON.stringify((window['response'])));\r\n    let salesOrder = window['response'];\r\n    if (!salesOrder) {\r\n      const invoiceData = sessionStorage.getItem('invoiceData');\r\n      if (invoiceData) {\r\n        salesOrder = JSON.parse(invoiceData);\r\n      }\r\n    } else {\r\n      sessionStorage.setItem('invoiceData', JSON.stringify(salesOrder));\r\n    }\r\n\r\n    this.response = salesOrder;\r\n    document.title = 'Tax Invoice';\r\n    this._calculateTotals();\r\n    this.user = this.tokenStorageService.getUser();\r\n  }\r\n\r\n  printPDF() {\r\n    window.print();\r\n  }\r\n\r\n  private _calculateTotals() {\r\n    let totalPrice = 0;\r\n    let totalTaxAmount = 0;\r\n    let totalQty = 0;\r\n\r\n    console.log('response?.salesOrderDetail', this.response?.salesOrderDetail);\r\n    this.response?.salesOrderDetail?.forEach((salesOrder) => {\r\n      const amount = salesOrder?.price * salesOrder?.qtyOrdered;\r\n      const taxAmount = amount * salesOrder?.product?.gst / 100;\r\n      totalPrice += amount;\r\n      totalTaxAmount += taxAmount;\r\n      totalQty +=salesOrder?.qtyOrdered;\r\n    });\r\n\r\n    this.totalQty = Math.round(totalQty);\r\n    this.totalPrice = Math.round(totalPrice);\r\n    this.totalTaxAmount = Math.round(totalTaxAmount);\r\n\r\n    this.amountInWords = numberInWords(this.totalPrice);\r\n  }\r\n\r\n  uploadedImage: File;\r\n  dbImage: any;\r\n  postResponse: any;\r\n  successResponse: string;\r\n  image: any;\r\n\r\n  viewImage() {  \r\n    this.httpClient.get('http://localhost:8080/bank/image/info/logo3.jfif')\r\n      .subscribe(\r\n        res => {\r\n          this.postResponse = res;\r\n          this.dbImage = 'data:image/jpeg;base64,' + this.postResponse.image;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"page-content container\">\r\n    <div class=\"page-header text-blue-d2\">\r\n        <div class=\"container px-0\">\r\n            <div class=\"row pt-4\">\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <div class=\"d-flex\">\r\n                        <!--<div *ngIf=dbImage>\r\n                            <img [src]=\"dbImage\" class=\"logo\"\r\n                            style=\"width: 70px; height: 90%\">\r\n                        </div> -->\r\n                        <img src=\"/assets/images/indian-kisan-care.png\" class=\"logo\"\r\n                            style=\"width: 10%; height: 10%\">\r\n                        <div style=\"text-align: center; width: 70%\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\r\n                                    {{user?.bankAccount?.brandName}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.bankAccount?.gstNo}} | PAN:\r\n                                    {{user?.bankAccount?.panNo}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.bankAccount?.phoneNumber}} |\r\n                                    E:\r\n                                    {{user?.bankAccount?.email}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\" />\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Customer Name:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.customerName}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    GSTIN/UIN:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.gstIn !== '' ? response?.customer?.gstIn : 'NA'}}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Mobile Number:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.phoneNumber !== '' ? response?.customer?.phoneNumber : 'NA'}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Address:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.customer?.location?.cityName !== null ? response?.customer?.location?.cityName : 'NA'}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\r\n                                    {{(response?.billDate | date: 'dd/MM/yyyy hh:mm a')}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\r\n                                    {{(response?.dueDate !== null ? (response?.dueDate | date : 'dd/MM/yyyy'): 'NA')}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\r\n                                    <span class=\"text-600 text-90\">\r\n                                        {{response?.status}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <!-- ----------------------------------------- -->\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">S.No</th>\r\n                                <th scope=\"col\">Item & Description</th>\r\n                                <th scope=\"col\">HSN/SAC</th>\r\n                                <th scope=\"col\">Sell Price</th>\r\n                                <th scope=\"col\">Qty</th>\r\n                                <th scope=\"col\">GST%</th>\r\n                                <th scope=\"col\">Tax Amt</th>\r\n                                <!--<th scope=\"col\">Tax Amount</th>-->\r\n                                <th scope=\"col\">Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let cart of response?.salesOrderDetail; index as i;\">\r\n                                <td>{{i + 1}}.</td>\r\n                                <td>{{cart?.product?.productName}}</td>\r\n                                <td>{{cart?.product?.hsnNo}}</td>\r\n                                <td class=\"text-right pr-4\">₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\r\n                                <td class=\"text-right pr-4\">{{cart?.qtyOrdered || 0}}</td>\r\n                                <td>{{cart?.product?.gst}}%</td>\r\n                                <td class=\"text-right pr-4\">₹{{(cart?.qtyOrdered * (cart?.price *\r\n                                    (cart?.product?.gst/100))).toLocaleString('en-IN') || 0}}\r\n                                </td>\r\n                                <!-- <td class=\"text-right pr-4\">₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\r\n                                </td>-->\r\n                                <td class=\"text-right pr-4\">₹{{((cart?.price - (cart?.price * (cart?.product?.gst/100)))\r\n                                    * cart?.qtyOrdered).toLocaleString('en-IN') || 0}}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th colspan=\"7\"></th>\r\n                                <th class=\"text-right pr-4\">₹{{(totalPrice-totalTaxAmount).toLocaleString('en-IN')}}\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"7\" style=\"text-align: center;\">CGST</th>\r\n                                <th class=\"text-right pr-4\">₹{{(totalTaxAmount * 0.5).toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"7\" style=\"text-align: center;\">SGST</th>\r\n                                <th class=\"text-right pr-4\">₹{{(totalTaxAmount * 0.5).toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"4\">Total</th>\r\n                                <th class=\"text-right pr-4\">{{totalQty.toLocaleString('en-IN')}}</th>\r\n                                <th class=\"text-right pr-4\"></th>\r\n                                <th class=\"text-right pr-4\"></th>\r\n                                <th class=\"text-right pr-4\">₹{{totalPrice.toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\r\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\r\n                        {{ amountInWords }} only.\r\n                    </span>\r\n                    <hr>\r\n                    <!-- ---------------- -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    Cash\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    NA\r\n                                </span>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <div *ngIf=\"user.bankAccount != null\">\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Bank:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.bankName}}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.accountNo}}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.branchName}}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.ifscCode}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\r\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\r\n                                </div>\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\r\n                                    ₹{{(response?.currentBalance < 0 ) ? 0 :\r\n                                        response?.currentBalance.toLocaleString('en-IN') || 0 }} </div>\r\n\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ?\r\n                                                (response?.previousBalance - (response?.currentBalance)) :\r\n                                                0).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{(response?.previousBalance).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <br><br><br>\r\n                                        <div style=\"text-align: center;\">\r\n                                            <div class=\"my-2\">\r\n                                                <span class=\"text-600 text-90 font-weight-bold\">Authorised\r\n                                                    Signatory</span>\r\n                                            </div>\r\n                                            <div class=\"my-2\">\r\n                                                <span\r\n                                                    class=\"text-600 text-90 font-weight-bold\">({{user?.bankAccount?.brandName}})</span>\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- --------------------- -->\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <hr>\r\n                    <div style=\"text-align: center;\">\r\n                        <span class=\"text-300 text-30\">This is a computer generated invoice</span>\r\n                    </div>\r\n                    <div style=\"text-align: center;\" class=\"print-btn\">\r\n                        <button (click)=\"printPDF()\">Print</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>","import { Router } from '@angular/router';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RegisterComponent } from 'src/app/register/register.component';\r\nimport { AppComponent } from 'src/app/app.component';\r\n\r\n@Component({\r\n  selector: 'app-navigation-bar',\r\n  templateUrl: './navigation-bar.component.html',\r\n  styleUrls: ['./navigation-bar.component.css']\r\n})\r\nexport class NavigationBarComponent {\r\n  username: string;\r\n  super_admin = AppComponent.role_super_admin;\r\n  admin = AppComponent.role_admin;\r\n  user = AppComponent.role_user;\r\n\r\n  constructor(public dialog: MatDialog, private auth: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.username = localStorage.getItem('username')\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n\r\n  openDialog() {\r\n    this.router.navigate(['dashboard/register']);\r\n  }\r\n  \r\n  updateBankDetails() {\r\n    this.router.navigate(['dashboard/updateBankDetails']);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-light navbar-expand-sm bg-white shadow-sm\">\n    <div class=\"container-fluid\">\n        <span class=\"navbar-brand\"></span>\n        <div class=\"navbar-nav\">\n            <mat-icon class=\"person-img\" [matMenuTriggerFor]=\"menu\">person</mat-icon>\n            <mat-menu #menu=\"matMenu\">\n                <p *ngIf=\"super_admin\" mat-menu-item (click)=\"openDialog()\" style=\"border: white;\">Manage Account</p>\n                <p *ngIf=\"super_admin || admin\" mat-menu-item (click)=\"updateBankDetails()\" style=\"border: white;\">\n                    Update Bank Details</p>\n                <p mat-menu-item style=\"border: white;\" (click)=\"logout()\">Log Out</p>\n            </mat-menu>\n            <span class=\"person-img\" [matMenuTriggerFor]=\"menu\">{{username.substr(0,1).toUpperCase() +\n                username.substr(1)}}</span>\n        </div>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nexport class TokenStorageService {\n    constructor() {\n    }\n    signOut() {\n        window.sessionStorage.clear();\n    }\n    saveToken(token) {\n        window.sessionStorage.removeItem(TOKEN_KEY);\n        window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    getToken() {\n        return sessionStorage.getItem(TOKEN_KEY);\n    }\n    saveUser(user) {\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    getUser() {\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n}\nTokenStorageService.ɵfac = function TokenStorageService_Factory(t) { return new (t || TokenStorageService)(); };\nTokenStorageService.ɵprov = i0.ɵɵdefineInjectable({ token: TokenStorageService, factory: TokenStorageService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TokenStorageService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n//# sourceMappingURL=token-storage.service.js.map","import { Category } from './../../_model/category';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { autocompleteStringValidator } from 'src/app/validators/category.validator';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\n\r\n@Component({\r\n    selector: 'app-create-product',\r\n    templateUrl: './create-product.component.html',\r\n    styleUrls: ['./create-product.component.css']\r\n})\r\nexport class CreateProductComponent implements OnInit {\r\n    myControl = new FormControl();\r\n    options: Category[] = [];\r\n    filteredOptions: Observable<Category[]>;\r\n    listOfCategories = [];\r\n    productForm: FormGroup;\r\n    locationForm: FormGroup;\r\n    productUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    citiesList: any;\r\n    companies: any;\r\n\r\n    constructor(private location: LocationService,\r\n        private productService: ProductService,\r\n        private categoryService: CategoryService,\r\n        public dialogRef: MatDialogRef<CreateProductComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.productForm = new FormGroup({\r\n            categoryName: new FormControl(null, [Validators.required]),\r\n            productName: new FormControl(null, [Validators.required]),\r\n            price: new FormControl(null),\r\n            gst: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$'), Validators.min(0)]),\r\n            hsnNo: new FormControl(null),\r\n            currentPrice: new FormControl(null),\r\n            qty: new FormControl(null),\r\n            profit: new FormControl(null),\r\n        });\r\n\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required]),\r\n        });\r\n\r\n        if (data != null) {\r\n            this.productUpdateData = data?.data;\r\n            this.productForm.controls['categoryName'].setValue(this.productUpdateData.category.categoryName);\r\n            this.productForm.controls['productName'].setValue(this.productUpdateData.productName);\r\n            this.productForm.controls['price'].setValue(this.productUpdateData.price);\r\n            this.productForm.controls['gst'].setValue(this.productUpdateData.gst);\r\n            this.productForm.controls['hsnNo'].setValue(this.productUpdateData.hsnNo);\r\n            this.productForm.controls['currentPrice'].setValue(this.productUpdateData.currentPrice);\r\n            this.productForm.controls['qty'].setValue(this.productUpdateData.qty);\r\n            this.productForm.controls['profit'].setValue(this.productUpdateData.profit);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n            this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.fetchData();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.productForm.valid) {\r\n            if (this.productUpdateData?.id != null) {\r\n                this.updateProduct();\r\n            } else {\r\n                this.addProduct();\r\n            }\r\n        }\r\n    }\r\n\r\n    addProduct() {\r\n        const categoryName = this.productForm.controls.categoryName.value;\r\n        let category = this._findCategory(categoryName);\r\n\r\n        if (category == undefined) {\r\n            category = { 'categoryName': categoryName };\r\n        }\r\n\r\n        let hsnNo = this.productForm.controls.hsnNo.value;\r\n        if (hsnNo === null) {\r\n            hsnNo = 'NA';\r\n        }\r\n\r\n        let data = {\r\n            productName: this.productForm.controls.productName.value,\r\n            //price: this.productForm.controls.price.value,\r\n            gst: this.productForm.controls.gst.value,\r\n            hsnNo: hsnNo,\r\n            currentPrice: this.productForm.controls.currentPrice.value,\r\n            //qty: this.productForm.controls.qty.value,\r\n            category: category\r\n        };\r\n\r\n        this.productService.createProduct(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Product Successfully Updated..!';\r\n                // this.getCategoryList();\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    saveCategory(categoryName: string) {\r\n        let data = {\r\n            categoryName: categoryName\r\n        }\r\n        this.categoryService.createCategory(data).subscribe();\r\n    }\r\n\r\n    updateProduct() {\r\n        const selectedCategoryName = this.productForm.controls.categoryName.value;\r\n        const category = this._findCategory(selectedCategoryName);\r\n        let data = {\r\n            id: this.productUpdateData.id,\r\n            productName: this.productForm.controls.productName.value,\r\n            price: this.productForm.controls.price.value,\r\n            gst: this.productForm.controls.gst.value,\r\n            hsnNo: this.productForm.controls.hsnNo.value,\r\n            currentPrice: this.productForm.controls.currentPrice.value,\r\n            qty: this.productForm.controls.qty.value,\r\n            profit: this.productForm.controls.profit.value,\r\n            category,\r\n        };\r\n        this.productService.updateProduct(data).subscribe(res => {\r\n            if (res != null) {\r\n                let s = 0;\r\n                this.successMsg = 'Product Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n\r\n    }\r\n\r\n    getCategoryList() {\r\n        this.categoryService.getCategoryList().subscribe(data => {\r\n            this.options = data;\r\n            this.productForm.get('categoryName').setValidators([autocompleteStringValidator(data), Validators.required]);\r\n        });\r\n    }\r\n\r\n    fetchData() {\r\n        this.categoryService.getCategoryList().subscribe(data => {\r\n            this.listOfCategories = data;\r\n            this._valueChangesListner();\r\n        });\r\n    }\r\n\r\n    private _filter(value: string): Category[] {\r\n        if (!value) {\r\n            return this.listOfCategories;\r\n        }\r\n        const filterValue = value.toLowerCase();\r\n        const supplierList = this.listOfCategories.filter(option => option.categoryName.toLowerCase().includes(filterValue))\r\n        return supplierList;\r\n    }\r\n\r\n    private _findCategory(categoryName: string) {\r\n        return this.listOfCategories.find(option => option?.categoryName === categoryName);\r\n    }\r\n\r\n    private _valueChangesListner() {\r\n        this.filteredOptions = this.productForm.controls['categoryName'].valueChanges.pipe(\r\n            startWith(''),\r\n            map(value => this._filter(value))\r\n        );\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id==null\">\r\n        <h4 class=\"title\">Add Product</h4>\r\n    </div>\r\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id!=null\">\r\n        <h4 class=\"title\">Update Product</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"productForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"productName\" matInput placeholder=\"Product\" required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"categoryName\" [matAutocomplete]=\"supplierAuto\" aria-label=\"Number\" matInput\r\n                    placeholder=\"Category\" type=\"text\">\r\n                <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption>\r\n                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option?.categoryName\">\r\n                        {{option?.categoryName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"currentPrice\" matInput placeholder=\"SALE PRICE\">\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"hsnNo\" matInput placeholder=\"HSN/SAC\">\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"gst\" matInput placeholder=\"GST%\" required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!productForm.valid\" class=\"btn btn-primary\" type=\"submit\"\r\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\nconst AUTH_API = HttpClientHelper.baseURL + '/auth/';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    login(credentials): Observable<any> {\n        return this.http.post(AUTH_API + 'signin', {\n            username: credentials.username,\n            password: credentials.password\n        }, httpOptions);\n    }\n\n    register(user): Observable<any> {\n        return this.http.post(AUTH_API + 'signup', {\n            username: user.username,\n            email: user.email,\n            password: user.password,\n            role : user.role,\n        }, httpOptions);\n    }\n\n    logout() {\n        localStorage.clear();\n    }\n}\n","import { MatTableDataSource } from '@angular/material/table';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { Product } from '../_model/product';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from '../_services/product.service';\r\nimport { PurchaseOrder } from '../_model/purchaseOrder';\r\nimport { PurchaseOrderService } from '../_services/purchase-order.service';\r\nimport { Supplier } from '../_model/supplier';\r\nimport { SupplierService } from '../_services/supplier.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-purchase-order',\r\n  templateUrl: './purchase-order.component.html',\r\n  styleUrls: ['./purchase-order.component.css']\r\n})\r\nexport class PurchaseOrderComponent implements OnInit {\r\n  purchaseOrderDetailData: any;\r\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'totalAmount'];\r\n  filteredSuppliers: Observable<Supplier[]>;\r\n  filteredProducts: Observable<Product[]>;\r\n\r\n  suppliers: Supplier[];\r\n  products: Product[];\r\n\r\n  previousBalance = 0;\r\n  totalQty = 0;\r\n  totalAmount = 0;\r\n\r\n  purchaserOrderForm: FormGroup;\r\n  singleClickDisable = false;\r\n\r\n  minStartDate = new Date();\r\n  purchaseOrder: PurchaseOrder = new PurchaseOrder();\r\n  @ViewChild('searchProduct') searchProduct: ElementRef;\r\n  popupTitle = \"\";\r\n  popupsubtitle = \"\";\r\n  popupDescription = \"\";\r\n  @ViewChild('modalContent') modalContent: ElementRef;\r\n  popupMarkup = \"\";\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private productService: ProductService,\r\n    private supplierService: SupplierService,\r\n    private modalService: NgbModal,\r\n    private purchaseOrderService: PurchaseOrderService, private route: Router) {\r\n\r\n    this.suppliers = [];\r\n    this.products = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.singleClickDisable = false;\r\n    this.fetchData();\r\n    this._createForm();\r\n    console.log('this.purchaserOrderForm', this.purchaserOrderForm);\r\n  }\r\n\r\n  removeProduct(index: number) {\r\n    this.purchaseOrderDetailArr.removeAt(index);\r\n    this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\r\n  }\r\n\r\n  selectedProduct(selectedProduct: string) {\r\n    this.purchaserOrderForm.controls['productName'].setValue(null);\r\n    const product = this._findProduct(selectedProduct);\r\n    this._addProduct(product);\r\n    this.searchProduct.nativeElement.blur()\r\n  }\r\n\r\n  selectedSupplier(selectedSupplier: string) {\r\n    const supplier = this._findSupplier(selectedSupplier);\r\n    this._supplierBalanceData(supplier?.id);\r\n  }\r\n\r\n  fetchData() {\r\n    this.suppliers = [];\r\n    this.supplierService.getSupplierList().subscribe(data => {\r\n      data.forEach(x => {\r\n        if (x.supplierName != '') {\r\n          this.suppliers.push(x);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.productService.getProductsList().subscribe(data => {\r\n      this.products = data;\r\n      this._valueChangesListner();\r\n    });\r\n  }\r\n\r\n  getCurrentBalance() {\r\n    return this.totalAmount - this.amountPaid.value;\r\n  }\r\n\r\n  getTotalBalance() {\r\n    return this.previousBalance + this.getCurrentBalance();\r\n  }\r\n\r\n  showMsg: boolean = false;\r\n\r\n\r\n  showAlert(popupTitle: string, popupDescription: string, popupsubtitle: string, popupMarkup: string = \"\") {\r\n    this.popupTitle = popupTitle;\r\n    this.popupsubtitle = popupsubtitle;\r\n    this.popupDescription = popupDescription;\r\n    this.popupMarkup = popupMarkup;\r\n\r\n    this.modalService.open(this.modalContent, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  save(isPrintReq: boolean, content: any) {\r\n    this.singleClickDisable = true;\r\n    if (this.purchaseOrderDetailArr.value.length === 0) {\r\n      // alert('please select products, before submitting');\r\n      this.showAlert(\"Error\", 'please select products, before submitting', \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    }\r\n    const supplierName = this.purchaserOrderForm.get('supplierName').value;\r\n    let supplier = this._findSupplier(supplierName);\r\n\r\n    const purchaseOrder: PurchaseOrder = new PurchaseOrder();\r\n\r\n    if (supplier === undefined) {\r\n      supplier = this.saveSupplier(supplierName);\r\n    }\r\n    supplier.phoneNumber = this.purchaserOrderForm.get('motorVehicleNo').value;\r\n    purchaseOrder.supplier = supplier;\r\n    purchaseOrder.currentBalance = this.getCurrentBalance();\r\n    purchaseOrder.purchaseOrderDetail = this.purchaseOrderDetailArr.value;\r\n    purchaseOrder.totalPrice = this.totalAmount;\r\n    //purchaseOrder.vehicleNo = this.purchaserOrderForm.get('motorVehicleNo').value;\r\n    purchaseOrder.amountPaid = this.purchaserOrderForm.get('amountPaid').value;\r\n    purchaseOrder.dueDate = this.purchaserOrderForm.get('dueDate').value?.getTime();\r\n    purchaseOrder.billDate = this.purchaserOrderForm.get('billDate').value?.getTime();\r\n    purchaseOrder.previousBalance = this.getTotalBalance();\r\n\r\n    if (purchaseOrder.amountPaid < 0) {\r\n      // alert('Amount paid should be positive');\r\n      this.showAlert(\"Error\", 'Amount paid should be positive', \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    } else if (this.getTotalBalance() < 0) {\r\n      // alert('Amount paid should be equals to balance');\r\n      this.showAlert(\"Error\", 'Amount paid should be equals to balance', \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    } else if (this.getTotalBalance() <= 0) {\r\n      purchaseOrder.status = 'PAID';\r\n    } else if (purchaseOrder.amountPaid > 0) {\r\n      purchaseOrder.status = 'PARTIAL';\r\n    } else {\r\n      purchaseOrder.status = 'DUE';\r\n    }\r\n\r\n    if ((purchaseOrder.status === 'DUE' || purchaseOrder.status === 'PARTIAL') &&\r\n      (supplier.supplierName === \"\" || supplier.phoneNumber === \"\")) {\r\n      let alertMsg = \"<p>Please provide below. <br>\";\r\n      let fields = [];\r\n      if (supplier.supplierName === \"\") {\r\n        fields.push(`<span class=\"text-danger\">Supplier name</span>`);\r\n      }\r\n      if (supplier.phoneNumber === \"\") {\r\n        fields.push(`<span class=\"text-danger\">Phone number</span>`);\r\n      }\r\n      if (purchaseOrder.dueDate === undefined) {\r\n        fields.push(`<span class=\"text-danger\">Due date</span>`);\r\n      }\r\n      alertMsg = alertMsg + fields.join(\"<br>\") + \"</p>\";\r\n      this.showAlert(\"Error\", \"\", \"\", alertMsg);\r\n      this.singleClickDisable = false;\r\n      return;\r\n    }\r\n\r\n    if (purchaseOrder.amountPaid == null) {\r\n      purchaseOrder.amountPaid = 0.0;\r\n    }\r\n\r\n    this.purchaseOrder = purchaseOrder;\r\n\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size: 'sm' }).result.then((result) => {\r\n      this.purchaseOrderService\r\n        .createPurchaseOrder(purchaseOrder).subscribe(data => {\r\n          console.log(data);\r\n          this.singleClickDisable = false;\r\n          this.refreshAfterSave();\r\n          if (isPrintReq) {\r\n            this._printPdf(data);\r\n            //window.location.reload();\r\n          } else {\r\n            this.showMsg = true;\r\n            setTimeout(() => {\r\n              this.showMsg = false;\r\n            }, 2000);\r\n          }\r\n        },\r\n          error => {\r\n            console.log(error);\r\n            this.singleClickDisable = false;\r\n          });\r\n    }, (reason) => {\r\n      this.singleClickDisable = false;\r\n    });\r\n  }\r\n\r\n  saveSupplier(supplierName: string): any {\r\n    let data = {\r\n      supplierName: supplierName,\r\n      gstIn: 'NA',\r\n      phoneNumber: 'NA'\r\n    };\r\n    return data;;\r\n  }\r\n\r\n  refreshAfterSave() {\r\n    //this.route.navigate(['purchaseOrder'])\r\n    //this.route.navigateByUrl('/dashboard');\r\n    //window.location.reload();\r\n    this.previousBalance = 0;\r\n    this.totalAmount = 0;\r\n    this.purchaseOrderDetailData = [];\r\n    this._createForm();\r\n    this.fetchData();\r\n    this.totalQty = 0;\r\n  }\r\n\r\n  private _supplierBalanceData(supplierID: any) {\r\n    this.purchaseOrderService.getPurchaseOrderBalaceBySupplier(supplierID).subscribe((data: any) => {\r\n      this.previousBalance = data.balance;\r\n      this.purchaserOrderForm.get('motorVehicleNo').setValue(data.supplier.phoneNumber);\r\n    }, (error: any) => console.log(error));\r\n  }\r\n\r\n  private _printPdf(response) {\r\n    //const url = `${location.origin}/praveen-traders/#table`;\r\n    const url = `${location.origin}/#table`;\r\n    const myWindow = window.open(url, \"_blank\", \"width=800,height=600,left=250,right=150\");\r\n    myWindow['response'] = response;\r\n  }\r\n\r\n  private _filterSupplier(value: string): Supplier[] {\r\n    if (!value) {\r\n      this.previousBalance = 0.00;\r\n      return this.suppliers;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    const supplierList = this.suppliers.filter(option => option.supplierName.toLowerCase().includes(filterValue))\r\n    if (supplierList.length == 0) {\r\n      this.previousBalance = 0.00;\r\n    }\r\n    return supplierList;\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    if (!value) {\r\n      return this.products;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(option => option.productName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _findProduct(value: string): Product {\r\n    return this.products.find(option => option.productName === value);\r\n  }\r\n\r\n  private _findSupplier(value: string): Supplier {\r\n    return this.suppliers.find(option => option.supplierName === value);\r\n  }\r\n\r\n  private _initRow(product) {\r\n    return this._fb.group({\r\n      price: [product.price, [Validators.required, Validators.min(1), Validators.max(1000000)]],\r\n      qtyOrdered: [1, [Validators.required, Validators.min(1), Validators.max(10000)]],\r\n      product: [product]\r\n    });\r\n  }\r\n\r\n  private _addProduct(product: Product) {\r\n    let isProductAdded = true;\r\n    this.purchaseOrderDetailArr.value.forEach(element => {\r\n      if (product.productName === element.product.productName) {\r\n        alert('Product is already Added!!');\r\n        isProductAdded = false;\r\n      }\r\n    });\r\n\r\n    if (isProductAdded) {\r\n      const newRow = this._initRow(product);\r\n      this.purchaseOrderDetailArr.push(newRow);\r\n      this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\r\n    }\r\n  }\r\n\r\n  private _valueChangesListner() {\r\n    this.filteredSuppliers = this.purchaserOrderForm.controls['supplierName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterSupplier(value))\r\n    );\r\n\r\n    this.filteredProducts = this.purchaserOrderForm.controls['productName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProduct(value))\r\n    );\r\n\r\n    this.purchaseOrderDetailArr.valueChanges.subscribe((productList) => {\r\n      let totalAmount = 0;\r\n      let totalQtyCal = 0;\r\n      productList.forEach(product => {\r\n        const amount = Number(product.qtyOrdered) * Number(product.price);\r\n        //const taxAmount = amount * (product.product?.gst || 0) / 100;\r\n        //totalAmount += amount + taxAmount;\r\n        totalQtyCal += product.qtyOrdered;\r\n        totalAmount += amount;\r\n      });\r\n      this.totalQty = totalQtyCal;\r\n      this.totalAmount = Math.round(totalAmount);\r\n    });\r\n  }\r\n\r\n  private _createForm() {\r\n    this.purchaserOrderForm = this._fb.group({\r\n      supplierName: [''],\r\n      productName: [''],\r\n      motorVehicleNo: [''],\r\n      billDate: [new Date()],\r\n      dueDate: [],\r\n      purchaseOrderDetail: this._fb.array([]),\r\n      amountPaid: [],\r\n    });\r\n  }\r\n\r\n  get purchaseOrderDetailArr() {\r\n    return this.purchaserOrderForm.get('purchaseOrderDetail') as FormArray;\r\n  }\r\n\r\n  get amountPaid() {\r\n    return this.purchaserOrderForm.get('amountPaid') as FormControl;\r\n  }\r\n}\r\n","<div class=\"middle\" *ngIf=\"showMsg\">\r\n    <div class=\"col-xs-6\">\r\n        <p class=\"alert alert-success\">\r\n            <strong>Sales Order Successfully created!!</strong>\r\n        </p>\r\n    </div>\r\n</div>\r\n<form [formGroup]=\"purchaserOrderForm\">\r\n    <div class=\"d-flex\">\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Product</mat-label>\r\n                <input type=\"text\" #searchProduct aria-label=\"Product\" matInput formControlName=\"productName\" [matAutocomplete]=\"productAuto\">\r\n                <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedProduct($event.option.value)\">\r\n                    <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\r\n                        {{product.productName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field appearance=\"fill\" style=\"width:100%\">\r\n                <mat-label>Product</mat-label>\r\n                <mat-select (selectionChange)=\"selectedProduct($event.value)\">\r\n                    <mat-option *ngFor=\"let product of products\" [value]=\"product.productName\">\r\n                        {{product.productName}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field> -->\r\n        </div>\r\n\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Supplier</mat-label>\r\n                <input type=\"text\" aria-label=\"Supplier\" matInput formControlName=\"supplierName\" [matAutocomplete]=\"supplierAuto\">\r\n                <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedSupplier($event.option.value)\">\r\n                    <mat-option *ngFor=\"let supplier of filteredSuppliers | async\" [value]=\"supplier.supplierName\">\r\n                        {{supplier.supplierName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-group col-2\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Phone number</mat-label>\r\n                <input type=\"text\" aria-label=\"Motor Vehicle no\" matInput formControlName=\"motorVehicleNo\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Bill date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"billDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Due date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker2\" [min]=\"minStartDate\" formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n    <div class=\"mat-elevation-z8 purchase-order-container\">\r\n        <table formArrayName=\"purchaseOrderDetail\" [dataSource]=\"purchaseOrderDetailData\" mat-table>\r\n            <ng-container matColumnDef=\"sno\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">S. No</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\r\n                <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell>\r\n                    <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\r\n                        <mat-icon class=\"delete-button\">delete</mat-icon>\r\n                        <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                    </button>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"item\">\r\n                <th *matHeaderCellDef mat-header-cell>Item & Description</th>\r\n                <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Purchase Price</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\">\r\n                        <input matInput type=\"number\" formControlName=\"price\" required class=\"text-right\">\r\n                        <span matPrefix>₹&nbsp;</span>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('required')\">\r\n                            Price is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('min')\">\r\n                            Price more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('max')\">\r\n                            Price can't be greater than 10 lakhs\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"quantity\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\" class=\"text-right\">\r\n                        <input matInput type=\"number\" formControlName=\"qtyOrdered\" required>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('required')\">\r\n                            Quantity is required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('min')\">\r\n                            Quantity more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('max')\">\r\n                            Quantity can't be greater than 10 thousand\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-5\">\r\n                    <h4><b>{{ totalQty }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"amount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value | number : '1.0-2'}}</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"taxType\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\r\n          CGST/SGST <br> IGST Rate\r\n        </th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.get('product')?.value.gst}}%</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"taxAmount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100 | number : '1.0-2'}}\r\n        </td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>-->\r\n\r\n            <ng-container matColumnDef=\"totalAmount\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\r\n                <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n                    <!--₹{{element.get('price')?.value * element.get('qtyOrdered')?.value + element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100 | number : '1.0-2'}} -->\r\n                    ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value | number : '1.0-2'}}\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">\r\n                    <h4><b>{{ totalAmount | currency:'INR' }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n            <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n        </table>\r\n\r\n        <div class=\"total-container\">\r\n            <div>\r\n                <label for=\"name\">Current Balance : </label>\r\n                <span class=\"amount-read-only\">{{ ((getCurrentBalance() < 0) ? 0 : getCurrentBalance()) | currency:'INR' }}</span>\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">Previous Balance :</label>\r\n                <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">Total Pay Balance :</label>\r\n                <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">Amount Paid : </label>\r\n                <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\r\n            </div>\r\n            <br>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\" style=\"width: 12%;margin-left: 5px;\" [disabled]=\"singleClickDisable && !purchaserOrderForm.valid\" (click)=\"save(false, content)\">PLACE\r\n                ORDER</button>\r\n            <button type=\"submit\" class=\"btn btn-success\" style=\"width: 18%;margin-left: 5px;\" [disabled]=\"singleClickDisable\" (click)=\"save(true, content)\">PLACE ORDER & PRINT</button>\r\n            <button class=\"btn btn-warning\" style=\"width: 10%;margin-left: 5px;\" (click)=\"refreshAfterSave()\">CLEAR</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n\r\n<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">Order Summary</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p style=\"font-weight: 500;\">Please confirm below details before placing order</p>\r\n\r\n        <div style=\"width: 210px;margin: 25px 0px;\">\r\n            <div class=\"custom-row\">\r\n                <p>Order Status</p>\r\n                <p><span class=\"text-primary\" style=\"color: green !important\">{{purchaseOrder?.status}}</span></p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Amount Paid</p>\r\n                <p>₹{{purchaseOrder?.amountPaid}}</p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Balance amount</p>\r\n                <p>₹{{getTotalBalance()}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <p>\r\n            <span class=\"text-danger\">Note: Order placed can't be deleted later!</span>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalContent let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">{{popupTitle}}</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>{{popupsubtitle}}</strong></p>\r\n        <p>{{popupDescription}}</p>\r\n        <div [innerHTML]=\"popupMarkup\"></div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SupplierService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/supplier';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getSupplier(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createSupplier(supplier: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, supplier);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateSupplier(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteSupplier(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getSupplierList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n\r\n    createSupplierPurchase(supplier: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}/purchase`, supplier);\r\n    }\r\n    \r\n    getSupplierByName(supplierName: string): any {\r\n        const opts = { params: {'supplierName': supplierName}};\r\n        return this.http.get(`${this.baseUrl}/supplierName`, opts);\r\n    }\r\n}\r\n","import {SalesOrderDetail} from './sales-order-detail';\nimport {Customer} from './customer';\n\nexport class SalesOrder {\n    status: string;\n    customer: Customer;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    currentDue: number;\n    salesOrderDetail: Array<SalesOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n    billDate: string;\n    deliverStatus: string;\n    paymentMode: string;\n    updatedProductSalePriceList: Array<UpdateProduct>;\n}\n\nexport class UpdateProduct {\n    price: number;\n    id: number;\n    productName: string;\n}\n","import {SalesOrderService} from './../_services/sales-order.service';\r\nimport {PurchaseOrderService} from './../_services/purchase-order.service';\r\nimport {SupplierService} from './../_services/supplier.service';\r\nimport {CustomerService} from './../_services/customer.service';\r\nimport {ProductService} from '../_services/product.service';\r\nimport {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    productsCount: number;\r\n    customersCount: number;\r\n    suppliersCount: number;\r\n    purchaseOrdersCount: number;\r\n    salesOrdersCount: number;\r\n    totalCustomerBalance: number;\r\n    totalSupplierBalance: number;\r\n\r\n    constructor(private productService: ProductService, private customerService: CustomerService, private supplierService: SupplierService, private purchaseOrderService: PurchaseOrderService, private salesOrderService: SalesOrderService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.reload();\r\n    }\r\n\r\n    reload() {\r\n        this.productService.getProductsList().subscribe(data => {\r\n                console.log(data);\r\n                this.productsCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.customerService.getCustomerList().subscribe(data => {\r\n                console.log(data);\r\n                this.customersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.supplierService.getSupplierList().subscribe(data => {\r\n                console.log(data);\r\n                this.suppliersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.purchaseOrderService.getPurchaseOrderList().subscribe(data => {\r\n                console.log(data);\r\n                this.purchaseOrdersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.salesOrderService.getSalesOrderList().subscribe(data => {\r\n                console.log(data);\r\n                this.salesOrdersCount = data.length;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.salesOrderService.getAllCustomerSalesOrderBalance().subscribe(data => {\r\n                console.log(data);\r\n                this.totalCustomerBalance = data;\r\n            },\r\n            error => console.log(error));\r\n\r\n        this.purchaseOrderService.getAllSupplierPurchaseOrderBalace().subscribe(data => {\r\n                console.log(data);\r\n                this.totalSupplierBalance = data;\r\n            },\r\n            error => console.log(error));\r\n    }\r\n}\r\n","<!-- <div class=\"form-group\">\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Purchase</p>\r\n    <p>{{purchaseOrdersCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Sell</p>\r\n    <p>{{salesOrdersCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Products</p>\r\n    <p>{{productsCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Customers</p>\r\n    <p>{{customersCount}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Supplier</p>\r\n    <p>{{suppliersCount}}</p>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Customer Balance</p>\r\n    <p>{{totalCustomerBalance}}</p>\r\n  </button>\r\n\r\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\r\n    <p>Total Supplier Balance</p>\r\n    <p>{{totalSupplierBalance}}</p>\r\n  </button>\r\n</div> -->\r\n<div class=\"app-container\">\r\n\r\n\r\n    <div class=\"main-container flex-fill\">\r\n\r\n\r\n        <div class=\"container-fluid mt-2\">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter primary\">\r\n                                <i class=\"fa fa-code-forkl\"></i>\r\n                                <span class=\"count-numbers\">{{purchaseOrdersCount}}</span>\r\n                                <span class=\"count-name\">Total Purchase</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter danger\">\r\n                                <i class=\"fa fa-ticketa\"></i>\r\n                                <span class=\"count-numbers\">{{salesOrdersCount}}</span>\r\n                                <span class=\"count-name\">Total Sell</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter success\">\r\n                                <i class=\"fa fa-users\"></i>\r\n                                <span class=\"count-numbers\">{{totalCustomerBalance}}</span>\r\n                                <span class=\"count-name\">Total Customer Due</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-counter info\">\r\n                                <i class=\"fa fa-users1\"></i>\r\n                                <span class=\"count-numbers\">{{totalSupplierBalance}}</span>\r\n                                <span class=\"count-name\">Total Supplier Due</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\nimport { Category } from '../_model/category';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/category';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCategory(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    getCategoryByName(categoryName: string): any {\r\n        const opts = { params: {'categoryName': categoryName}};\r\n        return this.http.get(`${this.baseUrl}/categoryName`, opts);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createCategory(category: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, category);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateCategory(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteCategory(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getCategoryList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\nimport { CreateLocationComponent } from '../create-location/create-location.component';\r\n\r\n@Component({\r\n    selector: 'app-location-list',\r\n    templateUrl: './location-list.component.html',\r\n    styleUrls: ['./location-list.component.css']\r\n})\r\nexport class LocationListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['cityName', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private locationService: LocationService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getLocationList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getLocationList();\r\n        });\r\n    }\r\n\r\n    updateLocationModal(updateLocationModal): void {\r\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: { data: updateLocationModal }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getLocationList();\r\n        });\r\n    }\r\n\r\n    getLocationList() {\r\n        this.locationService.getLocationList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    deleteLocation(event) {\r\n        this.locationService.deleteLocation(event.id).subscribe(\r\n            response => {\r\n                this.getLocationList();\r\n            },\r\n            error => {\r\n                console.log(error)\r\n                alert(JSON.parse(error.error).errorMessage);\r\n            });\r\n    }\r\n}\r\n","<div>\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div class=\"pull-right\">\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Location\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"cityName\">\r\n            <th *matHeaderCellDef mat-header-cell>Location</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.cityName}} </td>\r\n            <td *matCellDef=\"let element\" hidden mat-cell> {{element.id}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateLocationModal(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                               \r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                        <button (click)=\"deleteLocation(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n    \r\n                    </button>\r\n\r\n                        <br>\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { PurchaseOrderService } from 'src/app/_services/purchase-order.service';\r\nimport { SalesOrderService } from 'src/app/_services/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-update-balance-sheet',\r\n  templateUrl: './supplier-update-balance-sheet.component.html',\r\n  styleUrls: ['./supplier-update-balance-sheet.component.css']\r\n})\r\nexport class SupplierUpdateBalanceSheetComponent implements OnInit {\r\n  productForm: FormGroup;\r\n  productUpdateData: any;\r\n\r\n  constructor(private purchaseOrderService: PurchaseOrderService,\r\n    public dialogRef: MatDialogRef<SupplierUpdateBalanceSheetComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    this.productForm = new FormGroup({\r\n      id: new FormControl(),\r\n      supplierName: new FormControl(),\r\n      currentBalance: new FormControl(),\r\n      payAmount: new FormControl(),\r\n    });\r\n\r\n    if (data != null) {\r\n      this.productUpdateData = data?.data;\r\n      //this.productForm.controls['supplierName'].disable()\r\n      //this.productForm.controls['currentBalance'].disable()\r\n      this.productForm.controls['id'].setValue(this.productUpdateData.supplier.id);\r\n      this.productForm.controls['supplierName'].setValue(this.productUpdateData.supplier.supplierName);\r\n      this.productForm.controls['currentBalance'].setValue(this.productUpdateData.currentBalance);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.productForm.valid) {\r\n        this.updateSupplierBalance();\r\n    }\r\n  }\r\n\r\n  updateSupplierBalance() {\r\n    let status: string = '';\r\n    const payAmount: number = Number(this.productForm.controls.payAmount.value);\r\n\r\n    if (payAmount < 0) {\r\n      alert('Pay amount should be positive');\r\n      return;\r\n    } else if (payAmount == 0) {\r\n      alert('Pay amount should not be ZERO');\r\n      return;\r\n    } else if (payAmount === this.productForm.controls.currentBalance.value) {\r\n      status = 'PAID';\r\n    } else if (payAmount < this.productForm.controls.currentBalance.value) {\r\n      status = 'DUE';\r\n    } else {\r\n      alert('Please pay amount less than due amount');\r\n      return;\r\n    }\r\n\r\n    let data = {\r\n      id: this.productForm.controls.id.value,\r\n      payAmount: payAmount,\r\n      status: status,\r\n    };\r\n\r\n    this.purchaseOrderService.updatePurchaseOrder(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      //this.errorMsg = error.error.errorMessage;\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n      this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"product-conatiner\">\r\n\r\n    <form [formGroup]=\"productForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Supplier name</mat-label>\r\n                <input formControlName=\"supplierName\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Current balance</mat-label>\r\n                <input type=\"text\" formControlName=\"currentBalance\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Pay amount</mat-label>\r\n                <input formControlName=\"payAmount\" matInput required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\"  (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!productForm.valid\" class=\"btn btn-primary\"\r\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/location';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getLocation(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    createLocation(Location: any): Observable<any> {\r\n        return this.http.post(`${this.baseUrl}`, Location);\r\n    }\r\n\r\n    updateLocation(value: any): Observable<any> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteLocation(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getLocationList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CompanyService } from 'src/app/_services/company.service';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\nimport { CreateProductComponent } from '../create-product/create-product.component';\r\n\r\n@Component({\r\n    selector: 'app-product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n    displayedColumns: string[] = ['SNo', 'productName', 'category', 'qty', 'salePrice', 'price', 'GST', 'productDesc'];\r\n    dataSource;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    constructor(public dialog: MatDialog, private productService: ProductService, private companyService: CompanyService) {\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getProductList();\r\n    }\r\n\r\n    getProductList() {\r\n        this.productService.getProductsList().subscribe(res => {\r\n            this.dataSource = res;\r\n            this.dataSource = new MatTableDataSource(res);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    createProduct(): void {\r\n        const dialogRef = this.dialog.open(CreateProductComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getProductList();\r\n        });\r\n    }\r\n\r\n    updateProduct(updateProduct): void {\r\n        const dialogRef = this.dialog.open(CreateProductComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: { data: updateProduct }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getProductList();\r\n        });\r\n    }\r\n\r\n    deleteProduct(productId) {\r\n        this.productService.deleteProduct(productId).subscribe(\r\n            response => {\r\n                this.getProductList();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n}\r\n\r\n\r\n\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"createProduct()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Product\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n\r\n        <ng-container matColumnDef=\"SNo\">\r\n            <th *matHeaderCellDef mat-header-cell>S.No</th>\r\n            <td *matCellDef=\"let element; let i = index;\" mat-cell> {{i + 1}}. </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"productName\">\r\n            <th *matHeaderCellDef mat-header-cell> Product</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.productName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"category\">\r\n            <th *matHeaderCellDef mat-header-cell> Category</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.category?.categoryName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"qty\">\r\n            <th *matHeaderCellDef mat-header-cell>Stock</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.qty}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th *matHeaderCellDef mat-header-cell> Purchase Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.price | number : '1.0-2'}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"salePrice\">\r\n            <th *matHeaderCellDef mat-header-cell> Selling Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"row-highlight\"><b>{{element.currentPrice  | number : '1.0-2'}}</b></td>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"profit\">\r\n        <th *matHeaderCellDef mat-header-cell> Profit</th>\r\n        <td *matCellDef=\"let element\" mat-cell> {{element.profit | number : '1.0-2'}} </td>\r\n    </ng-container> -->\r\n\r\n        <!--<ng-container matColumnDef=\"HSN/SAC\">\r\n        <th *matHeaderCellDef mat-header-cell> HAN/SAC</th>\r\n        <td *matCellDef=\"let element\" mat-cell> {{element.hsnNo}}</td>\r\n    </ng-container>-->\r\n\r\n        <ng-container matColumnDef=\"GST\">\r\n            <th *matHeaderCellDef mat-header-cell> GST</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.gst}}%</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"productDesc\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n            </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <div>\r\n                            <button (click)=\"updateProduct(element) \" class=\"btn btn-info \" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px  \">\r\n                            <div style=\"display:flex\">\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        </div>\r\n\r\n                        <br>\r\n                        <div>\r\n                            <button (click)=\"deleteProduct(element.id) \" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:-10px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                                <div style=\"display:flex \">\r\n                                    <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                    <div style=\"margin-left: 5px; \">Delete </div>\r\n                                </div>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns; sticky: true \" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns; \" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50] \" [pageSize]=\"50 \" showFirstLastButtons></mat-paginator>\r\n</div>","import {Injectable} from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    signOut() {\r\n        window.sessionStorage.clear();\r\n    }\r\n\r\n    public saveToken(token: string) {\r\n        window.sessionStorage.removeItem(TOKEN_KEY);\r\n        window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    }\r\n\r\n    public getToken(): string {\r\n        return sessionStorage.getItem(TOKEN_KEY);\r\n    }\r\n\r\n    public saveUser(user) {\r\n        window.sessionStorage.removeItem(USER_KEY);\r\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n    }\r\n\r\n    public getUser() {\r\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n    }\r\n}\r\n","import { SalesOrderService } from './../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { SalesReportDetailsComponent } from '../sales-report-details/sales-report-details.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sales-report',\r\n  templateUrl: './sales-report.component.html',\r\n  styleUrls: ['./sales-report.component.css']\r\n})\r\nexport class SalesReportComponent implements OnInit {\r\n  displayedColumns: string[] = ['billDate', 'dueDate', 'customerName', 'totalPrice', 'amountPaid', 'currentDueAmount', 'totalDueAmount', 'Action', 'Print'];\r\n  productColumns: string[] = ['id', 'productName', 'salesPrice', 'qtyOrdered'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  salesReports;\r\n\r\n  constructor(public dialog: MatDialog, private salesOrderService: SalesOrderService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getSalesOrderList(): void {\r\n    this.salesOrderService.getSalesOrderList().subscribe(res => {\r\n      this.salesReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearCustomerSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.salesReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.salesReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime() + 86399999;\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(salesReport => {\r\n        const dueDateTime = new Date(salesReport?.billDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(salesReport => salesReport?.customer?.customerName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.salesOrderService.deleteSalesOrder(event.salesOrderID).subscribe(\r\n      response => {\r\n        this.getSalesOrderList();\r\n      },\r\n      error => console.log(error));\r\n  }\r\n\r\n  getSalesOrder(event) {\r\n    this.salesOrderService.getSalesOrder(event.salesOrderID).subscribe(\r\n      response => {\r\n        this._printPdf(response);\r\n      },\r\n      error => console.log(error));\r\n  }\r\n\r\n  private _printPdf(response) {\r\n    const winHtml = `<a href=\"/dashboard/products\" target=\"_blank\"></a>`;\r\n    const winUrl = URL.createObjectURL(\r\n      new Blob([winHtml], { type: \"text/html\" })\r\n    );\r\n\r\n    const url = `http://localhost:4200/#/salesTable`;\r\n\r\n    console.log(\"url \", url);\r\n    const myWindow = window.open(url, \"win\", \"width=800,height=600,left=250,right=150, nodeIntegration=no\");\r\n    console.log(\"response\", response);\r\n    console.log('this.response2', JSON.stringify((window['response'])));\r\n    //myWindow.document.body.innerHTML\r\n    \r\n    //old\r\n    //const url = `${location.origin}/praveen-traders/#salesTable`;\r\n    //const url = `${location.origin}/#salesTable`;\r\n    //const myWindow = window.open(url, \"_blank\", \"width=800,height=600,left=250,right=150\");\r\n    myWindow['response'] = response;\r\n  }\r\n\r\n  updateProduct(updateProduct): void {\r\n    const dialogRef = this.dialog.open(SalesReportDetailsComponent, {\r\n      width: '950px',\r\n      disableClose: false,\r\n      data: { data: updateProduct }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getSalesOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n    <div class=\"form-group col-3\">\r\n        <mat-form-field class=\"example-form-field\">\r\n            <mat-label>Search Customer</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\" placeholder=\"Search Customer\">\r\n            <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearCustomerSearch()\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field>\r\n        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n            <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n            <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n        </mat-date-range-input>\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n            <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n        </mat-datepicker-toggle>\r\n        <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n        <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n        <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n        <ng-container matColumnDef=\"customerName\">\r\n            <th *matHeaderCellDef mat-header-cell>Customer</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.customer?.customerName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"billDate\">\r\n            <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n                <button (click)=\"updateProduct(element)\">\r\n                    {{element.billDate | date: 'dd/MM/yyyy hh:mm a'}}\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"dueDate\">\r\n            <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"currentDueAmount\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Current Due</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{(element.currentBalance\r\n                < 0) ? 0 : element.currentBalance.toLocaleString( 'en-IN') || 0}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"totalDueAmount\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Total Due</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\">\r\n                {{element.previousBalance.toLocaleString('en-IN') || 0}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"amountPaid\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\">\r\n                {{element.amountPaid.toLocaleString('en-IN') || 0}}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"totalPrice\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\">\r\n                {{element.totalPrice.toLocaleString('en-IN') || 0}}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Action\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n            <td *matCellDef=\"let element;\" mat-cell>\r\n                <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n                    <mat-icon class=\"delete-button\">delete</mat-icon>\r\n                </button>\r\n            </td>\r\n            <td mat-footer-cell *matFooterCellDef></td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Print\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Print</th>\r\n            <td *matCellDef=\"let element;\" mat-cell>\r\n                <button (click)=\"getSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n                    <mat-icon class=\"print-button\">print</mat-icon>\r\n                    <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n            </td>\r\n            <td mat-footer-cell *matFooterCellDef></td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\"\r\n            triggers=\"mouseenter:mouseleave\">\r\n            <ng-template #test>\r\n                <table [dataSource]=\"row.salesOrderDetail\" mat-table class=\"mat-elevation-z2\">\r\n                    <ng-container matColumnDef=\"id\">\r\n                        <th *matHeaderCellDef mat-header-cell>S.No</th>\r\n                        <td *matCellDef=\"let element; let index = index\" mat-cell>\r\n                            {{index+1}}\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"productName\">\r\n                        <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n                        <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"salesPrice\">\r\n                        <th *matHeaderCellDef mat-header-cell class=\"text-right\">Sales Price</th>\r\n                        <td *matCellDef=\"let element\" mat-cell class=\"text-right\">\r\n                            {{element.price.toLocaleString('en-IN') || 0}}\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"qtyOrdered\">\r\n                        <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n                        <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n                    </ng-container>\r\n\r\n                    <tr *matHeaderRowDef=\"productColumns;  sticky: true\" mat-header-row></tr>\r\n                    <tr *matRowDef=\"let row; columns: productColumns;\" mat-row></tr>\r\n                </table>\r\n            </ng-template>\r\n        </tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import { SalesOrderService } from '../../_services/sales-order.service';\r\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-sales-report',\r\n  templateUrl: './sales-report-details.component.html',\r\n  styleUrls: ['./sales-report-details.component.css']\r\n})\r\nexport class SalesReportDetailsComponent implements OnInit {\r\n  displayedColumns: string[] = ['productName', 'price', 'qtyOrdered', 'action'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  constructor(public dialog: MatDialog, private purchaseOrderService: SalesOrderService,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    if (data != null) {\r\n      this._setData(data?.data.salesOrderDetail);\r\n    }\r\n  }\r\n  ngOnInit(): void { }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.purchaseOrderService.deleteOrderDetails(event.salesOrderDetailID).subscribe(\r\n      response => {\r\n        this._setData(JSON.parse(response))\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Could not able to delete sales order since used in sales order');\r\n      });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n        <ng-container matColumnDef=\"productName\">\r\n            <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Purchase Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.price | number : '1.0-2'}}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"qtyOrdered\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n            <td *matCellDef=\"let element;\" mat-cell>\r\n                <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n          <mat-icon class=\"delete-button\">delete</mat-icon>\r\n          <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n        </button>\r\n            </td>\r\n            <td mat-footer-cell *matFooterCellDef></td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\">\r\n        </tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-action-bar-item',\r\n    templateUrl: './action-bar-item.component.html',\r\n    styleUrls: ['./action-bar-item.component.css']\r\n})\r\nexport class ActionBarItemComponent {\r\n    @Input() shadow: boolean = false;\r\n}\r\n","<button [class.shadow-sm]=\"shadow\" class=\"action-bar-item\">\r\n    <div class=\"hamburger-container\">\r\n        <div class=\"bar1\"></div>\r\n        <div class=\"bar2\"></div>\r\n        <div class=\"bar3\"></div>\r\n    </div>\r\n    <span _ngcontent-c1=\"\" class=\"action-bar-item-text\">Menu</span>\r\n</button>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { CompanyService } from 'src/app/_services/company.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\nimport { SupplierService } from 'src/app/_services/supplier.service';\r\n\r\n@Component({\r\n    selector: 'app-create-supplier',\r\n    templateUrl: './create-supplier.component.html',\r\n    styleUrls: ['./create-supplier.component.css']\r\n})\r\nexport class CreateSupplierComponent implements OnInit {\r\n\r\n    supplierForm: FormGroup;\r\n    locationForm: FormGroup;\r\n    supplierUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    citiesList: any;\r\n    companies: any;\r\n\r\n    constructor(private supplierService: SupplierService, private location: LocationService,\r\n        private companyService: CompanyService,\r\n        public dialogRef: MatDialogRef<CreateSupplierComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.supplierUpdateData = data;\r\n\r\n        this.supplierForm = new FormGroup({\r\n            cityName: new FormControl(null),\r\n            supplierName: new FormControl(null, [Validators.required]),\r\n            gstIn: new FormControl(null),\r\n            companyName: new FormControl(null),\r\n            phoneNumber: new FormControl(null),\r\n        });\r\n\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required]),\r\n        });\r\n\r\n        if (data != null) {\r\n            this.supplierUpdateData = data?.data;\r\n            this.supplierForm.controls['supplierName'].setValue(this.supplierUpdateData.supplierName);\r\n            this.supplierForm.controls['gstIn'].setValue(this.supplierUpdateData.gstIn);\r\n            this.supplierForm.controls['phoneNumber'].setValue(this.supplierUpdateData.phoneNumber);\r\n            this.supplierForm.controls['cityName'].setValue(this.supplierUpdateData.location);\r\n            this.supplierForm.controls['companyName'].setValue(this.supplierUpdateData.company);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n            this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCompanyList();\r\n        this.getlocationList();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.supplierForm.valid) {\r\n            if (this.supplierUpdateData?.id != null) {\r\n                this.updateSupplier();\r\n            } else {\r\n                this.saveSupplier();\r\n            }\r\n        }\r\n    }\r\n\r\n    saveSupplier() {\r\n        let data = {\r\n            supplierName: this.supplierForm.controls.supplierName.value,\r\n            gstIn: this.supplierForm.controls.gstIn.value,\r\n            location: this.supplierForm.controls.cityName.value,\r\n            company: this.supplierForm.controls.companyName.value,\r\n            phoneNumber: this.supplierForm.controls.phoneNumber.value,\r\n        };\r\n\r\n        this.supplierService.createSupplier(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Supplier Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n\r\n    }\r\n\r\n    updateSupplier() {\r\n        let data = {\r\n            id: this.supplierUpdateData?.id,\r\n            supplierName: this.supplierForm.controls.supplierName.value,\r\n            gstIn: this.supplierForm.controls.gstIn.value,\r\n            location: this.supplierForm.controls.cityName.value,\r\n            phoneNumber: this.supplierForm.controls.phoneNumber.value,\r\n            company: this.supplierForm.controls.companyName.value,\r\n        };\r\n\r\n        this.supplierService.updateSupplier(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = \"Supplier Successfully Updated..!\";\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        })\r\n    }\r\n\r\n    getlocationList() {\r\n        this.location.getLocationList().subscribe(res => {\r\n            this.citiesList = res;\r\n        });\r\n    }\r\n\r\n    getCompanyList() {\r\n        this.companyService.getCompanyList().subscribe(res => {\r\n            this.companies = res;\r\n        });\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\">\r\n        <h4 class=\"title\">Add Supplier</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"supplierForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Supplier Name\" formControlName=\"supplierName\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"GSTIN\" formControlName=\"gstIn\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-select placeholder=\"City\" formControlName=\"cityName\">\r\n                    <mat-option [value]=\"location\" *ngFor=\"let location of citiesList\">{{location.cityName}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-select placeholder=\"company\" formControlName=\"companyName\">\r\n                    <mat-option [value]=\"company\" *ngFor=\"let company of companies\">{{company.companyName}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Phone Number\" formControlName=\"phoneNumber\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;border-radius: 10px;\"\r\n                [disabled]=\"!supplierForm.valid\">Save</button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\nconst baseUrl = HttpClientHelper.baseURL + '/bank';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BankService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    createBank(bank: Object): Observable<Object> {\n        return this.http.post(`${baseUrl}`, bank);\n    }\n\n    uploadImage(bank: Object): Observable<Object> {\n        return this.http.post(`${baseUrl}/image`, bank);\n    }\n}\n","export class Company {\n    companyID: number;\n    companyName: string;\n    phoneNumber: string;\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\r\nimport { numberInWords } from '../../utils/numToWords.js';\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  response: any;\r\n  totalPrice: number = 0;\r\n  totalQty: number = 0;\r\n  amountInWords: string = '';\r\n  user: any = null;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log('this.response', JSON.stringify((window['response'])));\r\n    let purchaseOrder = window['response'];\r\n    if (!purchaseOrder) {\r\n      const invoiceData = sessionStorage.getItem('invoiceData');\r\n      if (invoiceData) {\r\n        purchaseOrder = JSON.parse(invoiceData);\r\n      }\r\n    } else {\r\n      sessionStorage.setItem('invoiceData', JSON.stringify(purchaseOrder));\r\n    }\r\n    \r\n    this.response = purchaseOrder;\r\n    document.title = 'Tax Invoice';\r\n    this._calculateTotals();\r\n    this.user = this.tokenStorageService.getUser();\r\n  }\r\n\r\n  printPDF() {\r\n    window.print();\r\n  }\r\n\r\n  private _calculateTotals() {\r\n    let totalPrice = 0;\r\n    let totalQty = 0;\r\n    console.log('response?.purchaseOrderDetail', this.response?.purchaseOrderDetail);\r\n    this.response?.purchaseOrderDetail?.forEach((purchaseOrder) => {\r\n      const amount = purchaseOrder?.price * purchaseOrder?.qtyOrdered;\r\n      const qty = purchaseOrder?.qtyOrdered;\r\n      //const taxAmount = amount * purchaseOrder?.product?.gst/100;\r\n      totalQty += qty;\r\n      totalPrice += amount;// + taxAmount;\r\n    });\r\n\r\n    this.totalPrice = Math.round(totalPrice);\r\n    this.totalQty = totalQty;\r\n    this.amountInWords = numberInWords(this.totalPrice);\r\n  }\r\n}\r\n","<div class=\"page-content container\">\r\n    <div class=\"page-header text-blue-d2\">\r\n        <div class=\"container px-0\">\r\n            <div class=\"row pt-4\">\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <div class=\"d-flex\">\r\n                        <img src=\"/assets/images/indian-kisan-care.png\" alt=\"image\" class=\"logo\"\r\n                            style=\"width: 10%; height: 10%\">\r\n                        <div style=\"text-align: center; width: 70%\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\r\n                                    {{user?.bankAccount?.brandName}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.bankAccount?.gstNo}} | PAN:\r\n                                    {{user?.bankAccount?.panNo}}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.bankAccount?.phoneNumber}} |\r\n                                    E: {{user?.bankAccount?.email}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\" />\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Supplier Name:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.supplierName}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    GSTIN/UIN:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.gstIn}}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Mobile Number:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.phoneNumber}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"my-2\">\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\r\n                                    Address:\r\n                                </span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    {{response?.supplier?.location?.cityName}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\r\n                                    {{(response?.billDate | date: 'dd/MM/yyyy hh:mm a')}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\r\n                                    {{response?.dueDate | date: 'dd/MM/yyyy'}}\r\n                                </div>\r\n\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\r\n                                    <span class=\"text-600 text-90\">\r\n                                        {{response?.status}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <!-- ----------------------------------------- -->\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">S.No</th>\r\n                                <th scope=\"col\">Item & Description</th>\r\n                                <th scope=\"col\">HSN/SAC</th>\r\n                                <th scope=\"col\">Purchase Rate</th>\r\n                                <th scope=\"col\">Quantity</th>\r\n                                <th scope=\"col\">Amount</th>\r\n                                <!--<th scope=\"col\">\r\n                                    <div style=\"text-align: center;\">CGST/SGST <br> IGST Rate</div>\r\n                                </th>\r\n                                <th scope=\"col\">Tax Amount</th>\r\n                                <th scope=\"col\">Total Amount</th>-->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let cart of response?.purchaseOrderDetail; index as i;\">\r\n                                <td>{{i + 1}}.</td>\r\n                                <td>{{cart?.product?.productName}}</td>\r\n                                <td>{{cart?.product?.hsnNo}}</td>\r\n                                <td class=\"text-right pr-4\">₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\r\n                                <td class=\"text-right pr-4\">{{cart?.qtyOrdered || 0}}</td>\r\n                                <td class=\"text-right pr-4\">₹{{(cart?.price * cart?.qtyOrdered).toLocaleString('en-IN')\r\n                                    || 0}}</td>\r\n                                <!--<td>{{cart?.product?.gst}}%</td>\r\n                                <td>₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\r\n                                </td>\r\n                                <td>\r\n                                    ₹{{(cart.price * cart.qtyOrdered + cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\r\n                                </td>-->\r\n                            </tr>\r\n                            <tr>\r\n                                <th colspan=\"4\">Total</th>\r\n                                <th class=\"text-right pr-4\">{{totalQty.toLocaleString('en-IN')}}</th>\r\n                                <th class=\"text-right pr-4\">₹{{totalPrice.toLocaleString('en-IN')}}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\r\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\r\n                        {{ amountInWords }} only.\r\n                    </span>\r\n                    <hr>\r\n                    <!-- ---------------- -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    Cash\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\r\n                                <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                    NA\r\n                                </span>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <div *ngIf=\"user.bankAccount != null\">\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Bank:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.bankName}}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.accountNo}}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.branchName}}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\r\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\r\n                                        {{user?.bankAccount?.ifscCode}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /.col -->\r\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\r\n                            <hr class=\"d-sm-none\" />\r\n                            <div class=\"text-grey-m2\">\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\r\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\r\n                                </div>\r\n                                <div class=\"my-2\">\r\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\r\n                                    ₹{{(response?.currentBalance < 0 ) ? 0 :\r\n                                        response?.currentBalance.toLocaleString('en-IN') || 0 }} </div>\r\n\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ?\r\n                                                (response?.previousBalance - (response?.currentBalance)) :\r\n                                                0).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"my-2\">\r\n                                            <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\r\n                                            <span class=\"text-600 text-90\">\r\n                                                ₹{{(response?.previousBalance).toLocaleString('en-IN') || 0 }}\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <br><br><br>\r\n                                        <div style=\"text-align: center;\">\r\n                                            <div class=\"my-2\">\r\n                                                <span class=\"text-600 text-90 font-weight-bold\">Authorised\r\n                                                    Signatory</span>\r\n                                            </div>\r\n                                            <div class=\"my-2\">\r\n                                                <span\r\n                                                    class=\"text-600 text-90 font-weight-bold\">({{user?.bankAccount?.brandName}})</span>\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- --------------------- -->\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\r\n                    <hr>\r\n                    <div style=\"text-align: center;\">\r\n                        <span class=\"text-300 text-30\">This is a computer generated invoice</span>\r\n                    </div>\r\n                    <div style=\"text-align: center;\" class=\"print-btn\">\r\n                        <button (click)=\"printPDF()\">Print</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>","import { PurchaseOrderService } from '../../../_services/purchase-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { SupplierUpdateBalanceSheetComponent } from '../update-supplier-balance-sheet/supplier-update-balance-sheet.component';\r\n\r\n@Component({\r\n  selector: 'app-balance-sheet',\r\n  templateUrl: './supplier-balance-sheet.component.html',\r\n  styleUrls: ['./supplier-balance-sheet.component.css']\r\n})\r\nexport class SupplierBalanceSheetComponent implements OnInit {\r\n  displayedColumns: string[] = ['supplierName', 'totalPrice', 'amountPaid', 'dueAmount', 'billDate', 'dueDate', 'action'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  salesReports;\r\n\r\n  constructor(private dialog: MatDialog, private purchaseOrderService: PurchaseOrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getSalesOrderList() {\r\n    this.purchaseOrderService.getAllSupplierPurchaseOrderBalanceSheet().subscribe(res => {\r\n      res.sort(function(a, b) {\r\n        return b.billDate - a.billDate;\r\n      });\r\n      this.salesReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearSupplierSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.salesReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.salesReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime();\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(salesReport => {\r\n        const dueDateTime = new Date(salesReport?.dueDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(salesReport => salesReport?.supplier?.supplierName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  pay(index: number) {\r\n    alert('s')\r\n    //this.salesOrderDetailArr.removeAt(index);\r\n    //this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n  }\r\n\r\n  updateBalance(updateBalance): void {\r\n    const dialogRef = this.dialog.open(SupplierUpdateBalanceSheetComponent, {\r\n      width: '450px',\r\n      disableClose: true,\r\n      data: { data: updateBalance }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getSalesOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-3\">\r\n    <mat-form-field class=\"example-form-field\">\r\n      <mat-label>Search Supplier</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\">\r\n      <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearSupplierSearch()\">\r\n        <mat-icon>clear</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-form-field> \r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n      <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"supplierName\">\r\n      <th *matHeaderCellDef mat-header-cell>Supplier</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.supplier?.supplierName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"totalPrice\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.totalPrice.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountPaid\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.amountPaid.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueAmount\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Due amount</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{element.currentBalance.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"billDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        {{element.billDate | date: 'dd/MM/yyyy'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        <button (click)=\"updateBalance(element)\" mat-icon-button aria-label=\"Pay Balance\">\r\n          <mat-icon>payment</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PurchaseOrderService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/purchaseOrder';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    createPurchaseOrder(invoice: any): Observable<any> {\r\n        return this.http.post(`${this.baseUrl}`, invoice);\r\n    }\r\n\r\n    getPurchaseOrderList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n\r\n    getPurchaseOrderBalaceBySupplier(supplierID: any): any {\r\n        return this.http.get(`${this.baseUrl}/supplier/${supplierID}`);\r\n    }\r\n\r\n    getAllSupplierPurchaseOrderBalace(): any {\r\n        return this.http.get(`${this.baseUrl}/supplier`);\r\n    }\r\n\r\n    getAllSupplierPurchaseOrderBalanceSheet(): any {\r\n        return this.http.get(`${this.baseUrl}/supplier/balance`);\r\n    }\r\n\r\n    updatePurchaseOrder(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteOrder(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    deleteOrderDetails(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/details/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getPurchaseOrderDetailsList(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/details/${id}`);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CompanyService } from 'src/app/_services/company.service';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { CreateCompanyComponent } from '../create-company/create-company.component';\r\n\r\n@Component({\r\n    selector: 'app-company-list',\r\n    templateUrl: './company-list.component.html',\r\n    styleUrls: ['./company-list.component.css']\r\n})\r\nexport class CompanyListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['companyName', 'phoneNumber', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCompanyList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCompanyList();\r\n        });\r\n    }\r\n\r\n    updateComapny(updateComapny): void {\r\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: { data: updateComapny }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCompanyList();\r\n        });\r\n    }\r\n\r\n    getCompanyList() {\r\n        this.companyService.getCompanyList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    deleteCompany(event) {\r\n        this.companyService.deleteCompany(event.id).subscribe(\r\n            response => {\r\n                this.getCompanyList();\r\n            },\r\n            error => {\r\n                console.log(error)\r\n                alert(JSON.parse(error.error).errorMessage);\r\n            });\r\n    }\r\n}\r\n","<div>\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div class=\"pull-right\">\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Company\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"companyName\">\r\n            <th *matHeaderCellDef mat-header-cell>Company</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.companyName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"phoneNumber\">\r\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateComapny(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                           \r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n                        <button (click)=\"deleteCompany(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                                <div style=\"display:flex \">\r\n                                    <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                    <div style=\"margin-left: 5px; \">Delete </div>\r\n                                </div>\r\n        \r\n                        </button>\r\n                        <br>\r\n\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n\r\n            </td>\r\n        </ng-container>\r\n\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClientHelper } from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SalesOrderService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/salesOrder';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    createSalesOrder(invoice: any): Observable<any> {\r\n        return this.http.post(`${this.baseUrl}`, invoice);\r\n    }\r\n\r\n    getSalesOrderList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n\r\n    getSalesOrderBalaceByCustomer(customerID: any): any {\r\n        return this.http.get(`${this.baseUrl}/customer/balance/${customerID}`);\r\n    }\r\n\r\n    getAllCustomerSalesOrderBalance(): any {\r\n        return this.http.get(`${this.baseUrl}/customer/`);\r\n    }\r\n\r\n    getAllCustomerSalesOrderBalanceSheet(): any {\r\n        return this.http.get(`${this.baseUrl}/customer/balance`);\r\n    }\r\n\r\n    updateSalesOrder(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    getBarChartReport(): any {\r\n        return this.http.get(`${this.baseUrl}/barChart`);\r\n    }\r\n\r\n    getSalesOrderByProductWise(): any {\r\n        return this.http.get(`${this.baseUrl}/product`);\r\n    }\r\n\r\n    getStockBook(productName: string): any {\r\n        const opts = { params: {'productName': productName}};\r\n        return this.http.get(`${this.baseUrl}/stock-book`,opts);\r\n    }\r\n\r\n    getStockBookByDate(productName, start: string, end: string): any {\r\n        const opts = { params: {'productName': productName, 'startDate': start, 'endDate': end}};\r\n        return this.http.get(`${this.baseUrl}/stock-book-by-date`,opts);\r\n    }\r\n\r\n    deleteSalesOrder(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    deleteOrderDetails(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/details/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getSalesOrder(salesOrderID: any): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${salesOrderID}`);\r\n    }\r\n}\r\n","import { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private roles: string[];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username: string;\r\n  static role_super_admin: boolean;\r\n  static role_admin: boolean;\r\n  static role_user: boolean;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n      AppComponent.role_super_admin = this.roles.includes('ROLE_SUPER_ADMIN');\r\n      AppComponent.role_admin = this.roles.includes('ROLE_ADMIN');\r\n      AppComponent.role_user = this.roles.includes('ROLE_USER');\r\n    }\r\n  }\r\n}\r\n","<div id=\"app\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-mobile-menu',\r\n    templateUrl: './mobile-menu.component.html',\r\n    styleUrls: ['./mobile-menu.component.scss']\r\n})\r\nexport class MobileMenuComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg bg-primary navbar-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">RK-FERTILIZER</a>\r\n    <button aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"\r\n            data-target=\"#navbarSupportedContent\" data-toggle=\"collapse\" type=\"button\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard\" routerLinkActive=\"active\">\r\n                    DASHBOARDS </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/products\">PRODUCTS</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/salesOrder\">SALES</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/add\">ADD PRODUCT</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/addCategory\"> ADD CATEGORY</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/supplier\"> SUPPLIER</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/location\"> LOCATION</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/company\"> COMPANY</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/dashboard/customer\"> CUSTOMER</a>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n</nav>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClientHelper } from '../_model/http-client-helper';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/customer';\r\n\r\n    constructor(private http: HttpClient, private tokenStorage: TokenStorageService,) {\r\n    }\r\n\r\n    header = new HttpHeaders().set(\"Authorization\", `Bearer ${this.tokenStorage.getToken()}`);\r\n\r\n    getCustomer(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`, { headers: this.header });\r\n    }\r\n\r\n    createCustomer(customer: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, customer, { headers: this.header });\r\n    }\r\n\r\n    updateCustomer(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value, { headers: this.header });\r\n    }\r\n\r\n    deleteCustomer(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\r\n    }\r\n\r\n    getCustomerList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`, { headers: this.header });\r\n    }\r\n\r\n    createCustomerSales(customer: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}/sales`, customer, { headers: this.header });\r\n    }\r\n\r\n    getCustomerByName(customerName: string): any {\r\n        const opts = { params: { 'customerName': customerName }, headers: this.header };\r\n        return this.http.get(`${this.baseUrl}/customerName`, opts);\r\n    }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    isVisible = false;\r\n    urlPath = [];\r\n\r\n    constructor(\r\n        private router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCurrentPage();\r\n    }\r\n\r\n    getCurrentPage() {\r\n        const path = this.router.url.split('/');\r\n        if (path.length === 2 && path[1] === 'dashboard') {\r\n            this.isVisible = true;\r\n        }\r\n        path.forEach((e) => {\r\n            if (e !== '') {\r\n                this.urlPath.push(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"app-container\">\r\n\r\n  <app-action-bar class=\"d-none d-sm-block\"></app-action-bar>\r\n\r\n  <div class=\"main-container flex-fill\">\r\n    <app-navigation-bar class=\"d-none d-sm-block\"></app-navigation-bar>\r\n    <!-- only Mobile and Tab View -->\r\n    <app-mobile-menu class=\"d-block d-sm-none\"></app-mobile-menu>\r\n    <div class=\"container-fluid mt-2\">\r\n      <div class=\"row\">\r\n        <nav aria-label=\"breadcrumb\">\r\n          <!-- <ol *ngIf=\"urlPath.length < 2; else visibleCrum\" class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item active\">\r\n                            <span>{{urlPath[0] | titlecase}}</span>\r\n                        </li>\r\n                    </ol> -->\r\n          <ng-template #visibleCrum>\r\n            <ol class=\"breadcrumb\">\r\n              <li *ngFor=\"let item of urlPath\" class=\"breadcrumb-item\">\r\n                {{urlPath.pop()}} {{item}}\r\n                <!-- <a [routerLink]=\"[item]\" *ngIf=\"urlPath.pop() != item; else activeMenu\" >{{ item | titlecase}}</a>\r\n                                <ng-template #activeMenu><span>{{ item | titlecase }}</span></ng-template> -->\r\n              </li>\r\n            </ol>\r\n          </ng-template>\r\n\r\n        </nav>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n\r\n          <!-- <div class=\"row\" *ngIf=\"isVisible\">\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter primary\">\r\n                        <i class=\"fa fa-code-fork\"></i>\r\n                        <span class=\"count-numbers\">12</span>\r\n                        <span class=\"count-name\">Flowz</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter danger\">\r\n                        <i class=\"fa fa-ticket\"></i>\r\n                        <span class=\"count-numbers\">599</span>\r\n                        <span class=\"count-name\">Instances</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter success\">\r\n                        <i class=\"fa fa-database\"></i>\r\n                        <span class=\"count-numbers\">6875</span>\r\n                        <span class=\"count-name\">Data</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                      <div class=\"card-counter info\">\r\n                        <i class=\"fa fa-users\"></i>\r\n                        <span class=\"count-numbers\">35</span>\r\n                        <span class=\"count-name\">Users</span>\r\n                      </div>\r\n                    </div>\r\n                  </div> -->\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { Category } from 'src/app/_model/category';\r\n\r\n@Component({\r\n  selector: 'app-create-category',\r\n  templateUrl: './create-category.component.html',\r\n  styleUrls: ['./create-category.component.css']\r\n})\r\nexport class CreateCategoryComponent implements OnInit {\r\n\r\n  categoryForm: FormGroup;\r\n  companies: Observable<Category[]>;\r\n  category: Category = new Category();\r\n  categoryUpdateData: any;\r\n  successMsg: any;\r\n  errorMsg: any;\r\n  constructor(private categoryService: CategoryService,\r\n    public dialogRef: MatDialogRef<CreateCategoryComponent>,\r\n\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    this.categoryUpdateData = data;\r\n\r\n    this.categoryForm = new FormGroup({\r\n      categoryName: new FormControl(null, [Validators.required]),\r\n      categoryDesc: new FormControl(null),\r\n    })\r\n\r\n    if (data != null) {\r\n      this.categoryForm.controls[\"categoryName\"].setValue(this.categoryUpdateData.data.categoryName);\r\n      this.categoryForm.controls[\"categoryDesc\"].setValue(this.categoryUpdateData.data.categoryDesc);\r\n    }\r\n  }\r\n\r\n  closeModal(): void {\r\n      this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.categoryForm.valid) {\r\n      if (this.categoryUpdateData?.data.id != null) {\r\n        this.updateCategory();\r\n      } else {\r\n        this.saveCategory();\r\n      }\r\n    }\r\n  }\r\n\r\n  saveCategory() {\r\n    let data = {\r\n      id: this.categoryUpdateData?.data.id,\r\n      categoryName: this.categoryForm.controls.categoryName.value,\r\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\r\n    }\r\n    this.categoryService.createCategory(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.successMsg = \"Category Successfully Created..!\";\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      this.errorMsg = error.error.errorMessage;\r\n    })\r\n  }\r\n\r\n  updateCategory() {\r\n    let data = {\r\n      id: this.categoryUpdateData?.data.id,\r\n      categoryName: this.categoryForm.controls.categoryName.value,\r\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\r\n    }\r\n    this.categoryService.updateCategory(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.successMsg = \"Category Successfully Updated..!\";\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      this.errorMsg = error.error.errorMessage;\r\n    })\r\n  }\r\n\r\n  getCategoryList() {\r\n    this.categoryService.getCategoryList().subscribe(data => {\r\n    }, error => console.log(error));\r\n  }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id==null\">\r\n        <h4 class=\"title\">Add Category</h4>\r\n    </div>\r\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id!=null\">\r\n        <h4 class=\"title\">Update Category</h4>\r\n    </div>\r\n    <hr>\r\n    \r\n    <form [formGroup]=\"categoryForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Category Name\" formControlName=\"categoryName\" required>\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input matInput placeholder=\"Category description\" formControlName=\"categoryDesc\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" class=\"btn btn-warning\" style=\"width: 25%;margin-left: 5px;\" (click)=\"closeModal()\"\r\n                aria-label=\"Close\">Cancel</button>\r\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;\"\r\n                [disabled]=\"!categoryForm.valid\">Save</button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { SalesOrderService } from 'src/app/_services/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-update-balance-sheet',\r\n  templateUrl: './customer-update-balance-sheet.component.html',\r\n  styleUrls: ['./customer-update-balance-sheet.component.css']\r\n})\r\nexport class UpdateBalanceSheetComponent implements OnInit {\r\n  productForm: FormGroup;\r\n  productUpdateData: any;\r\n  minStartDate = new Date();\r\n  errorMessage = '';\r\n\r\n  constructor(private salesOrderService: SalesOrderService,\r\n    public dialogRef: MatDialogRef<UpdateBalanceSheetComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    this.productForm = new FormGroup({\r\n      id: new FormControl(),\r\n      customerName: new FormControl(),\r\n      currentBalance: new FormControl(),\r\n      payAmount: new FormControl(),\r\n      dueDate: new FormControl(),\r\n    });\r\n\r\n    if (data != null) {\r\n      this.productUpdateData = data?.data;\r\n      this.productForm.controls['id'].setValue(this.productUpdateData.customer.id);\r\n      this.productForm.controls['customerName'].setValue(this.productUpdateData.customer.customerName);\r\n      this.productForm.controls['currentBalance'].setValue(this.productUpdateData.currentBalance);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.productForm.valid) {\r\n      if (this.productForm.controls.id.value != null) {\r\n        this.updateCustomerBalance();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateCustomerBalance() {\r\n    let status: string = '';\r\n    const payAmount: number = Number(this.productForm.controls.payAmount.value);\r\n\r\n    if (payAmount < 0) {\r\n      alert('Pay amount should be positive');\r\n      return;\r\n    } else if (payAmount == 0) {\r\n      alert('Pay amount should not be ZERO');\r\n      return;\r\n    } else if (payAmount === this.productForm.controls.currentBalance.value) {\r\n      status = 'PAID';\r\n    } else if (payAmount < this.productForm.controls.currentBalance.value) {\r\n      status = 'DUE';\r\n    } else {\r\n      alert('Please pay amount less than due amount');\r\n      return;\r\n    }\r\n\r\n    if (payAmount !== this.productForm.controls.currentBalance.value) {\r\n      if (!this.productForm.controls.dueDate.value) {\r\n        this.errorMessage = 'Please select Due date';\r\n        return;\r\n      }\r\n    }\r\n\r\n    let data = {\r\n      id: this.productForm.controls.id.value,\r\n      payAmount: payAmount,\r\n      status: status,\r\n      currentBalance: this.productForm.controls.currentBalance.value,\r\n      dueDate: this.productForm.controls.dueDate.value,\r\n    };\r\n\r\n    this.salesOrderService.updateSalesOrder(data).subscribe(res => {\r\n      if (res != null) {\r\n        this.closeModal();\r\n      }\r\n    }, error => {\r\n      //this.errorMsg = error.error.errorMessage;\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"product-conatiner\">\r\n\r\n    <form [formGroup]=\"productForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Customer name</mat-label>\r\n                <input formControlName=\"customerName\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Current balance</mat-label>\r\n                <input type=\"text\" formControlName=\"currentBalance\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Pay amount</mat-label>\r\n                <input formControlName=\"payAmount\" type=\"number\" matInput required>\r\n            </mat-form-field>\r\n            <br>\r\n        </div>\r\n\r\n        <mat-form-field>\r\n            <mat-label>Due date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker2\" [min]=\"minStartDate\" formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <div class=\"button-container\">\r\n            <span style=\"color: red;\">{{errorMessage}}</span>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!productForm.valid\" class=\"btn btn-primary\"\r\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { BalanceSheetComponent } from './balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MobileMenuComponent } from './menu/mobile-menu/mobile-menu.component';\nimport { TableModule } from 'primeng/table';\nimport { ActionBarComponent } from './menu/action-bar/action-bar.component';\nimport { ActionBarItemComponent } from './menu/action-bar-item/action-bar-item.component';\nimport { DemoMaterialModule } from './material.module';\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\nimport { CreateCompanyComponent } from './companies/create-company/create-company.component';\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\nimport { LocationListComponent } from './locations/location-list/location-list.component';\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { CreateProductComponent } from './products/create-product/create-product.component';\nimport { TableComponent } from './ui_modules/table/table.component';\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\nimport { UpdateBalanceSheetComponent } from './balance-sheet/customer-balance-sheet/update-customer-balance-sheet/customer-update-balance-sheet.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { SupplierBalanceSheetComponent } from './balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component';\nimport { SupplierUpdateBalanceSheetComponent } from './balance-sheet/supplier-balance-sheet/update-supplier-balance-sheet/supplier-update-balance-sheet.component';\nimport { DateAdapter } from '@angular/material/core';\nimport { ProfitSummaryComponent } from './reports/profit-summary/profit-summary.component';\nimport { StockBookComponent } from './reports/stock-book/stock-book.component';\nimport { PurchaseReportDetailsComponent } from './reports/purchase-report-details/purchase-report-details.component';\nimport { SalesReportDetailsComponent } from './reports/sales-report-details/sales-report-details.component';\nimport { UpdateBankInfoComponent } from './update-bank-info/update-bank-info.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { UpdateBankDetails } from './UpdateBankDetails/UpdateBankDetails.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavigationBarComponent } from './menu/navigation-bar/navigation-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateProductComponent,\n    ProductListComponent,\n    CreateCategoryComponent,\n    PurchaseOrderComponent,\n    CreateCustomerComponent,\n    CreateSupplierComponent,\n    CreateLocationComponent,\n    SalesOrderComponent,\n    BalanceSheetComponent,\n    SupplierUpdateBalanceSheetComponent,\n    SupplierBalanceSheetComponent,\n    ActionBarComponent,\n    ActionBarItemComponent,\n    NavigationBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    NotfoundComponent,\n    MobileMenuComponent,\n    CustomersListComponent,\n    CreateCompanyComponent,\n    CompanyListComponent,\n    CategoryListComponent,\n    CreateSupplierComponent,\n    SupplierListComponent,\n    LocationListComponent,\n    TableComponent,\n    SalesTableComponent,\n    SalesReportComponent,\n    PurchaseReportComponent,\n    UpdateBalanceSheetComponent,\n    ProfitSummaryComponent,\n    StockBookComponent,\n    PurchaseReportDetailsComponent,\n    SalesReportDetailsComponent,\n    UpdateBankInfoComponent,\n    UpdateBankInfoComponent,\n    UpdateBankDetails\n  ],\n  imports: [\n    TableModule,\n    DemoMaterialModule,\n    MatTableModule,\n    MatSortModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    NgbModule,\n    NgxPaginationModule,\n    RouterModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private dateAdapter: DateAdapter<Date>) {\n    dateAdapter.setLocale(\"en-in\"); // DD/MM/YYYY\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { CreateCategoryComponent } from '../create-category/create-category.component';\r\n\r\n@Component({\r\n  selector: 'app-category-list',\r\n  templateUrl: './category-list.component.html',\r\n  styleUrls: ['./category-list.component.css']\r\n})\r\n\r\nexport class CategoryListComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['categoryName', 'categoryDesc', 'id'];\r\n  dataSource;\r\n\r\n  constructor(private categoryService: CategoryService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategoryList();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\r\n      width: '550px',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getCategoryList();\r\n    });\r\n  }\r\n\r\n  updateCategory(updateCategory): void {\r\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\r\n      width: '550px',\r\n      disableClose: true,\r\n      data: { data: updateCategory }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getCategoryList();\r\n    });\r\n  }\r\n\r\n  getCategoryList() {\r\n    this.categoryService.getCategoryList().subscribe(data => {\r\n      this.dataSource = data;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  deleteCategory(event) {\r\n    this.categoryService.deleteCategory(event.id).subscribe(\r\n      response => {\r\n        this.getCategoryList();\r\n      },\r\n      error => {\r\n        console.log(JSON.parse(error.error).errorMessage);\r\n        alert(JSON.parse(error.error).errorMessage);\r\n      });\r\n  }\r\n}\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\">\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\">Add Category </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"categoryName\">\r\n            <th mat-header-cell *matHeaderCellDef>Category</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.categoryName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"categoryDesc\">\r\n            <th mat-header-cell *matHeaderCellDef> Description </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.categoryDesc}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef> Action </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n\r\n                <button class=\"kebab-menu-btn\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n          <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n          <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n        </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateCategory(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                     </button>\r\n                        <br>\r\n                        <button (click)=\"deleteCategory(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n                        </button\r\n                        ><br>\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>","import { MatTableDataSource } from '@angular/material/table';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { Product } from '../_model/product';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from '../_services/product.service';\r\nimport { SalesOrder, UpdateProduct } from '../_model/sales-order';\r\nimport { SalesOrderService } from '../_services/sales-order.service';\r\nimport { Customer } from '../_model/customer';\r\nimport { CustomerService } from '../_services/customer.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-sales-order',\r\n  templateUrl: './sales-order.component.html',\r\n  styleUrls: ['./sales-order.component.css']\r\n})\r\nexport class SalesOrderComponent implements OnInit {\r\n  salesOrderDetailData: any;\r\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'totalAmount'];\r\n  filteredCustomers: Observable<Customer[]>;\r\n  filteredProducts: Observable<Product[]>;\r\n\r\n  customers: Customer[];\r\n  products: Product[];\r\n\r\n  previousBalance = 0;\r\n  totalQty = 0;\r\n  totalAmount = 0;\r\n\r\n  salesOrderForm: FormGroup;\r\n  singleClickDisable = false;\r\n  motorVehicleNo: any;\r\n  selected_deliver_status = 'DELIVERED';\r\n  selected_payment_mode = 'CASH';\r\n  @ViewChild('searchProduct') searchProduct: ElementRef;\r\n  minStartDate = new Date();\r\n  popupTitle = \"\";\r\n  popupsubtitle = \"\";\r\n  popupDescription = \"\";\r\n  @ViewChild('modalContent') modalContent: ElementRef;\r\n  popupMarkup = \"\";\r\n  salesOrder: SalesOrder = new SalesOrder();\r\n\r\n  changeText: boolean;\r\n  updatedProductSalePriceList: UpdateProduct[] = [];\r\n  priceChangeHistory: any = {};\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private productService: ProductService,\r\n    private modalService: NgbModal,\r\n    private customerService: CustomerService,\r\n    private salesOrderService: SalesOrderService) {\r\n\r\n    this.changeText = false;\r\n    this.customers = [];\r\n    this.products = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.singleClickDisable = false;\r\n    this.fetchData();\r\n    this._createForm();\r\n    console.log('this.salesOrderForm', this.salesOrderForm);\r\n  }\r\n\r\n  removeProduct(index: number) {\r\n    const temp = this.salesOrderDetailArr.value[index];\r\n    const tempIndex = this.updatedProductSalePriceList.findIndex(item => item.id === temp.product.id);\r\n    if (tempIndex !== -1) {\r\n      this.updatedProductSalePriceList.splice(tempIndex, 1);\r\n    }\r\n\r\n    this.priceChangeHistory[temp.product.id] = undefined;\r\n\r\n    this.salesOrderDetailArr.removeAt(index);\r\n    this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n    this.calculateAllAmounts(this.salesOrderDetailArr.value);\r\n  }\r\n\r\n  selectedProduct(selectedProduct: string) {\r\n    this.salesOrderForm.controls['productName'].setValue(null);\r\n    this.searchProduct.nativeElement.blur();\r\n\r\n    const product = this._findProduct(selectedProduct);\r\n    if (product.qty <= 0) {\r\n      // alert('Stock is not avaiable');\r\n      this.showAlert(\"Error\", \"Stock is not avaiable\", \"\");\r\n      // this.salesOrderForm = this._fb.group({\r\n      //productName: ['']\r\n      //});\r\n      return;\r\n    }\r\n    this._addProduct(product);\r\n    this.calculateAllAmounts(this.salesOrderDetailArr.value)\r\n  }\r\n\r\n  selectedCustomer(selectedCustomer: string) {\r\n    const customer = this._findCustomer(selectedCustomer);\r\n    this._customerBalanceData(customer?.id);\r\n  }\r\n\r\n  fetchData() {\r\n    this.customers = [];\r\n    this.customerService.getCustomerList().subscribe(data => {\r\n      data.forEach(x => {\r\n        if (x.customerName != '') {\r\n          this.customers.push(x);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.productService.getProductsList().subscribe(data => {\r\n      this.products = data;\r\n      this._valueChangesListner();\r\n    });\r\n  }\r\n\r\n  getCurrentBalance() {\r\n    return this.totalAmount - this.amountPaid.value;\r\n  }\r\n\r\n  getTotalBalance() {\r\n    return this.previousBalance + this.getCurrentBalance();\r\n  }\r\n\r\n  showAlert(popupTitle: string, popupDescription: string, popupsubtitle: string, popupMarkup: string = \"\", callback: any = () => { }) {\r\n    this.popupTitle = popupTitle;\r\n    this.popupsubtitle = popupsubtitle;\r\n    this.popupDescription = popupDescription;\r\n    this.popupMarkup = popupMarkup;\r\n\r\n    this.modalService.open(this.modalContent, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      callback(\"ok\");\r\n    }, (reason) => {\r\n      callback(\"cancel\");\r\n    });\r\n  }\r\n\r\n  showMsg: boolean = false;\r\n\r\n  save(isPrintReq: boolean, content: any) {\r\n    this.singleClickDisable = true;\r\n    if (this.salesOrderDetailArr.value.length === 0) {\r\n      // alert('please select products, before submitting');\r\n      this.showAlert(\"Error\", \"please select products, before submitting\", \"\");\r\n      this.singleClickDisable = false;\r\n      return;\r\n    }\r\n\r\n    let isStockAvail = true;\r\n    this.salesOrderDetailArr.value.forEach(value => {\r\n      if (value.product.qty < value.qtyOrdered) {\r\n        // alert('No Stock for product: ' + value.product.productName);\r\n        this.showAlert(\"Error\", 'No Stock for product: ' + value.product.productName, \"\");\r\n\r\n        isStockAvail = false;\r\n      }\r\n\r\n      if (value.qtyOrdered === 0) {\r\n        // alert('Please add Quantity to : ' + value.product.productName);\r\n        this.showAlert(\"Error\", \"Please add Quantity to : \" + value.product.productName, \"\");\r\n        isStockAvail = false;\r\n      }\r\n    });\r\n\r\n    if (isStockAvail) {\r\n      const customerName = this.salesOrderForm.get('customerName').value;\r\n      let customer = this._findCustomer(customerName);\r\n\r\n      if (customer === undefined) {\r\n        customer = this.getCustomerObj(customerName);\r\n      }\r\n      customer.phoneNumber = this.salesOrderForm.get('motorVehicleNo').value;\r\n      const salesOrder: SalesOrder = new SalesOrder();\r\n      salesOrder.customer = customer;\r\n      salesOrder.currentBalance = this.getCurrentBalance();\r\n      salesOrder.salesOrderDetail = this.salesOrderDetailArr.value;\r\n      salesOrder.totalPrice = this.totalAmount;\r\n      //salesOrder.vehicleNo = this.salesOrderForm.get('motorVehicleNo').value;\r\n      salesOrder.amountPaid = this.salesOrderForm.get('amountPaid').value;\r\n      salesOrder.dueDate = this.salesOrderForm.get('dueDate').value?.getTime();\r\n      salesOrder.billDate = this.salesOrderForm.get('billDate').value?.getTime();\r\n      salesOrder.previousBalance = this.getTotalBalance();\r\n      salesOrder.deliverStatus = this.selected_deliver_status;\r\n      salesOrder.paymentMode = this.selected_payment_mode;\r\n      salesOrder.currentDue = this.previousBalance;\r\n\r\n      if (salesOrder.amountPaid < 0) {\r\n        // alert('Amount paid should be positive');\r\n        this.showAlert(\"Error\", \"Amount paid should be positive\", \"\");\r\n        this.singleClickDisable = false;\r\n        return;\r\n      } else if (this.getTotalBalance() < 0) {\r\n        // alert('Amount paid should be equals to balance');\r\n        this.showAlert(\"Error\", \"Amount paid should be equals to balance\", \"\");\r\n        this.singleClickDisable = false;\r\n        return;\r\n      } else if (this.getTotalBalance() <= 0) {\r\n        salesOrder.status = 'PAID';\r\n      } else if (salesOrder.amountPaid > 0) {\r\n        salesOrder.status = 'PARTIAL';\r\n      } else {\r\n        salesOrder.status = 'DUE';\r\n      }\r\n\r\n      if ((salesOrder.status === 'DUE' || salesOrder.status === 'PARTIAL') &&\r\n        (customer.customerName === \"\" || customer.phoneNumber === null || customer.phoneNumber === \"\" || salesOrder.dueDate === undefined)) {\r\n        // alert(\"Please don't sell products to unknowns.\\nplease add Customer name, Phone number and Due date to proceed.\")\r\n\r\n        let alertMsg = \"<p>Please provide below details.<br>\";\r\n        let fields = [];\r\n        if (customer.customerName === \"\") {\r\n          fields.push(`<span class=\"text-danger\">Customer name</span>`);\r\n        }\r\n        if (customer.phoneNumber === \"\") {\r\n          fields.push(`<span class=\"text-danger\">Phone number</span>`);\r\n        }\r\n        if (salesOrder.dueDate === undefined) {\r\n          fields.push(`<span class=\"text-danger\">Due date</span>`);\r\n        }\r\n        alertMsg = alertMsg + fields.join(\"<br>\") + \"</p>\";\r\n        this.showAlert(\"Error\", \"\", \"\", alertMsg);\r\n\r\n        this.singleClickDisable = false;\r\n        return;\r\n      }\r\n\r\n      if (salesOrder.amountPaid == null) {\r\n        salesOrder.amountPaid = 0.0;\r\n      }\r\n\r\n      this.salesOrder = salesOrder;\r\n      this.salesOrder.updatedProductSalePriceList = this.updatedProductSalePriceList;\r\n\r\n      this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size: 'sm' }).result.then((result) => {\r\n        this.salesOrderService\r\n          .createSalesOrder(salesOrder).subscribe(data => {\r\n            this.productService.updateProductList(this.updatedProductSalePriceList).subscribe();\r\n            console.log(data);\r\n            //this._printPdf(data);\r\n            this.refreshAfterSave();\r\n            this.singleClickDisable = false;\r\n            if (isPrintReq) {\r\n              this._printPdf(data);\r\n              //window.location.reload();\r\n            } else {\r\n              this.showMsg = true;\r\n              setTimeout(() => {\r\n                this.showMsg = false;\r\n              }, 2000);\r\n            }\r\n          },\r\n            error => {\r\n              console.log(error);\r\n              this.singleClickDisable = false;\r\n            });\r\n      }, (reason) => {\r\n        this.singleClickDisable = false;\r\n      });\r\n    }\r\n    this.singleClickDisable = false;\r\n  }\r\n\r\n  getCustomerObj(customerName: string): any {\r\n    let data = {\r\n      customerName: customerName,\r\n      gstIn: 'NA',\r\n      phoneNumber: 'NA'\r\n    };\r\n    return data;\r\n  }\r\n\r\n  refreshAfterSave() {\r\n    //window.location.reload();\r\n    this.previousBalance = 0;\r\n    this.totalAmount = 0;\r\n    this.salesOrderDetailData = [];\r\n    this.updatedProductSalePriceList = [];\r\n    this.priceChangeHistory = {};\r\n    this._createForm();\r\n    this.fetchData();\r\n    this.totalQty = 0;\r\n  }\r\n\r\n  private _customerBalanceData(customerID: any) {\r\n    this.salesOrderService.getSalesOrderBalaceByCustomer(customerID).subscribe((data: any) => {\r\n      this.previousBalance = data.balance;\r\n      this.salesOrderForm.get('motorVehicleNo').setValue(data.customer.phoneNumber);\r\n    }, (error: any) => console.log(error));\r\n  }\r\n\r\n  private _printPdf(response) {\r\n    //const url = `${location.origin}/praveen-traders/#salesTable`;\r\n    const url = `${location.origin}/#salesTable`;\r\n    console.log('this.response1', JSON.stringify((window['response'])));\r\n    console.log(\"url \", url);\r\n    const myWindow = window.open(url, \"_blank\", \"width=800,height=600,left=250,right=150\");\r\n    console.log(\"response\", response);\r\n    myWindow['response'] = response;\r\n    console.log('this.response2', JSON.stringify((window['response'])));\r\n  }\r\n\r\n  private _filterCustomer(value: string): Customer[] {\r\n    if (!value) {\r\n      this.previousBalance = 0.00;\r\n      return this.customers;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    const customerList = this.customers.filter(option => option.customerName.toLowerCase().includes(filterValue))\r\n    if (customerList.length == 0) {\r\n      this.previousBalance = 0.00;\r\n    }\r\n    return customerList;\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    if (!value) {\r\n      return this.products;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(option => option.productName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _findProduct(value: string): Product {\r\n    return this.products.find(option => option.productName === value);\r\n  }\r\n\r\n  private _findCustomer(value: string): Customer {\r\n    return this.customers.find(option => option.customerName === value);\r\n  }\r\n\r\n  private _initRow(product) {\r\n    return this._fb.group({\r\n      price: [product.currentPrice, [Validators.required, Validators.min(1), Validators.max(100000)]],\r\n      qtyOrdered: [1, [Validators.required, Validators.min(1), Validators.max(10000)]],\r\n      product: [product]\r\n    });\r\n  }\r\n\r\n\r\n  private _addProduct(product: Product) {\r\n    let isProductAdded = true;\r\n    this.salesOrderDetailArr.value.forEach(element => {\r\n      if (product.productName === element.product.productName) {\r\n        // alert('Product is already Added!!');\r\n        this.showAlert(\"Error\", \"Product is already Added!!\", \"\");\r\n\r\n        isProductAdded = false;\r\n      }\r\n    });\r\n\r\n    if (isProductAdded) {\r\n      const newRow = this._initRow(product);\r\n      this.salesOrderDetailArr.push(newRow);\r\n      this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n    }\r\n  }\r\n\r\n  onChangePrice(event: any, product: any): void {\r\n    console.log(event);\r\n    console.log(product.value.product.productName);\r\n    const productId = product.value.product.id;\r\n    const updatedPrice = event.target.value;\r\n    //const previousPrice = this.updatedProductSalePriceList.find((item: any) => item.productId == product.value.product.id)?.price;\r\n    const previousPrice = this.priceChangeHistory[productId];\r\n\r\n    if ((previousPrice != updatedPrice) && (updatedPrice != product.value.product.currentPrice)) {\r\n      this.showAlert(\"Confirm\", \"Are you sure you want to update the price?\", \"\", \"\", (data) => {\r\n        console.log(data);\r\n        const productList = this.salesOrderDetailArr.value;\r\n        this.calculateAllAmounts(productList)\r\n\r\n        if (data === \"ok\") {\r\n          const productItem = {\r\n            price: updatedPrice,\r\n            productName: product.value.product.productName,\r\n            id: product.value.product.id,\r\n          }\r\n\r\n          const existingProduct = this.updatedProductSalePriceList.find((item: any) => item.id == productItem.id);\r\n          if (existingProduct) {\r\n            existingProduct.price = updatedPrice;\r\n          } else {\r\n            this.updatedProductSalePriceList.push(productItem);\r\n          }\r\n        } else {\r\n          //cancel\r\n        }\r\n\r\n        console.log(\"new prices\", this.updatedProductSalePriceList);\r\n        \r\n      });\r\n    } else if (updatedPrice == product.value.product.currentPrice) {\r\n      const tempIndex = this.updatedProductSalePriceList.findIndex(item => item.id === product.value.product.id);\r\n      if (tempIndex !== -1) {\r\n        this.updatedProductSalePriceList.splice(tempIndex, 1);\r\n      }\r\n    }\r\n\r\n    this.priceChangeHistory[productId] = updatedPrice;\r\n  }\r\n\r\n  onChangeQuantity(event: any, product: any): void {\r\n    console.log(this.salesOrderDetailArr);\r\n    console.log(event);\r\n    console.log(product.value.product.productName);\r\n    const productList = this.salesOrderDetailArr.value;\r\n    this.calculateAllAmounts(productList)\r\n  }\r\n\r\n  calculateAllAmounts(productList: any[]): void {\r\n    let totalAmount = 0;\r\n    let totalQtyCal = 0;\r\n    productList.forEach(product => {\r\n      const amount = Number(product.qtyOrdered) * Number(product.price);\r\n      //const taxAmount = amount * (product.product?.gst || 0) / 100;\r\n      totalQtyCal += product.qtyOrdered;\r\n      totalAmount += amount;\r\n    });\r\n    this.totalQty = totalQtyCal;\r\n    this.totalAmount = Math.round(totalAmount);\r\n  }\r\n\r\n  private _valueChangesListner() {\r\n    this.filteredCustomers = this.salesOrderForm.controls['customerName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterCustomer(value))\r\n    );\r\n\r\n    this.filteredProducts = this.salesOrderForm.controls['productName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProduct(value))\r\n    );\r\n\r\n\r\n\r\n    this.salesOrderDetailArr.valueChanges.subscribe((productList) => {\r\n      return;\r\n      let totalAmount = 0;\r\n      let totalQtyCal = 0;\r\n      productList.forEach(product => {\r\n        const amount = Number(product.qtyOrdered) * Number(product.price);\r\n        //const taxAmount = amount * (product.product?.gst || 0) / 100;\r\n        totalQtyCal += product.qtyOrdered;\r\n        totalAmount += amount;\r\n      });\r\n      this.totalQty = totalQtyCal;\r\n      this.totalAmount = Math.round(totalAmount);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private _createForm() {\r\n    this.salesOrderForm = this._fb.group({\r\n      customerName: [''],\r\n      productName: [''],\r\n      motorVehicleNo: [''],\r\n      dueDate: [],\r\n      billDate: [new Date()],\r\n      salesOrderDetail: this._fb.array([]),\r\n      amountPaid: [],\r\n    });\r\n  }\r\n\r\n  get salesOrderDetailArr() {\r\n    return this.salesOrderForm.get('salesOrderDetail') as FormArray;\r\n  }\r\n\r\n  get amountPaid() {\r\n    return this.salesOrderForm.get('amountPaid') as FormControl;\r\n  }\r\n}\r\n","<div class=\"middle\" *ngIf=\"showMsg\">\r\n    <div class=\"col-xs-6\">\r\n        <p class=\"alert alert-success\">\r\n            <strong>Sales Order Successfully created!!</strong>\r\n        </p>\r\n    </div>\r\n</div>\r\n\r\n<form [formGroup]=\"salesOrderForm\">\r\n    <div class=\"d-flex\">\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Product</mat-label>\r\n                <input #searchProduct type=\"text\" aria-label=\"Product\" matInput formControlName=\"productName\" [matAutocomplete]=\"productAuto\">\r\n                <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedProduct($event.option.value)\">\r\n                    <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\r\n                        {{product.productName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-group col-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Customer</mat-label>\r\n                <input type=\"text\" aria-label=\"Customer\" matInput formControlName=\"customerName\" [matAutocomplete]=\"customerAuto\">\r\n                <mat-autocomplete #customerAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedCustomer($event.option.value)\">\r\n                    <mat-option *ngFor=\"let customer of filteredCustomers | async\" [value]=\"customer.customerName\">\r\n                        {{customer.customerName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-group col-2\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-label>Phone number</mat-label>\r\n                <input type=\"text\" aria-label=\"Motor Vehicle no\" matInput formControlName=\"motorVehicleNo\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Bill date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"billDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-group col-2\">\r\n            <mat-label>Due date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker2\" [min]=\"minStartDate\" formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\" ng-model-options=\"{timezone: 'utc'}\">\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n    <div class=\"mat-elevation-z8 sales-order-container\">\r\n        <table formArrayName=\"salesOrderDetail\" [dataSource]=\"salesOrderDetailData\" mat-table>\r\n            <ng-container matColumnDef=\"sno\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">S. No</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\r\n                <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n                <td *matCellDef=\"let element; let i = index;\" mat-cell>\r\n                    <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\r\n                        <mat-icon class=\"delete-button\">delete</mat-icon>\r\n                        <!-- <img src=\"../../assets/delete.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                    </button>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"item\">\r\n                <th *matHeaderCellDef mat-header-cell>Item & Description</th>\r\n                <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Selling Price</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\">\r\n                        <input matInput type=\"number\" formControlName=\"price\" required class=\"text-right\" (blur)=\"onChangePrice($event, element)\">\r\n                        <span matPrefix>₹&nbsp;</span>\r\n                        <!--<mat-error *ngIf=\"element.get('price')?.hasError('required')\">\r\n              Price is Required!\r\n            </mat-error>-->\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('required')\">\r\n                            Selling Price: {{element.get('product')?.value?.currentPrice | number : '1.0-2'}}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('min')\">\r\n                            Price more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('price')?.hasError('max')\">\r\n                            Price can't be greater than 10 lakhs\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"quantity\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\r\n                <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\r\n                    <mat-form-field floatLabel=\"never\" class=\"text-right\">\r\n                        <input matInput type=\"number\" formControlName=\"qtyOrdered\" required (change)=\"onChangeQuantity($event, element)\">\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('required')\">\r\n                            Stock: {{element.get('product')?.value?.qty}}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('min')\">\r\n                            Quantity more than zero\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"element.get('qtyOrdered')?.hasError('max')\">\r\n                            Quantity can't be greater than 10 thousand\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-5\">\r\n                    <h4><b>{{ totalQty }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"amount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Base Price</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value - (element.get('price')?.value * (element.get('product')?.value.gst/100) )}}</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container> -->\r\n\r\n            <!-- <ng-container matColumnDef=\"taxType\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\r\n          CGST/SGST <br> IGST Rate\r\n        </th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.get('product')?.value.gst}}%</td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container> -->\r\n\r\n            <!-- <ng-container matColumnDef=\"taxAmount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100 | number : '1.0-2'}}\r\n        </td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>-->\r\n\r\n            <ng-container matColumnDef=\"totalAmount\">\r\n                <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\r\n                <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n                    ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value | number : '1.0-2'}}\r\n                </td>\r\n                <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">\r\n                    <h4><b>{{ totalAmount | currency:'INR' }}</b></h4>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n            <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n        </table>\r\n        \r\n        \r\n            <!--<div style=\"display: flex; justify-content: space-between\">-->\r\n            <!-- TODO-->\r\n            <!--\r\n            <div class=\"total-container\">\r\n                <div>\r\n                    <mat-form-field>\r\n                        <mat-label>select delivery</mat-label>\r\n                        <mat-select [(value)]=\"selected_deliver_status\">\r\n                            <mat-option value=\"DELIVERED\">DELIVERED</mat-option>\r\n                            <mat-option value=\"NOT_DELIVERED\">NOT DELIVERED</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div>\r\n                    <mat-form-field>\r\n                        <mat-label>select payment</mat-label>\r\n                        <mat-select [(value)]=\"selected_payment_mode\">\r\n                            <mat-option value=\"CASH\">CASH</mat-option>\r\n                            <mat-option value=\"UPI\">UPI/ONLINE</mat-option>\r\n                            <mat-option value=\"CASH_UPI\">CASH & UPI</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            -->\r\n            <div class=\"total-container\">\r\n                <div>\r\n                    <label for=\"name\">Current Balance : </label>\r\n                    <span class=\"amount-read-only\">{{ ((getCurrentBalance() < 0) ? 0 : getCurrentBalance()) | currency:'INR' }}</span>\r\n                </div>\r\n                <div>\r\n                    <label for=\"name\">Previous Balance : </label>\r\n                    <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\r\n                </div>\r\n                <div>\r\n                    <label for=\"name\">Total Pay Balance :</label>\r\n                    <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\r\n                </div>\r\n                <div>\r\n                    <label for=\"name\">Amount Paid : </label>\r\n                    <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\r\n                </div>\r\n                <br>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left: 5px;\" [disabled]=\"singleClickDisable && !salesOrderForm.valid\" (click)=\"save(false, content)\">PLACE\r\n                    ORDER</button>\r\n                <button type=\"submit\" class=\"btn btn-success\" style=\"margin-left: 5px;\" [disabled]=\"singleClickDisable\" (click)=\"save(true, content)\">PLACE ORDER & PRINT</button>\r\n                <button class=\"btn btn-warning\" style=\"margin-left: 5px;\" (click)=\"refreshAfterSave()\">CLEAR</button>\r\n            </div>\r\n        <!-- </div> -->\r\n    </div>\r\n</form>\r\n\r\n<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">Order Summary</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p style=\"font-weight: 500;\">Please confirm below details before save?</p>\r\n\r\n        <div style=\"width: 210px;margin: 25px 0px;\">\r\n            <div class=\"custom-row\">\r\n                <p>Order Status</p>\r\n                <p><span class=\"text-primary\" style=\"color: green !important\">{{salesOrder?.status}}</span></p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Amount Paid</p>\r\n                <p>₹{{salesOrder?.amountPaid}}</p>\r\n            </div>\r\n            <div class=\"custom-row\">\r\n                <p>Balance amount</p>\r\n                <p>₹{{getTotalBalance()}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <p>\r\n            <span class=\"text-danger\">Note: Order placed can't be deleted later!</span>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalContent let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title modal-title-custom\" id=\"modal-basic-title\">{{popupTitle}}</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>{{popupsubtitle}}</strong></p>\r\n        <p>{{popupDescription}}</p>\r\n        <div [innerHTML]=\"popupMarkup\"></div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Save click')\">Ok</button>\r\n    </div>\r\n</ng-template>","export class Category {\n    categoryID: number;\n    categoryName: string;\n    categoryDesc: string;\n}\n","export class HttpClientHelper {\n    //static baseURL: string = 'http://ec2-18-222-37-157.us-east-2.compute.amazonaws.com:8080';\n\n    //Visual studio with backend\n    static baseURL = 'http://localhost:8080';\n\n    //External tomcat server\n    //static baseURL: string = 'http://localhost:8080/smart-accounting-book-backend';\n\n    //AWS server\n    //static baseURL: string = 'http://ec2-3-133-100-17.us-east-2.compute.amazonaws.com:8080/indian-kisan-care-backend';\n\n    //Online mock api\n    //static baseURL = 'https://signin.free.beeceptor.com';\n}\n","import { SalesOrderService } from '../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-profit-summary',\r\n  templateUrl: './profit-summary.component.html',\r\n  styleUrls: ['./profit-summary.component.css']\r\n})\r\nexport class ProfitSummaryComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['position', 'name', 'weight',];\r\n  displayedColumns1: string[] = ['createdDate', 'totalPrice', 'totalProfit', 'dueAmount', 'dueCollection'];\r\n  displayedColumnsProduct: string[] = ['productName', 'qtySold', 'totalPrice'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  reactiveForm: FormGroup;\r\n  dataSource1: any;\r\n  dataSourceProduct: any;\r\n  numberOfnotes: any;\r\n  dateData: Date;\r\n  transaction = 0;\r\n  dueAmount = 0;\r\n  upi = 0;\r\n  expense = 0;\r\n  openingBalance = 0;\r\n  dueCollection = 0;\r\n  difference = 0;\r\n  noOfNotes = 0;\r\n  total = 0;\r\n  notesOf10sTotal = 0;\r\n  notesOf20sTotal = 0;\r\n  notesOf50sTotal = 0;\r\n  notesOf100sTotal = 0;\r\n  notesOf200sTotal = 0;\r\n  notesOf500sTotal = 0;\r\n  notesOf2000sTotal = 0;\r\n  totalNoOfNotesCount = 0;\r\n  notesCount10 = 0;\r\n  notesCount2000 = 0;\r\n  notesCount20 = 0;\r\n  notesCount50 = 0;\r\n  notesCount100 = 0;\r\n  notesCount200 = 0;\r\n  notesCount500 = 0;\r\n  constructor(private salesOrderService: SalesOrderService, private _fb: FormBuilder,) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.reactiveForm = new FormGroup({\r\n      notesOfNotes2000: new FormControl('', [Validators.maxLength(3)]),\r\n      notesOfNotes500: new FormControl('', []),\r\n      notesOfNotes200: new FormControl('', []),\r\n      notesOfNotes100: new FormControl('', []),\r\n      notesOfNotes50: new FormControl('', []),\r\n      notesOfNotes20: new FormControl('', []),\r\n      notesOfNotes10: new FormControl('', []),\r\n    })\r\n\r\n    this.reactiveForm.get(\"notesOfNotes2000\").valueChanges.subscribe(selectedValue => {\r\n      this.notesCount2000 = selectedValue;\r\n      // this.noOfNotes=this.noOfNotes+this.notesCount2000;\r\n      this.total = 2000 * selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.total;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes500\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf500sTotal = 500 * selectedValue\r\n      this.notesCount500 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf500sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes200\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf200sTotal = 200 * selectedValue;\r\n      this.notesCount200 = selectedValue;\r\n      //  this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf200sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes100\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf100sTotal = 100 * selectedValue;\r\n      this.notesCount100 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf100sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes50\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf50sTotal = 50 * selectedValue;\r\n      this.notesCount50 = selectedValue;\r\n      //  this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf50sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes20\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf20sTotal = 20 * selectedValue;\r\n      this.notesCount20 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf20sTotal;\r\n    })\r\n    this.reactiveForm.get(\"notesOfNotes10\").valueChanges.subscribe(selectedValue => {\r\n      this.notesOf10sTotal = 10 * selectedValue;\r\n      this.notesCount10 = selectedValue;\r\n      // this.totalNoOfNotesCount=this.totalNoOfNotesCount+this.notesOf10sTotal;\r\n    })\r\n  }\r\n\r\n  calculate() {\r\n    this.noOfNotes = this.notesCount2000 + this.notesCount500 + this.notesCount200 + this.notesCount100 + this.notesCount50 + this.notesCount20 + this.notesCount10;\r\n    this.totalNoOfNotesCount = this.total + this.notesOf500sTotal + this.notesOf200sTotal + this.notesOf100sTotal + this.notesOf50sTotal + this.notesOf20sTotal + this.notesOf10sTotal;\r\n    this.difference =  (this.dueAmount - this.dueCollection + this.totalNoOfNotesCount + this.upi + this.expense - this.openingBalance) - this.transaction;\r\n  }\r\n  getSalesOrderList() {\r\n    this.salesOrderService.getBarChartReport().subscribe(res => {\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.getData(data[0]);\r\n    this.dataSource1 = new MatTableDataSource(data);\r\n    this.dataSource1.paginator = this.paginator;\r\n  }\r\n  private _setDataProductWise(data) {\r\n    this.dataSourceProduct = new MatTableDataSource(data);\r\n    this.dataSourceProduct.paginator = this.paginator;\r\n  }\r\n\r\n  getData(event) {\r\n    this.calculate();\r\n\r\n    this.dateData = event.billDate;\r\n    this.transaction = event.transaction;\r\n    this.dueAmount = event.dueAmount;\r\n    //this.profit = event.totalProfit;\r\n    this.dueCollection = event.dueCollection;\r\n    this.difference = this.transaction + this.dueAmount + this.dueCollection - this.totalNoOfNotesCount;\r\n    console.log(event);\r\n  }\r\n}","<div class=\"row\">\r\n  <div class=\"form-group col-6\">\r\n    <table [dataSource]=\"dataSource1\" mat-table>\r\n      <ng-container matColumnDef=\"createdDate\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-4\">Bill date</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right-4\" (click)=getData(element) style=\"cursor: pointer;\">\r\n          {{element.billDate}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"totalPrice\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-4\">Transaction</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.transaction.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dueAmount\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Due Amount</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.dueAmount.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"totalProfit\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-6\">Profit</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.profit.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dueCollection\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right-6\">Due Collection</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.dueCollection.toLocaleString('en-IN') || 0}} </td>\r\n      </ng-container>\r\n      <tr *matHeaderRowDef=\"displayedColumns1;  sticky: true\" mat-header-row></tr>\r\n      <tr *matRowDef=\"let row; columns: displayedColumns1;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n  <div class=\"col-3\">\r\n    <div style=\"display: flex;justify-content: center;\">\r\n      <mat-card\r\n        style=\"border:2px solid #5999d2;width:260px;border-top: 25px solid #5999d2;background-color: whitesmoke;padding: 0px;\">\r\n\r\n        <div class=\"container\" style=\"margin-top:20px\">\r\n          <div class=\"row\">\r\n            <div class=\"col-4 \" style=\"padding-left: 0px;padding-right: 0px;\">\r\n              <h3 style=\"margin-top: 5px\" class=\"example-right-align\">2000 X</h3>\r\n              <h3 style=\"\" class=\"example-right-align\">500 X</h3>\r\n              <h3 style=\"margin-top: 0px ;\" class=\"example-right-align\">200 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">100 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">50 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">20 X</h3>\r\n              <h3 style=\"margin-top: 0px;\" class=\"example-right-align\">10 X</h3>\r\n            </div>\r\n            <div class=\"col-4\" style=\"padding-right: 0px;padding-left: 0px;width: 180px;\">\r\n              <form [formGroup]=\"reactiveForm\">\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes2000\" maxlength=\"3\">\r\n                  </mat-form-field>\r\n                  <span style=\"margin-left: 21px;font-size:20px\">=</span>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes500\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes200\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes100\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes50\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes20\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n                <p class=\"profitform\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:40%\">\r\n                    <input matInput type=\"number\" class=\"example-right-align\" (ngModelChange)=\"calculate()\"\r\n                      formControlName=\"notesOfNotes10\">\r\n                  </mat-form-field>\r\n                  <small style=\"margin-left: 21px;font-size:20px\">=</small>\r\n                </p>\r\n              </form>\r\n            </div>\r\n            <div class=\"col-4 \" style=\"padding-right: 40px;width: 20px;\">\r\n              <h4 class=\"example-right-align\">{{total}} </h4>\r\n              <h4 style=\"margin-top: 24px;\" class=\"example-right-align\">{{notesOf500sTotal}} </h4>\r\n              <h4 style=\"margin-top: 24px;\" class=\"example-right-align\">{{notesOf200sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf100sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf50sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf20sTotal}} </h4>\r\n              <h4 style=\"margin-top: 20px;\" class=\"example-right-align\">{{notesOf10sTotal}} </h4>\r\n            </div>\r\n          </div>\r\n          <hr style=\"border-top: 1px solid rgb(89 153 210);margin-top:'0px';margin-bottom:5px;padding:0px\">\r\n          <div style=\"display: flex;justify-content:space-between\">\r\n            <div>\r\n              <h3 class=\"example-right-align\">Notes</h3>\r\n            </div>\r\n            <div>\r\n              <h3 class=\"example-right-align\">{{noOfNotes}}</h3>\r\n            </div>\r\n            <div>\r\n              <h3 class=\"example-right-align\">Total <span class=\"example-right-align\">=</span> {{totalNoOfNotesCount}}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <hr style=\"border-top: 1px solid rgb(89 153 210);margin-top:'0px';margin-bottom:10px\">\r\n        </div>\r\n\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-3\">\r\n    <div style=\"display: flex;justify-content: center;\">\r\n      <mat-card style=\"background-color: whitesmoke; border:2px solid #5999d2;;border-top: 25px solid #5999d2;\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div>\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"date\" max=\"3\" placeholder=\"Bill date\" [(ngModel)]=\"dateData\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Transaction \" [(ngModel)]=\"transaction\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Due Collection \" [(ngModel)]=\"dueCollection\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Due Given \" [(ngModel)]=\"dueAmount\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput placeholder=\"Enter Hard Cash \" [(ngModel)]=\"totalNoOfNotesCount\"\r\n                      class=\"example-right-align\" readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Enter UPI/Online \" [(ngModel)]=\"upi\"\r\n                      (ngModelChange)=\"calculate()\" class=\"example-right-align\">\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Enter Expense/Misc\" [(ngModel)]=\"expense\"\r\n                      (ngModelChange)=\"calculate()\" class=\"example-right-align\">\r\n                  </mat-form-field>\r\n                </p>\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput type=\"number\" placeholder=\"Enter Opening Balance \" [(ngModel)]=\"openingBalance\"\r\n                      (ngModelChange)=\"calculate()\" class=\"example-right-align\">\r\n                  </mat-form-field>\r\n                </p>\r\n\r\n                <p class=\"profitformCalculation\">\r\n                  <mat-form-field class=\"forms-fildes\" style=\"width:67%\">\r\n                    <input matInput placeholder=\"Difference \" [(ngModel)]=\"difference\" class=\"example-right-align\"\r\n                      readonly>\r\n                  </mat-form-field>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-notfound',\r\n    templateUrl: './notfound.component.html',\r\n    styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"error-wrapper\">\r\n        <div class=\"man-icon\"></div>\r\n        <h3 class=\"title\">404</h3>\r\n        <p class=\"info\">Oh! Page not found</p>\r\n        <button class=\"home-btn\" routerLink=\"/dashboard\" type=\"button\">HOME</button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Observable} from 'rxjs';\r\nimport {Location} from 'src/app/_model/location';\r\nimport {LocationService} from 'src/app/_services/location.service';\r\n\r\n@Component({\r\n    selector: 'app-create-location',\r\n    templateUrl: './create-location.component.html',\r\n    styleUrls: ['./create-location.component.css']\r\n})\r\nexport class CreateLocationComponent implements OnInit {\r\n    locationForm: FormGroup;\r\n    locations: Observable<Location[]>;\r\n    location: Location = new Location();\r\n    locationUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    //@ViewChild(MatPaginator) paginator: MatPaginator;\r\n    //displayedColumns: string[] = ['cityName', 'id'];\r\n    dataSource;\r\n\r\n    constructor(private locationService: LocationService,\r\n                public dialogRef: MatDialogRef<CreateLocationComponent>,\r\n                @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.locationUpdateData = data;\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required])\r\n        });\r\n        if (data != null) {\r\n            this.locationForm.controls['cityName'].setValue(this.locationUpdateData.data.cityName);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (this.locationUpdateData?.data.id != null) {\r\n            this.updateLocation();\r\n        } else {\r\n            this.saveLocation();\r\n        }\r\n    }\r\n\r\n    saveLocation() {\r\n        let data = {\r\n            id: this.locationUpdateData?.data.id,\r\n            cityName: this.locationForm.controls.cityName.value\r\n        };\r\n        this.locationService.createLocation(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Location Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    updateLocation() {\r\n        let data = {\r\n            id: this.locationUpdateData?.data.id,\r\n            cityName: this.locationForm.controls.cityName.value\r\n        };\r\n        this.locationService.updateLocation(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Location Successfully Updated..!';\r\n                this.getLocationList();\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    getLocationList() {\r\n        this.locationService.getLocationList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n        }, error => console.log(error));\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div *ngIf=\"locationUpdateData?.data.id==null\" class=\"title-header\">\r\n        <h4 class=\"title\">Add location</h4>\r\n    </div>\r\n    <div *ngIf=\"locationUpdateData?.data.id!=null\" class=\"title-header\">\r\n        <h4 class=\"title\">Update location</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"locationForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"cityName\" matInput placeholder=\"location Name\" required>\r\n                <mat-error *ngIf=\"locationForm.get('cityName').hasError('required')\">\r\n                    City Name required!\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Save\r\n            </button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { SalesOrderService } from '../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Product } from 'src/app/_model/product';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-stock-book',\r\n  templateUrl: './stock-book.component.html',\r\n  styleUrls: ['./stock-book.component.css']\r\n})\r\nexport class StockBookComponent implements OnInit {\r\n  displayedColumns: string[] = ['sno', 'date', 'productName', 'openingStock', 'soldStock', 'closingStock'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n  dataSourceProduct: any;\r\n  listOfCategories = [];\r\n  products: Product[];\r\n  filteredProducts: Observable<Product[]>;\r\n  productForm: FormGroup;\r\n\r\n  searchText: string;\r\n  startDate: string;\r\n  endDate: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  constructor(private salesOrderService: SalesOrderService, private productService: ProductService) {\r\n    this.productForm = new FormGroup({\r\n      productName: new FormControl(null),\r\n      totalProfit: new FormControl(),\r\n      totalPrice: new FormControl(),\r\n      totalQtySold: new FormControl()\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.getSalesOrderList(1, '0', '0');\r\n    //alert('Please select dropdown')\r\n\r\n    this.productService.getProductsList().subscribe(data => {\r\n      this.products = data;\r\n      this._valueChangesListner();\r\n    });\r\n\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  private _valueChangesListner() {\r\n    this.filteredProducts = this.productForm.controls['productName'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProduct(value))\r\n    );\r\n  }\r\n\r\n  private _filterProduct(value: string): Product[] {\r\n    if (!value) {\r\n      this.searchText = null;\r\n      this.getSalesOrderList(null, this.startDate, this.endDate);\r\n      return this.products;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.products.filter(option => option.productName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  selectedProduct(selectedProduct: string) {\r\n    //this.productForm.controls['productName'].setValue(null);\r\n    this.getSalesOrderList(selectedProduct, this.startDate, this.endDate);\r\n    this.searchText = selectedProduct;\r\n    //this.getSalesOrderList('0','0');\r\n  }\r\n\r\n  private _findProduct(value: string): Product {\r\n    return this.products.find(option => option.productName === value);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n    this.startDate = null;\r\n    this.endDate = null;\r\n    this.getSalesOrderList(this.searchText, null, null);\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n\r\n    if (start && end) {\r\n      this.startDate = start.getTime();\r\n      this.endDate = end.getTime() + 86399999;\r\n      if(this.searchText == undefined){\r\n        this.searchText = null;\r\n      }\r\n      this.getSalesOrderList(this.searchText, this.startDate, this.endDate);\r\n    };\r\n  }\r\n\r\n  getSalesOrderList(productName, startDate: string, endDate: string) {\r\n   // if(startDate != \"0\" && endDate != \"0\"){\r\n     if(startDate == undefined || endDate == undefined){\r\n        startDate = null;\r\n        endDate = null;\r\n     }\r\n     //this.searchText = productName; \r\n     this.salesOrderService.getStockBookByDate(productName, startDate, endDate).subscribe(res => {\r\n      this.dataSource = res.stockData;\r\n            this.dataSource = new MatTableDataSource(res.stockData);\r\n            this.dataSource.paginator = this.paginator;\r\n      //this.clearDate();\r\n      this.productForm.controls['totalProfit'].setValue(res.totalProfit);\r\n      this.productForm.controls['totalPrice'].setValue(res.totalPrice);\r\n      this.productForm.controls['totalQtySold'].setValue(res.totalQtySold);\r\n     }, error => console.log(error));\r\n   // }\r\n }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-4\">\r\n    <b><span>Search by Product and Billing date</span></b>\r\n    <br><br>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Product</mat-label>\r\n      <input type=\"text\" aria-label=\"Product\" matInput formControlName=\"productName\" [matAutocomplete]=\"productAuto\">\r\n      <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption\r\n        (optionSelected)=\"selectedProduct($event.option.value)\">\r\n        <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\r\n          {{product.productName}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n        <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n      </mat-datepicker-toggle>\r\n      <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n      <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n      <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n    </mat-form-field>\r\n\r\n    <br><br><br><br>\r\n    <b><span>Stock Summary</span></b>\r\n    <br><br>\r\n    <div class=\"product-conatiner\">\r\n      <form [formGroup]=\"productForm\">\r\n        <!--<div class=\"addproduct-container\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Total Transaction</mat-label>\r\n              <input type=\"text\" formControlName=\"totalPrice\" matInput readonly>\r\n            </mat-form-field>\r\n            <br>\r\n          </div>-->\r\n\r\n        <div class=\"addproduct-container\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Total Qty Sold</mat-label>\r\n            <input type=\"text\" formControlName=\"totalQtySold\" matInput readonly>\r\n          </mat-form-field>\r\n          <br>\r\n        </div>\r\n\r\n        <div class=\"addproduct-container\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Total Profit</mat-label>\r\n            <input type=\"text\" formControlName=\"totalProfit\" matInput readonly>\r\n          </mat-form-field>\r\n          <br>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" mat-table>\r\n      <ng-container matColumnDef=\"sno\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-left pr-2\">S.No</th>\r\n        <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\r\n        <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Billing Date</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\"> {{element.date | date: 'dd/MM/yyyy'}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"productName\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Product Name</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-left pr-4\">\r\n          {{element.stockBook.productName}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"openingStock\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Opening Stock</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.stockBook.openingStock}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"soldStock\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Qty Sold</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.stockBook.soldStock}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"closingStock\">\r\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Closing Stock</th>\r\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\r\n          {{element.stockBook.closingStock}} </td>\r\n      </ng-container>\r\n\r\n      <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</div>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/company';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCompany(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createCompany(company: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, company);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateCompany(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    deleteCompany(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getCompanyList(): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}`);\r\n    }\r\n}\r\n","import { PurchaseOrderService } from '../../_services/purchase-order.service';\r\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-purchase-report',\r\n  templateUrl: './purchase-report-details.component.html',\r\n  styleUrls: ['./purchase-report-details.component.css']\r\n})\r\nexport class PurchaseReportDetailsComponent implements OnInit {\r\n  displayedColumns: string[] = ['productName', 'price', 'qtyOrdered'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  constructor(public dialog: MatDialog, private purchaseOrderService: PurchaseOrderService,\r\n    @Inject(MAT_DIALOG_DATA) private data) {\r\n    if (data != null) {\r\n      this._setData(data?.data.purchaseOrderDetail);\r\n    }\r\n  }\r\n  ngOnInit(): void { }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.purchaseOrderService.deleteOrderDetails(event.purchaseOrderDetailID).subscribe(\r\n      response => {\r\n        this._setData(JSON.parse(response))\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Could not able to delete purchase order since used in sales order');\r\n      });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"productName\">\r\n      <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Purchase Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.price | number : '1.0-2'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"qtyOrdered\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element;\" mat-cell>\r\n        <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n          <mat-icon class=\"delete-button\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>-->\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\">\r\n    </tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Observable} from 'rxjs';\r\nimport {Company} from 'src/app/_model/company';\r\nimport {CompanyService} from 'src/app/_services/company.service';\r\n\r\n@Component({\r\n    selector: 'app-create-company',\r\n    templateUrl: './create-company.component.html',\r\n    styleUrls: ['./create-company.component.css']\r\n})\r\nexport class CreateCompanyComponent implements OnInit {\r\n    companyForm: FormGroup;\r\n    companies: Observable<Company[]>;\r\n    company: Company = new Company();\r\n    companyUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n\r\n    constructor(private companyService: CompanyService,\r\n                public dialogRef: MatDialogRef<CreateCompanyComponent>,\r\n                @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.companyUpdateData = data;\r\n\r\n        this.companyForm = new FormGroup({\r\n            companyName: new FormControl(null, [Validators.required]),\r\n            phoneNumber: new FormControl(null),\r\n        });\r\n        if (data != null) {\r\n            this.companyForm.controls['companyName'].setValue(this.companyUpdateData.data.companyName);\r\n            this.companyForm.controls['phoneNumber'].setValue(this.companyUpdateData.data.phoneNumber);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.companyUpdateData?.data.id != null) {\r\n            this.updateCompany();\r\n        } else {\r\n            this.saveCompany();\r\n        }\r\n    }\r\n\r\n    saveCompany() {\r\n        let data = {\r\n            id: this.companyUpdateData?.data.id,\r\n            companyName: this.companyForm.controls.companyName.value,\r\n            phoneNumber: this.companyForm.controls.phoneNumber.value\r\n        };\r\n        this.companyService.createCompany(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Company Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    updateCompany() {\r\n        let data = {\r\n            id: this.companyUpdateData?.data.id,\r\n            companyName: this.companyForm.controls.companyName.value,\r\n            phoneNumber: this.companyForm.controls.phoneNumber.value\r\n        };\r\n        this.companyService.updateCompany(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Company Successfully Updated..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        });\r\n    }\r\n\r\n    getCompanyList() {\r\n        this.companyService.getCompanyList().subscribe(data => {\r\n        }, error => console.log(error));\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div *ngIf=\"companyUpdateData?.data.id==null\" class=\"title-header\">\r\n        <h4 class=\"title\">Add Company</h4>\r\n    </div>\r\n    <div *ngIf=\"companyUpdateData?.data.id!=null\" class=\"title-header\">\r\n        <h4 class=\"title\">Update Company</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"companyForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"companyName\" matInput placeholder=\"Company Name\" required>\r\n                <mat-error *ngIf=\"companyForm.get('companyName').hasError('required')\">\r\n                    First Name required!\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!companyForm.valid\" class=\"btn btn-primary\"\r\n                    style=\"width: 25%;margin-left: 5px;\">Save\r\n            </button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { AppComponent } from 'src/app/app.component';\r\n@Component({\r\n  selector: 'app-action-bar',\r\n  templateUrl: './action-bar.component.html',\r\n  styleUrls: ['./action-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionBarComponent implements OnInit{\r\n  private _transformer = (node: MasterNode, level: number) => {\r\n    return {\r\n      expandable: !!node.children && node.children.length > 0,\r\n      name: node.name,\r\n      level: level,\r\n    };\r\n  }\r\n\r\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\r\n    node => node.level, node => node.expandable);\r\n\r\n  treeFlattener = new MatTreeFlattener(\r\n    this._transformer, node => node.level, node => node.expandable, node => node.children);\r\n\r\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSource_Order = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSourceReports = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSourceBalance = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  dataSourceSummary = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  role: boolean;\r\n\r\n  constructor(private router: Router) {\r\n    this.dataSource.data = TREE_DATA;\r\n    this.dataSource_Order.data = Order_DATA;\r\n    this.dataSourceReports.data = REPORTS;\r\n    this.dataSourceSummary.data = SUMMARY;\r\n\r\n    console.log('dataSourceReports', this.dataSourceReports);\r\n  }\r\n  ngOnInit(): void {\r\n    this.role = AppComponent.role_admin || AppComponent.role_super_admin;\r\n  }\r\n\r\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\r\n\r\n  expanded = true;\r\n  selected = '';\r\n\r\n  goTohome() {\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n  getComponent(item) {\r\n    this.selected = TREE_DATA[0].name + item;\r\n    if (item == \"Product\") {\r\n      this.router.navigate(['dashboard/products']);\r\n    }\r\n    if (item == \"Category\") {\r\n      this.router.navigate(['dashboard/categories-list']);\r\n    }\r\n    if (item == \"Supplier\") {\r\n      this.router.navigate(['dashboard/suppliers-list']);\r\n    }\r\n    if (item == \"Customer\") {\r\n      this.router.navigate(['dashboard/customers-list']);\r\n    }\r\n    if (item == \"Company\") {\r\n      this.router.navigate(['dashboard/companies-list']);\r\n    }\r\n    if (item == \"Location\") {\r\n      this.router.navigate(['dashboard/locations-list']);\r\n    }\r\n  }\r\n\r\n  getOrder(item) {\r\n    this.selected = Order_DATA[0].name + item;\r\n    if (item == \"Order\") {\r\n      this.router.navigate(['dashboard/salesOrder']);\r\n    }\r\n    if (item === \"Transactions\") {\r\n      this._redirectToPage('dashboard/sales-report');\r\n    }\r\n    if (item === \"Dues\") {\r\n      this._redirectToPage('dashboard/balance-sheet');\r\n    }\r\n  }\r\n\r\n  getReports(item) {\r\n    this.selected = REPORTS[0].name + item;\r\n    if (item == \"Order\") {\r\n      this.router.navigate(['dashboard/purchaseOrder']);\r\n    }\r\n    if (item === \"Transactions\") {\r\n      this._redirectToPage('dashboard/purchase-report');\r\n    }\r\n    if (item === \"Dues\") {\r\n      this._redirectToPage('dashboard/supplier-balance-sheet');\r\n    }\r\n  }\r\n\r\n  getSummary(item) {\r\n    this.selected = SUMMARY[0].name + item;\r\n    if (item === \"Daily Summary\") {\r\n      this._redirectToPage('dashboard/profit-summary');\r\n    }\r\n    if (item === \"Stock Book\") {\r\n      this._redirectToPage('dashboard/stock-book');\r\n    }\r\n  }\r\n\r\n  private _redirectToPage(route) {\r\n    this.router.navigate([route]);\r\n  }\r\n}\r\n\r\ninterface MasterNode {\r\n  name: string;\r\n  children?: MasterNode[];\r\n}\r\n\r\nconst Order_DATA: MasterNode[] = [\r\n  {\r\n    name: 'SALES',\r\n    children: [\r\n      {\r\n        name: 'Order',\r\n      },\r\n      {\r\n        name: 'Transactions',\r\n      },\r\n      {\r\n        name: 'Dues',\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nconst REPORTS: MasterNode[] = [\r\n  {\r\n    name: 'PURCHASE',\r\n    children: [\r\n      {\r\n        name: 'Order',\r\n      },\r\n      {\r\n        name: 'Transactions',\r\n      },\r\n      {\r\n        name: 'Dues',\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nconst SUMMARY: MasterNode[] = [\r\n  {\r\n    name: 'SUMMARY',\r\n    children: [\r\n      {\r\n        name: 'Daily Summary',\r\n      },\r\n      {\r\n        name: 'Stock Book',\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nconst TREE_DATA: MasterNode[] = [\r\n  {\r\n    name: 'ADD DATA',\r\n    children: [\r\n      {\r\n        name: 'Product',\r\n      }, {\r\n        name: 'Category',\r\n      }, {\r\n        name: 'Location',\r\n      }, {\r\n        name: 'Company',\r\n      }, {\r\n        name: 'Supplier',\r\n      }, {\r\n        name: 'Customer',\r\n      }\r\n    ]\r\n  },\r\n];\r\ninterface ExampleFlatNode {\r\n  expandable: boolean;\r\n  name: string;\r\n  level: number;\r\n}\r\n","<div class=\"action-bar\" [class.action-bar-expanded]=\"expanded\">\r\n\r\n    <!-- Menu Button -->\r\n    <!-- <button class=\"action-bar-item shadow-sm\" (click)=\"expanded = !expanded\">\r\n\t\t<span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\r\n    <span class=\"action-bar-item-text\">Menu</span>\r\n\t</button> -->\r\n\r\n    <app-action-bar-item [shadow]=\"true\" (click)=\"expanded = !expanded\">\r\n        <span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\r\n        <span class=\"action-bar-item-text\">Menu</span>\r\n    </app-action-bar-item>\r\n\r\n    <!-- A vertical navbar -->\r\n    <nav class=\"navbar navbar-light\">\r\n\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav nav\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"/dashboard/home\" routerLinkActive=\"active\" style=\"cursor: pointer;\">\r\n                    <!-- <i class=\"fa fa-home \"></i>  -->\r\n                    <!-- <mat-icon class=\"edit\">home</mat-icon> -->\r\n                    <img src=\"../../assets/home-icon.png\" class=\"home-icon\" alt=\"\" width=\"15px\" height=\"15px\">\r\n                    <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">DASHBOARDS</span> </a>\r\n            </li>\r\n\r\n            <mat-tree [dataSource]=\"dataSource_Order\" [treeControl]=\"treeControl\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSource_Order._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getOrder(node.name)\">\r\n            {{node.name}}</button>\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <mat-tree *ngIf=\"true\" [dataSource]=\"dataSourceReports\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSourceReports._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getReports(node.name)\">\r\n            {{node.name}}</button>\r\n\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSource._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getComponent(node.name)\">\r\n            {{node.name}}</button>\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <mat-tree *ngIf=\"role\" [dataSource]=\"dataSourceSummary\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\r\n                <!-- This is the tree node template for leaf nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n                    <!-- use a disabled button to provide padding for tree leaf -->\r\n                    <button mat-icon-button [ngClass]=\"{ 'selected': (dataSourceSummary._flattenedData | async)[0].name + node.name === selected} \" (click)=\"getSummary(node.name)\">\r\n            {{node.name}}</button>\r\n\r\n                </mat-tree-node>\r\n                <!-- This is the tree node template for expandable nodes -->\r\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n            <!-- <img *ngIf=\"treeControl.isExpanded(node)\" src=\"../../assets/expand.png\" alt=\"\" width=\"15px\" height=\"15px\">\r\n            <img *ngIf=\"!treeControl.isExpanded(node)\" src=\"../../assets/right-arrow.png\" alt=\"\" width=\"15px\" height=\"15px\"> -->\r\n          </button>\r\n                    <span matTreeNodeToggle class='menu-item-name' [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            {{node.name}}\r\n          </span>\r\n                </mat-tree-node>\r\n            </mat-tree>\r\n\r\n            <li class=\"nav-item\" *ngIf=\"false\">\r\n                <a class=\"nav-link\" routerLink=\"/dashboard/user\"><i class=\"fa fa-users \"></i> <span *ngIf=\"expanded\"\r\n            class=\"d-none d-sm-inline\">USERS</span></a>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n    </nav>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { BankService } from '../_services/bank.service';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-update-bank-info',\n  templateUrl: './update-bank-info.component.html',\n  styleUrls: ['./update-bank-info.component.css']\n})\nexport class UpdateBankInfoComponent implements OnInit {\n  showMsg: boolean = false;\n  form: any = {};\n  errorMessage = '';\n  roles: string[] = [];\n  registerForm: FormGroup;\n  isSuccessful = false;\n  isSignUpFailed = false;\n\n  favoriteSeason: string;\n  constructor(private bankService: BankService, private router: Router, private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      'bankName': new FormControl(null),\n      'branchName': new FormControl(null),\n      'accountNo': new FormControl(null),\n      'ifscCode': new FormControl(null),\n      'gstNo': new FormControl(null),\n      'panNo': new FormControl(null),\n      'brandName': new FormControl(null),\n      'phoneNumber': new FormControl(null),\n    });\n  }\n\n  uploadedImage: File;\n  dbImage: any;\n  postResponse: any;\n  successResponse: string;\n  image: any;\n\n  public onImageUpload(event) {\n    this.uploadedImage = event.target.files[0];\n  }\n\n  imageUploadAction() {\n    const imageFormData = new FormData();\n    imageFormData.append('image', this.uploadedImage, this.uploadedImage.name);\n\n\n    this.http.post('http://localhost:8080/bank/image', imageFormData, { observe: 'response' })\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.postResponse = response;\n          this.successResponse = this.postResponse.body.message;\n        } else {\n          this.successResponse = 'Image not uploaded due to some error!';\n        }\n      }\n      );\n    }\n\n    viewImage() {\n      this.http.get('http://localhost:8080/bank/image/info/logo3.jfif')\n        .subscribe(\n          res => {\n            this.postResponse = res;\n            this.dbImage = 'data:image/jpeg;base64,' + this.postResponse.image;\n          }\n        );\n    }\n\n  onSubmit() {\n    let data = {\n      \"bankName\": this.registerForm.controls.bankName.value ? this.registerForm.controls.bankName.value.toUpperCase() : '',\n      \"branchName\": this.registerForm.controls.branchName.value,\n      \"accountNo\": this.registerForm.controls.accountNo.value,\n      \"ifscCode\": this.registerForm.controls.ifscCode.value ? this.registerForm.controls.ifscCode.value.toUpperCase() : '',\n      \"phoneNumber\": this.registerForm.controls.phoneNumber.value,\n      \"gstNo\": this.registerForm.controls.gstNo.value ? this.registerForm.controls.gstNo.value.toUpperCase() : '',\n      \"panNo\": this.registerForm.controls.panNo.value ? this.registerForm.controls.panNo.value.toUpperCase() : '',\n      \"brandName\": this.registerForm.controls.brandName.value ? this.registerForm.controls.brandName.value.toUpperCase() : '',\n    };\n\n    this.bankService.createBank(data).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n\n        this.showMsg = true;\n        setTimeout(() => {\n          this.showMsg = false;\n        }, 2000);\n      },\n      err => {\n        this.errorMessage = err.error.error;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n\n\n\n\n\n\n\n\n\n}\n","<div class=\"col-md-12\">\n    <div class=\"\">\n        <!-- <img class=\"profile-img-card\" id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" /> -->\n        <mat-card style=\"width: 90%;\">\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                <h1 style=\"text-align: center;\">Update Bank Details</h1>\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Bank name</mat-label>\n                                    <input matInput formControlName=\"bankName\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Account number</mat-label>\n                                    <input matInput formControlName=\"accountNo\">\n                                </mat-form-field>\n                            </p>\n\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>IFSC code</mat-label>\n                                    <input matInput formControlName=\"ifscCode\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Branch name</mat-label>\n                                    <input matInput formControlName=\"branchName\">\n                                </mat-form-field>\n                            </p>\n                        </div>\n                        <div class=\"col-6\">\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>PAN number</mat-label>\n                                    <input matInput formControlName=\"panNo\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>GST number</mat-label>\n                                    <input matInput formControlName=\"gstNo\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                    <mat-label>Brand name</mat-label>\n                                    <input matInput formControlName=\"brandName\">\n                                </mat-form-field>\n                            </p>\n                            <p style=\"text-align: center;\">\n                                <mat-form-field appearance=\"legacy\" style=\"width: 250px;\">\n                                    <mat-label>Phone number</mat-label>\n                                    <input matInput formControlName=\"phoneNumber\">\n                                </mat-form-field>\n                            </p>\n\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"image\" placeholder=\"Search Image\" [(ngModel)]=\"image\" name=\"image\" />\n                                <input type=\"button\" (click)=\"viewImage()\" value=\"View Image\" class=\"btn1\">\n                    \n                            </div>\n                            \n                            <div class=\"form-group\">\n                                <input type=\"file\" (change)=\"onImageUpload($event)\">\n                                <input type=\"button\" (click)=\"imageUploadAction()\" value=\"Upload Image\" class=\"btn1\">\n                            </div>\n\n                            <div>\n                                <output *ngIf=successResponse class=\"success\"><b>{{successResponse}}</b></output>\n                            </div>\n                            <br>\n\n                            <div *ngIf=dbImage>\n                                <img [src]=\"dbImage\">\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"button-container\">\n                    <span style=\"color: red;\">{{errorMessage}}</span>\n\n                </div>\n                <div class=\"button-container\">\n\n                    <button class=\"btn btn-primary\" type=\"submit\"\n                        style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\n                    </button>\n                </div>\n            </form>\n\n        </mat-card>\n    </div>\n</div>\n\n<div class=\"middle\" *ngIf=\"showMsg\">\n    <div class=\"col-xs-6\">\n        <p class=\"alert alert-success\">\n            <strong>Bank details Successfully updated!!</strong>\n        </p>\n    </div>\n</div>","const a = ['', 'One ', 'Two ', 'Three ', 'Four ', 'Five ', 'Six ', 'Seven ', 'Eight ', 'Nine ', 'Ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];\r\nconst b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\nexport function numberInWords(num) {\r\n    if ((num = num.toString()).length > 9) return 'overflow';\r\n    const n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n    if (!n)\r\n        return '';\r\n    var str = '';\r\n    str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'Crore ' : '';\r\n    str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'Lakh ' : '';\r\n    str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'Thousand ' : '';\r\n    str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'Hundred ' : '';\r\n    str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'Only ' : '';\r\n    return str;\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {CompanyService} from 'src/app/_services/company.service';\r\nimport {CustomerService} from 'src/app/_services/customer.service';\r\nimport {CreateCustomerComponent} from '../create-customer/create-customer.component';\r\n\r\n@Component({\r\n    selector: 'app-customers-list',\r\n    templateUrl: './customers-list.component.html',\r\n    styleUrls: ['./customers-list.component.css']\r\n})\r\nexport class CustomersListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['customerName', 'phoneNumber', 'location', 'GSTIN', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCustomerList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCustomerList();\r\n        });\r\n    }\r\n\r\n    updateCustomer(updateCustomer): void {\r\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: {data: updateCustomer}\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getCustomerList();\r\n        });\r\n    }\r\n\r\n    getCustomerList() {\r\n        this.customerService.getCustomerList().subscribe(data => {\r\n            this.dataSource = data;\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    deleteCustomer(event) {\r\n        this.customerService.deleteCustomer(event.id).subscribe(\r\n            response => {\r\n                this.getCustomerList();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n}\r\n\r\n\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Customer\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"customerName\">\r\n            <th *matHeaderCellDef mat-header-cell>Customer</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.customerName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"GSTIN\">\r\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"phoneNumber\">\r\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"location\">\r\n            <th *matHeaderCellDef mat-header-cell> Location</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateCustomer(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                        <button (click)=\"deleteCustomer(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n    \r\n                    </button>\r\n                        <br>\r\n\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n            </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {SupplierService} from 'src/app/_services/supplier.service';\r\nimport {CreateSupplierComponent} from '../create-supplier/create-supplier.component';\r\n\r\n@Component({\r\n    selector: 'app-supplier-list',\r\n    templateUrl: './supplier-list.component.html',\r\n    styleUrls: ['./supplier-list.component.css'],\r\n\r\n})\r\nexport class SupplierListComponent implements OnInit {\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['supplierName', 'phoneNumber', 'company', 'location', 'GSTIN', 'id'];\r\n    dataSource;\r\n\r\n    constructor(public dialog: MatDialog, private supplierService: SupplierService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getSupplierList();\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\r\n            width: '550px',\r\n            disableClose: true\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getSupplierList();\r\n        });\r\n    }\r\n\r\n    getSupplierList() {\r\n        this.supplierService.getSupplierList()\r\n            .subscribe(data => {\r\n                this.dataSource = data;\r\n                this.dataSource = new MatTableDataSource(data);\r\n                this.dataSource.paginator = this.paginator;\r\n            }, error => console.log(error));\r\n    }\r\n\r\n    deleteSupllier(event) {\r\n        this.supplierService.deleteSupplier(event.id).subscribe(\r\n            response => {\r\n                this.getSupplierList();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    updateSuppliers(updateSupplier): void {\r\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\r\n            width: '550px',\r\n            disableClose: true,\r\n            data: {data: updateSupplier}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.getSupplierList();\r\n        });\r\n    }\r\n}\r\n","<div class=\"inline-center\">\r\n    <mat-form-field style=\"width: 300px;\">\r\n        <mat-label>Search</mat-label>\r\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\r\n    </mat-form-field>\r\n    <div>\r\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Supplier\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\r\n\r\n        <!-- Position customer -->\r\n        <ng-container matColumnDef=\"supplierName\">\r\n            <th *matHeaderCellDef mat-header-cell>Supplier</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.supplierName}} </td>\r\n            <td *matCellDef=\"let element\" hidden mat-cell> {{element.id}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"GSTIN\">\r\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"company\">\r\n            <th *matHeaderCellDef mat-header-cell> Company</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.company?.companyName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"location\">\r\n            <th *matHeaderCellDef mat-header-cell> Location</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"phoneNumber\">\r\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell> Action</th>\r\n            <td *matCellDef=\"let element\" mat-cell>\r\n\r\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n                    <!-- <img src=\"../../assets/ellipse.png\" class=\"home-icon\" alt=\"\" width=\"25px\" height=\"25px\"> -->\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n                    <div>\r\n                        <button (click)=\"updateSuppliers(element)\" class=\"btn btn-info\" style=\"padding: 0 20px;margin-left: 15px;margin-right: 15px;height:40px\">\r\n                            <div style=\"display:flex;align-items: center;\">\r\n                                <!-- <img src=\"../../assets/edit.png \" class=\"home-icon \" alt=\" \" width=\"18px\" height=\"18px\"> -->\r\n                                <mat-icon class=\"edit\">edit</mat-icon>\r\n                                <div style=\"margin-left: 10px; \">Update </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                        <button (click)=\"deleteSupllier(element)\" class=\"btn btn-danger \" style=\"padding: 0 20px;margin-top:8px;margin-left: 15px;margin-right: 15px;height:40px \">\r\n                            <div style=\"display:flex \">\r\n                                <!-- <img src=\"../../assets/delete.png \" class=\"home-icon \" alt=\" \" width=\"25px \" height=\"25px \"> -->\r\n                                <mat-icon>delete</mat-icon>\r\n                                <div style=\"margin-left: 5px; \">Delete </div>\r\n                            </div>\r\n                        </button>\r\n                        <br>\r\n\r\n                    </div>\r\n                </mat-menu>\r\n                <!--  -->\r\n\r\n            </td>\r\n        </ng-container>\r\n\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>","import { PurchaseOrderService } from './../../_services/purchase-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PurchaseReportDetailsComponent } from '../purchase-report-details/purchase-report-details.component';\r\n\r\n@Component({\r\n  selector: 'app-purchase-report',\r\n  templateUrl: './purchase-report.component.html',\r\n  styleUrls: ['./purchase-report.component.css']\r\n})\r\nexport class PurchaseReportComponent implements OnInit {\r\n  displayedColumns: string[] = ['billDate', 'dueDate', 'supplierName', 'totalPrice', 'amountPaid', 'dueAmount'];\r\n  productColumns: string[] = ['id', 'productName', 'purchasePrice', 'qtyOrdered'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  purchaseReports;\r\n\r\n  constructor(public dialog: MatDialog, private purchaseOrderService: PurchaseOrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getPurchaseOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getPurchaseOrderList() {\r\n    this.purchaseOrderService.getPurchaseOrderList().subscribe(res => {\r\n      this.purchaseReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearSupplierSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.purchaseReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.purchaseReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime() + 86399999;\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(purchaseReport => {\r\n        const dueDateTime = new Date(purchaseReport?.billDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(purchaseReport => purchaseReport?.supplier?.supplierName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteSalesOrder(event) {\r\n    this.purchaseOrderService.deleteOrder(event.purchaseOrderID).subscribe(\r\n      response => {\r\n        this.getPurchaseOrderList();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Could not able to delete purchase order since used in sales order');\r\n      });\r\n  }\r\n\r\n  updateProduct(updateProduct): void {\r\n    const dialogRef = this.dialog.open(PurchaseReportDetailsComponent, {\r\n      width: '950px',\r\n      disableClose: false,\r\n      data: { data: updateProduct }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getPurchaseOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-3\">\r\n    <mat-form-field class=\"example-form-field\">\r\n      <mat-label>Search Supplier</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\" placeholder=\"Search Supplier\">\r\n      <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearSupplierSearch()\">\r\n        <mat-icon>clear</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-form-field>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n      <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"supplierName\">\r\n      <th *matHeaderCellDef mat-header-cell>Supplier</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.supplier?.supplierName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"billDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        <button (click)=\"updateProduct(element)\">\r\n          {{element.billDate | date: 'dd/MM/yyyy hh:mm a'}}\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n    <!--<ng-container matColumnDef=\"productDesc\">\r\n      <th *matHeaderCellDef mat-header-cell> Action</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n\r\n          <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\r\n              <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\r\n              <div>\r\n                  <button (click)=\"updateProduct(element)\" class=\"btn btn-info\"\r\n                          style=\"width: 80px;margin-left: 15px;\">\r\n                      Update\r\n                  </button>\r\n                  <br>\r\n                  <button (click)=\"deleteProduct(element.id)\"\r\n                          class=\"btn btn-danger\"\r\n                          style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\r\n                  </button>\r\n              </div>\r\n          </mat-menu>\r\n          \r\n\r\n      </td>\r\n  </ng-container>-->\r\n\r\n\r\n    <ng-container matColumnDef=\"dueDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueAmount\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Due amount</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{element.previousBalance.toLocaleString('en-IN')\r\n        || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountPaid\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.amountPaid.toLocaleString('en-IN') || 0}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"totalPrice\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.totalPrice.toLocaleString('en-IN') || 0}}\r\n      </td>\r\n    </ng-container>\r\n\r\n   <!-- <ng-container matColumnDef=\"status\">\r\n      <th *matHeaderCellDef mat-header-cell>Status</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.status}} </td>\r\n    </ng-container>-->\r\n\r\n    <!-- <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element;\" mat-cell>\r\n        <button (click)=\"deleteSalesOrder(element)\" mat-icon-button aria-label=\"Remove Sales order\">\r\n          <mat-icon class=\"delete-button\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>-->\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row [ngbPopover]=\"test\" [placement]=\"['bottom']\"\r\n      triggers=\"mouseenter:mouseleave\">\r\n      <ng-template #test>\r\n        <table [dataSource]=\"row.purchaseOrderDetail\" mat-table class=\"mat-elevation-z2\">\r\n          <ng-container matColumnDef=\"id\">\r\n            <th *matHeaderCellDef mat-header-cell>S.No</th>\r\n            <td *matCellDef=\"let element; let index = index\" mat-cell>\r\n              {{index+1}}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"productName\">\r\n            <th *matHeaderCellDef mat-header-cell>Product Name</th>\r\n            <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"purchasePrice\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Purchase Price</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.price | number : '1.0-2'}}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"qtyOrdered\">\r\n            <th *matHeaderCellDef mat-header-cell class=\"text-right\">Order Qty</th>\r\n            <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.qtyOrdered}} </td>\r\n          </ng-container>\r\n\r\n          <tr *matHeaderRowDef=\"productColumns;  sticky: true\" mat-header-row></tr>\r\n          <tr *matRowDef=\"let row; columns: productColumns;\" mat-row></tr>\r\n        </table>\r\n      </ng-template>\r\n    </tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClientHelper} from '../_model/http-client-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n    private baseUrl = HttpClientHelper.baseURL + '/product';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getProduct(id: number): Observable<any> {\r\n        return this.http.get(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createProduct(product: Object): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}`, product);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    createProductWithCategory(product: Object, id: number): Observable<Object> {\r\n        return this.http.post(`${this.baseUrl}/${id}`, product);\r\n    }\r\n\r\n    // tslint:disable-next-line: ban-types\r\n    updateProduct(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}`, value);\r\n    }\r\n\r\n    updateProductList(value: any): Observable<Object> {\r\n        return this.http.put(`${this.baseUrl}/updatePrice`, value);\r\n    }\r\n\r\n    deleteProduct(id: number): Observable<any> {\r\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\r\n    }\r\n\r\n    getProductsList(): Observable<any> {\r\n        return this.http.get(this.baseUrl);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\n@Component({\r\n    selector: 'app-bank',\r\n    templateUrl: './UpdateBankDetails.component.html',\r\n    styleUrls: ['./UpdateBankDetails.component.css']\r\n})\r\nexport class UpdateBankDetails implements OnInit {\r\n    form: any = {};\r\n    isSuccessful = false;\r\n    isSignUpFailed = false;\r\n    errorMessage = '';\r\n    favoriteSeason: string;\r\n    seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\r\n    constructor(private authService: AuthService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.selection);\r\n\r\n        let data = {\r\n            \"username\": this.form.username,\r\n            \"email\": this.form.email,\r\n            \"password\": this.form.password,\r\n            \"role\": this.selection.map(x => x.role),\r\n            \"bankAccount\": {\r\n                \"bankName\": this.form.bankName,\r\n                \"branchName\": this.form.branchName,\r\n                \"accountNo\": this.form.accountNo,\r\n                \"ifscCode\": this.form.ifscCode,\r\n            },\r\n            \"user\": {\r\n                \"gstNo\": this.form.gstNo,\r\n                \"panNo\": this.form.panNo,\r\n                \"phoneNumber\": this.form.phoneNumber,\r\n                \"brandName\": this.form.brandName,\r\n            }\r\n        };\r\n\r\n        this.authService.register(data).subscribe(\r\n            data => {\r\n                console.log(data);\r\n                this.isSuccessful = true;\r\n                this.isSignUpFailed = false;\r\n                setTimeout(() => {\r\n                    this.router.navigate(['login']);\r\n                }, 2500);\r\n            },\r\n            err => {\r\n                this.errorMessage = err.error.message;\r\n                this.isSignUpFailed = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    selection = [];\r\n\r\n    list = [\r\n        { id: 1, role: 'admin' },\r\n        { id: 2, role: 'user' }\r\n    ];\r\n\r\n    getSelection(item) {\r\n        return this.selection.findIndex(s => s.id === item.id) !== -1;\r\n    }\r\n\r\n    changeHandler(item: any, event: KeyboardEvent) {\r\n        const id = item.id;\r\n\r\n        const index = this.selection.findIndex(u => u.id === id);\r\n        if (index === -1) {\r\n            // ADD TO SELECTION\r\n            // this.selection.push(item);\r\n            this.selection = [...this.selection, item];\r\n        } else {\r\n            // REMOVE FROM SELECTION\r\n            this.selection = this.selection.filter(user => user.id !== item.id)\r\n            // this.selection.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.form;\r\n        this.form.controls['role'].setValue(this.selection);\r\n        console.log(this.selection);\r\n    }\r\n}","<h1>Hello chandra</h1>\r\n<mat-card>\r\n    <h1>chand</h1>\r\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (localStorage.getItem('accessToken')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { PurchaseOrderService } from '../../../_services/purchase-order.service';\r\nimport { SalesOrderService } from '../../../_services/sales-order.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { UpdateBalanceSheetComponent } from '../update-customer-balance-sheet/customer-update-balance-sheet.component';\r\n\r\n@Component({\r\n  selector: 'app-balance-sheet',\r\n  templateUrl: './balance-sheet.component.html',\r\n  styleUrls: ['./balance-sheet.component.css']\r\n})\r\nexport class BalanceSheetComponent implements OnInit {\r\n  displayedColumns: string[] = ['customerName', 'phoneNumber', 'totalPrice', 'amountPaid', 'dueAmount', 'billDate', 'dueDate', 'action'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: any;\r\n\r\n  searchText: string;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl()\r\n  });\r\n\r\n  salesReports;\r\n\r\n  constructor(private dialog: MatDialog, private salesOrderService: SalesOrderService, private purchaseOrderService: PurchaseOrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesOrderList();\r\n    this.range.valueChanges.subscribe(dateRange => {\r\n      if (this.range.valid) {\r\n        this.searchData();\r\n      }\r\n    })\r\n  }\r\n\r\n  getSalesOrderList() {\r\n    this.salesOrderService.getAllCustomerSalesOrderBalanceSheet().subscribe(res => {\r\n      this.salesReports = res;\r\n      this._setData(res);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  clearCustomerSearch() {\r\n    this.searchText = '';\r\n    this._setData(this.salesReports);\r\n  }\r\n\r\n  clearDate() {\r\n    this.range.reset();\r\n  }\r\n\r\n  searchData() {\r\n    const searchText = this.searchText;\r\n    const { start, end } = this.range.value || {};\r\n    let filteredData = this.salesReports;\r\n\r\n    if (start && end) {\r\n      const startTime = start.getTime();\r\n      const endTime = end.getTime();\r\n      // console.log('date===', startTime, endTime, new Date(startTime), new Date(endTime));\r\n      filteredData = filteredData.filter(salesReport => {\r\n        const dueDateTime = new Date(salesReport?.dueDate).getTime();\r\n        return dueDateTime >= startTime && dueDateTime <= endTime\r\n      });\r\n    }\r\n\r\n    if (searchText) {\r\n      filteredData = filteredData.filter(salesReport => salesReport?.customer?.customerName?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1);\r\n    }\r\n    this._setData(filteredData);\r\n  }\r\n\r\n  private _setData(data) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  pay(index: number) {\r\n    alert('s')\r\n    //this.salesOrderDetailArr.removeAt(index);\r\n    //this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\r\n  }\r\n\r\n  updateBalance(updateBalance): void {\r\n    const dialogRef = this.dialog.open(UpdateBalanceSheetComponent, {\r\n      width: '450px',\r\n      disableClose: true,\r\n      data: { data: updateBalance }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.getSalesOrderList();\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\">\r\n  <div class=\"form-group col-3\">\r\n    <mat-form-field class=\"example-form-field\">\r\n      <mat-label>Search Customer</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"searchText\" (input)=\"searchData()\">\r\n      <button *ngIf=\"searchText\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearCustomerSearch()\">\r\n        <mat-icon>clear</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-form-field>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker-toggle matSuffix (click)=\"clearDate()\">\r\n      <mat-icon matDatepickerToggleIcon>clear</mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table [dataSource]=\"dataSource\" mat-table>\r\n    <ng-container matColumnDef=\"customerName\">\r\n      <th *matHeaderCellDef mat-header-cell>Customer</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.customer?.customerName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"phoneNumber\">\r\n      <th *matHeaderCellDef mat-header-cell>Phone number</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.customer?.phoneNumber}} </td>\r\n    </ng-container>\r\n\r\n    <!--<ng-container matColumnDef=\"status\">\r\n      <th *matHeaderCellDef mat-header-cell>Status</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.currentBalance == 0 ? 'PAID': 'DUE'}} </td>\r\n    </ng-container>-->\r\n\r\n    <ng-container matColumnDef=\"totalPrice\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Total Price</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.totalPrice.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountPaid\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right\">Amount Paid</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right\"> {{element.amountPaid.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueAmount\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-right pr-5\">Due amount</th>\r\n      <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-5\"> {{element.currentBalance.toLocaleString('en-IN') || 0}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"billDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Bill date</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        {{element.billDate | date: 'dd/MM/yyyy'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dueDate\">\r\n      <th *matHeaderCellDef mat-header-cell>Due Date</th>\r\n      <td *matCellDef=\"let element\" mat-cell> {{element.dueDate | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\r\n      <td *matCellDef=\"let element\" mat-cell>\r\n        <button (click)=\"updateBalance(element)\" mat-icon-button aria-label=\"Pay Balance\">\r\n          <mat-icon>payment</mat-icon>\r\n        </button>\r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>\r\n\r\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\r\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\r\n  </table>\r\n<mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"50\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<br>","import { TableComponent } from './ui_modules/table/table.component';\r\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\r\nimport { BalanceSheetComponent } from './balance-sheet/customer-balance-sheet/list-customer-balance-sheet/balance-sheet.component';\r\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Router } from '@angular/router';\r\n\r\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\r\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\r\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\r\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\r\nimport { LocationListComponent } from './locations/location-list/location-list.component';\r\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\r\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\r\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\r\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProductListComponent } from './products/product-list/product-list.component';\r\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\r\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\r\nimport { SupplierBalanceSheetComponent } from './balance-sheet/supplier-balance-sheet/list-supplier-balance-sheet/supplier-balance-sheet.component';\r\nimport { ProfitSummaryComponent } from './reports/profit-summary/profit-summary.component';\r\nimport { StockBookComponent } from './reports/stock-book/stock-book.component';\r\nimport { UpdateBankInfoComponent } from './update-bank-info/update-bank-info.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent, },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: '404', component: NotfoundComponent },\r\n\r\n  {\r\n    path: 'dashboard', pathMatch: 'prefix', canActivate: [AuthGuard],\r\n    component: DashboardComponent,\r\n    children: [\r\n      { path: 'products', component: ProductListComponent, canActivate: [AuthGuard] },\r\n      { path: 'category', component: CreateCategoryComponent },\r\n      { path: 'purchaseOrder', component: PurchaseOrderComponent },\r\n      { path: 'salesOrder', component: SalesOrderComponent },\r\n      { path: 'location', component: CreateLocationComponent },\r\n      { path: 'customer', component: CreateCustomerComponent },\r\n      { path: 'supplier', component: CreateSupplierComponent },\r\n      { path: 'balance-sheet', component: BalanceSheetComponent },\r\n      { path: 'supplier-balance-sheet', component: SupplierBalanceSheetComponent },\r\n      { path: 'customers-list', component: CustomersListComponent },\r\n      { path: 'companies-list', component: CompanyListComponent },\r\n      { path: 'suppliers-list', component: SupplierListComponent },\r\n      { path: 'categories-list', component: CategoryListComponent },\r\n      { path: 'locations-list', component: LocationListComponent },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'profit-summary', component: ProfitSummaryComponent },\r\n      { path: 'stock-book', component: StockBookComponent },\r\n      { path: 'sales-report', component: SalesReportComponent },\r\n      { path: 'purchase-report', component: PurchaseReportComponent },\r\n      { path: 'register', component: RegisterComponent },\r\n      { path: 'updateBankDetails', component: UpdateBankInfoComponent }\r\n    ]\r\n  },\r\n  { path: 'table', component: TableComponent },\r\n  { path: 'salesTable', component: SalesTableComponent },\r\n  { path: '**', redirectTo: '404', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    form: any = {};\n    errorMessage = '';\n    roles: string[] = [];\n    loginForm: FormGroup;\n    hide = true;\n    constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (this.tokenStorage.getToken()) {\n            this.roles = this.tokenStorage.getUser().roles;\n        }\n        this.loginForm = new FormGroup({\n            'username': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n            'password': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n        });\n    }\n\n    onSubmit() {\n        let reqData = {\n            username: this.loginForm.controls.username.value,\n            password: this.loginForm.controls.password.value\n\n        }\n\n        if (!reqData.username && !reqData.password) {\n            this.errorMessage = \"Username and Password Required\"\n            return;\n        }\n\n        if (!reqData.username) {\n            this.errorMessage = \"Username is Required\"\n            return;\n        }\n\n        if (!reqData.password) {\n            this.errorMessage = \"Password is Required\"\n            return;\n        }\n\n        this.authService.login(reqData).subscribe(\n            data => {\n                this.tokenStorage.saveToken(data.accessToken);\n                localStorage.setItem('accessToken', data.accessToken);\n                this.tokenStorage.saveUser(data);\n                localStorage.setItem('username', data.username);\n                this.roles = this.tokenStorage.getUser().roles;\n                this.router.navigate(['dashboard/home']);\n\n                AppComponent.role_super_admin = this.roles.includes('ROLE_SUPER_ADMIN');\n                AppComponent.role_admin = this.roles.includes('ROLE_ADMIN');\n                AppComponent.role_user = this.roles.includes('ROLE_USER');\n            },\n            err => {\n                this.errorMessage = \"Username or password is wrong.\";\n            }\n        );\n    }\n\n    signup() {\n        this.router.navigate(['register']);\n    }\n}\n","<div class=\"login-container\" style=\"padding:'50px 100px';background:#c5c5cd\">\n    <div class=\"container-fluid\">\n        <div class=\"row\" style=\"padding:'0px';background:#ffffff\">\n            <div class=\"col-6\" ><img src=\"../../assets/images/logo2.jpg\" class=\"home-icon\" alt=\"\" width=\"588px\" height=\"650px\">\n            </div>\n            <div class=\"col-6\" style=\"border-left: 1px solid black;background-color: #3ab397;\">\n                <div>\n                    <h1 style=\"text-align: center;margin-top: 50px;color: white;font-weight: 700;\">Wellcome to xxxxxxxxx\n                    </h1>\n                </div>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <mat-card style=\"margin-top: 50px;\">\n\n                        <div style=\"text-align: center;\">\n                            <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                <mat-label>Username</mat-label>\n                                <input matInput formControlName=\"username\" required>\n                                <mat-icon matPrefix style=\"width: 1.3em;\">person</mat-icon>\n                            </mat-form-field>\n                            <br>\n                        </div>\n                        <div style=\"text-align: center;\">\n                            <mat-form-field appearance=\"legacy\" style=\"width: 251px;\">\n                                <mat-label>Password</mat-label>\n                                <mat-icon matPrefix style=\"width: 1.3em;\">lock</mat-icon>\n                                <input matInput formControlName=\"password\" required [type]=\"hide ? 'password' : 'text'\">\n                                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n                            </mat-form-field>\n                            <br>\n                        </div>\n                        <div class=\"button-container\">\n                            <span style=\"color: red;text-align: center;\">{{errorMessage}}</span>\n                        </div>\n                        <div class=\"button-container\">\n                            <button class=\"btn btn-primary\" type=\"submit\"\n                                style=\"width: 50%;margin-left: 5px;border-radius: 10px;background-color: #3ab397;\">Login\n                            </button>\n                        </div>\n\n                    </mat-card>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { LocationService } from 'src/app/_services/location.service';\r\n\r\n@Component({\r\n    selector: 'app-create-customer',\r\n    templateUrl: './create-customer.component.html',\r\n    styleUrls: ['./create-customer.component.css']\r\n})\r\nexport class CreateCustomerComponent implements OnInit {\r\n\r\n    customerForm: FormGroup;\r\n    locationForm: FormGroup;\r\n    customerUpdateData: any;\r\n    successMsg: any;\r\n    errorMsg: any;\r\n    citiesList: any;\r\n\r\n    constructor(private customerService: CustomerService, private location: LocationService,\r\n        public dialogRef: MatDialogRef<CreateCustomerComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data) {\r\n        this.customerUpdateData = data;\r\n\r\n        this.customerForm = new FormGroup({\r\n            cityName: new FormControl(null),\r\n            customerName: new FormControl(null, [Validators.required]),\r\n            gstIn: new FormControl(null),\r\n            phoneNumber: new FormControl(null),\r\n        });\r\n\r\n        this.locationForm = new FormGroup({\r\n            cityName: new FormControl(null, [Validators.required]),\r\n        });\r\n\r\n        if (data != null) {\r\n            this.customerUpdateData = data?.data;\r\n            this.customerForm.controls['customerName'].setValue(this.customerUpdateData.customerName);\r\n            this.customerForm.controls['gstIn'].setValue(this.customerUpdateData.gstIn);\r\n            this.customerForm.controls['phoneNumber'].setValue(this.customerUpdateData.phoneNumber);\r\n            this.customerForm.controls['cityName'].setValue(this.customerUpdateData.location);\r\n        }\r\n    }\r\n\r\n    closeModal(): void {\r\n            this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getlocationList();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.customerForm.valid) {\r\n            if (this.customerUpdateData?.id != null) {\r\n                this.updateCustomer();\r\n            } else {\r\n                this.saveCustomer();\r\n            }\r\n        }\r\n    }\r\n\r\n    saveCustomer() {\r\n        let data = {\r\n            customerName: this.customerForm.controls.customerName.value,\r\n            gstIn: this.customerForm.controls.gstIn.value,\r\n            location: this.customerForm.controls.cityName.value,\r\n            phoneNumber: this.customerForm.controls.phoneNumber.value,\r\n        };\r\n\r\n        this.customerService.createCustomer(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = 'Customer Successfully Created..!';\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n            alert(this.errorMsg);\r\n        });\r\n    }\r\n\r\n    updateCustomer() {\r\n        let data = {\r\n            id: this.customerUpdateData?.id,\r\n            customerName: this.customerForm.controls.customerName.value,\r\n            gstIn: this.customerForm.controls.gstIn.value,\r\n            location: this.customerForm.controls.cityName.value,\r\n            phoneNumber: this.customerForm.controls.phoneNumber.value,\r\n        };\r\n\r\n        this.customerService.updateCustomer(data).subscribe(res => {\r\n            if (res != null) {\r\n                this.successMsg = \"Customer Successfully Updated..!\";\r\n                this.closeModal();\r\n            }\r\n        }, error => {\r\n            this.errorMsg = error.error.errorMessage;\r\n        })\r\n    }\r\n\r\n    getCustomerList() {\r\n        this.customerService.getCustomerList().subscribe(data => {\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    getlocationList() {\r\n        this.location.getLocationList().subscribe(res => {\r\n            this.citiesList = res;\r\n        });\r\n    }\r\n}\r\n","<div class=\"product-conatiner\">\r\n    <div class=\"title-header\" *ngIf=\"customerUpdateData?.id==null\">\r\n        <h4 class=\"title\">Add Customer</h4>\r\n    </div>\r\n    <div class=\"title-header\" *ngIf=\"customerUpdateData?.id!=null\">\r\n        <h4 class=\"title\">Update Product</h4>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"customerForm\" (submit)=\"onSubmit()\">\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"customerName\" matInput placeholder=\"Customer Name\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"gstIn\" matInput placeholder=\"GSTIN\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <mat-select formControlName=\"cityName\" placeholder=\"City\">\r\n                    <mat-option *ngFor=\"let location of citiesList\" [value]=\"location\">{{location.cityName}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"title-header\">\r\n            <mat-form-field class=\"forms-fildes\">\r\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <button type=\"button\" (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\r\n                style=\"width: 25%;margin-left: 5px;\">Cancel\r\n            </button>\r\n            <button [disabled]=\"!customerForm.valid\" class=\"btn btn-primary\"\r\n                style=\"width: 25%;margin-left: 5px;\">Save\r\n            </button>\r\n        </div>\r\n        <div class=\"button-container\">\r\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\r\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\r\n        </div>\r\n    </form>\r\n\r\n</div>","export class Location {\n    locationID: number;\n    cityName: string;\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}